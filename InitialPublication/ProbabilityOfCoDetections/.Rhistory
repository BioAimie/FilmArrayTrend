for(k in 1:nrow(temp)) {
r.bug.string <- strsplit(as.character(temp$ShortName), split=', ')[[k]]
r.bug.string <- paste(r.bug.string[order(r.bug.string)], collapse=', ')
temp[k,'ShortName'] <- r.bug.string
}
temp <- unique(temp)
probablity.of.combos <- rbind(probablity.of.combos, temp)
}
j
temp
site.periods[j]
heaD(single.dets.site.period)
head(single.dets.site.period)
for(j in 1:length(site.periods)) {
single.dets.site.period <- single.dets.site[single.dets.site$YearWeek==site.periods[j], ]
if(nrow(single.dets.site.period)==1) { next() }
temp <- do.call(rbind, lapply(1:length(single.dets.site.period$ShortName), function(x) data.frame(YearWeek = site.periods[j], CustomerSiteId = sites[i],  ShortName = paste(single.dets.site.period$ShortName[x], single.dets.site.period[single.dets.site.period$ShortName!=single.dets.site.period$ShortName[x],'ShortName'], sep=', '), N = sum(single.dets.site.period$PositiveAssays), P = single.dets.site.period[single.dets.site.period$ShortName==single.dets.site.period$ShortName[x],'PositiveAssays']*single.dets.site.period[single.dets.site.period$ShortName!=single.dets.site.period$ShortName[x],'PositiveAssays']/(sum(single.dets.site.period$PositiveAssays)^2))))
for(k in 1:nrow(temp)) {
r.bug.string <- strsplit(as.character(temp$ShortName), split=', ')[[k]]
r.bug.string <- paste(r.bug.string[order(r.bug.string)], collapse=', ')
temp[k,'ShortName'] <- r.bug.string
}
temp <- unique(temp)
probablity.of.combos <- rbind(probablity.of.combos, temp)
}
View(probablity.of.combos)
rm(a)
head(probablity.of.combos)
combo.probs <- probablity.of.combos
rm(probablity.of.combos)
head(combo.probs)
qnorm(0.975)
qnorm(0.975/10)
0.05/10
qnorm(1-0.05/10)
temp
head(temp)
with(temp, sqrt(P*(1-P)/N))
head(temp)
head(single.dets.site.period)
choose(13, 13)
choose(13, 12)
choose(12, 13)
choose(13, 11)
choose(13, 12)
nrow(temp)
head(single.dets.site.period)
unique(single.dets.site.period$ShortName)
length(unique(single.dets.site.period$ShortName))
qnorm(1-0.05/length(unique(single.dets.site.period$ShortName))*(length(unique(single.dets.site.period$ShortName))-1))
8*7
0.05/56
qnorm(0.05)
qnorm(0.975)
qnorm(1-0.05)
qnorm(1-0.05/2)
qnorm(1-0.05/2)
qnorm(1-0.05/56)
qnorm(1-0.05/(length(unique(single.dets.site.period$ShortName))*(length(unique(single.dets.site.period$ShortName))-1)))
(temp$P + temp$SE*qnorm(1-0.05/(length(unique(single.dets.site.period$ShortName))*(length(unique(single.dets.site.period$ShortName))-1))))*temp$N
(temp$P + temp$SE*qnorm(1-0.05/(length(unique(single.dets.site.period$ShortName))*(length(unique(single.dets.site.period$ShortName))-1))))*temp$N
temp
single.dets.site.period <- single.dets.site[single.dets.site$YearWeek==site.periods[j], ]
if(nrow(single.dets.site.period)==1) { next() }
temp <- do.call(rbind, lapply(1:length(single.dets.site.period$ShortName), function(x) data.frame(YearWeek = site.periods[j], CustomerSiteId = sites[i],  ShortName = paste(single.dets.site.period$ShortName[x], single.dets.site.period[single.dets.site.period$ShortName!=single.dets.site.period$ShortName[x],'ShortName'], sep=', '), N = sum(single.dets.site.period$PositiveAssays), P = single.dets.site.period[single.dets.site.period$ShortName==single.dets.site.period$ShortName[x],'PositiveAssays']*single.dets.site.period[single.dets.site.period$ShortName!=single.dets.site.period$ShortName[x],'PositiveAssays']/(sum(single.dets.site.period$PositiveAssays)^2))))
for(k in 1:nrow(temp)) {
r.bug.string <- strsplit(as.character(temp$ShortName), split=', ')[[k]]
r.bug.string <- paste(r.bug.string[order(r.bug.string)], collapse=', ')
temp[k,'ShortName'] <- r.bug.string
}
temp <- unique(temp)
temp$SE <- with(temp, sqrt(P*(1-P)/N))
temp$LL <- (temp$P + temp$SE*qnorm(1-0.05/(length(unique(single.dets.site.period$ShortName))*(length(unique(single.dets.site.period$ShortName))-1))))*temp$N
temp$UL <- (temp$P + temp$SE*qnorm(1-0.05/(length(unique(single.dets.site.period$ShortName))*(length(unique(single.dets.site.period$ShortName))-1))))*temp$N
temp
single.dets.site.period <- single.dets.site[single.dets.site$YearWeek==site.periods[j], ]
if(nrow(single.dets.site.period)==1) { next() }
temp <- do.call(rbind, lapply(1:length(single.dets.site.period$ShortName), function(x) data.frame(YearWeek = site.periods[j], CustomerSiteId = sites[i],  ShortName = paste(single.dets.site.period$ShortName[x], single.dets.site.period[single.dets.site.period$ShortName!=single.dets.site.period$ShortName[x],'ShortName'], sep=', '), N = sum(single.dets.site.period$PositiveAssays), P = single.dets.site.period[single.dets.site.period$ShortName==single.dets.site.period$ShortName[x],'PositiveAssays']*single.dets.site.period[single.dets.site.period$ShortName!=single.dets.site.period$ShortName[x],'PositiveAssays']/(sum(single.dets.site.period$PositiveAssays)^2))))
for(k in 1:nrow(temp)) {
r.bug.string <- strsplit(as.character(temp$ShortName), split=', ')[[k]]
r.bug.string <- paste(r.bug.string[order(r.bug.string)], collapse=', ')
temp[k,'ShortName'] <- r.bug.string
}
temp <- unique(temp)
temp$SE <- with(temp, sqrt(P*(1-P)/N))
temp$LL <- (temp$P - temp$SE*qnorm(1-0.05/(length(unique(single.dets.site.period$ShortName))*(length(unique(single.dets.site.period$ShortName))-1))))*temp$N
temp$UL <- (temp$P + temp$SE*qnorm(1-0.05/(length(unique(single.dets.site.period$ShortName))*(length(unique(single.dets.site.period$ShortName))-1))))*temp$N
temp
temp$SE*qnorm(1-0.05/(length(unique(single.dets.site.period$ShortName))*(length(unique(single.dets.site.period$ShortName))-1)))
ifelse(temp$LL < 0, 0, ceiling(temp$LL))
head(temp)
head(single.dets.site)
head(single.dets.agg)
head(detections.df)
unique(detections.df$ShortName)
unique(detections.df$CustomerSiteId)
sites <- unique(detections.df$CustomerSiteId)[order(unique(detections.df$CustomerSiteId))]
sites
calendar.df <- createCalendarLikeMicrosoft(2013, 'Week')
calendar.df <- transformToEpiWeeks(calendar.df)
calendar.df$YearWeek <- with(calendar.df, ifelse(Week < 10, paste(Year, Week, sep='-0'), paste(Year, Week, sep='-')))
head(calendar.df)
unique(detections.df$ShortName)
as.character(unique(detections.df$ShortName))
bugs <- as.character(unique(detections.df$ShortName))[order(as.character(unique(detections.df$ShortName)))]
unique(calendar.df$YearWeek)
sites <- unique(detections.df$CustomerSiteId)[order(unique(detections.df$CustomerSiteId))]
periods <- unique(calendar.df$YearWeek)[order(calendar.df$YearWeek)]
bugs <- as.character(unique(detections.df$ShortName))[order(as.character(unique(detections.df$ShortName)))]
head(bugs)
lapply(1:length(periods), function(z) data.frame(CustomerSiteId = sites[1], YearWeek = periods[z], Bug = bugs))
periods
unique(calendar.df$YearWeek)
unique(calendar.df$YearWeek)[order(as.character(unique(detections.df$ShortName)))]
unique(calendar.df$YearWeek)[order(unique(calendar.df$YearWeek))]
periods <- unique(calendar.df$YearWeek)[order(unique(calendar.df$YearWeek))]
periods
lapply(1:length(periods), function(z) data.frame(CustomerSiteId = sites[1], YearWeek = periods[z], Bug = bugs))
do.call(rbind, lapply(1:length(periods), function(z) data.frame(CustomerSiteId = sites[1], YearWeek = periods[z], Bug = bugs)))
a <- do.call(rbind, lapply(1:length(sites), function(x) do.call(rbind, lapply(1:length(periods), function(y) data.frame(CustomerSiteId = sites[x], YearWeek = periods[y], Bug = bugs))))
a <- do.call(rbind, lapply(1:length(sites), function(x) do.call(rbind, lapply(1:length(periods), function(y) data.frame(CustomerSiteId = sites[x], YearWeek = periods[y], Bug = bugs)))))
View(a)
sites
length(sites)*length(bugs)*length(periods)
rm(a)
placeholder.df <- do.call(rbind, lapply(1:length(sites), function(x) do.call(rbind, lapply(1:length(periods), function(y) data.frame(CustomerSiteId = sites[x], YearWeek = periods[y], Bug = bugs)))))
head(placeholder.df)
head(detections.df)
placeholder.df <- do.call(rbind, lapply(1:length(sites), function(x) do.call(rbind, lapply(1:length(periods), function(y) data.frame(CustomerSiteId = sites[x], YearWeek = periods[y], ShortName = bugs)))))
merge(placeholder.df, detections.df, by=c('CustomerSiteId','YearWeek','ShortName'), all.x=TRUE)
head(merge(placeholder.df, detections.df, by=c('CustomerSiteId','YearWeek','ShortName'), all.x=TRUE))
head(merge(placeholder.df, detections.df[,c('CustomerSiteId','YearWeek','ShortName','PositiveAssays')], by=c('CustomerSiteId','YearWeek','ShortName'), all.x=TRUE))
head(single.dets.agg)
single.dets.fill <- merge(placeholder.df, single.dets.agg, by=c('CustomerSiteId','YearWeek','ShortName'), all.x=TRUE)
head(single.dets.fill)
single.dets.fill[is.na(single.dets.fill$PositiveAssays),'PositiveAssays'] <- 0
i
single.dets.site <- single.dets.agg[single.dets.fill$CustomerSiteId==sites[i], ]
site.periods <- unique(single.dets.site$YearWeek)
site.periods <- site.periods[order(site.periods)]
site.periods
combo.probs <- c()
single.dets.site <- single.dets.agg[single.dets.fill$CustomerSiteId==sites[i], ]
site.periods <- unique(single.dets.site$YearWeek)
site.periods <- site.periods[order(site.periods)]
for(j in 1:length(site.periods)) {
single.dets.site.period <- single.dets.site[single.dets.site$YearWeek==site.periods[j], ]
if(nrow(single.dets.site.period)==1) { next() }
temp <- do.call(rbind, lapply(1:length(single.dets.site.period$ShortName), function(x) data.frame(YearWeek = site.periods[j], CustomerSiteId = sites[i],  ShortName = paste(single.dets.site.period$ShortName[x], single.dets.site.period[single.dets.site.period$ShortName!=single.dets.site.period$ShortName[x],'ShortName'], sep=', '), N = sum(single.dets.site.period$PositiveAssays), P = single.dets.site.period[single.dets.site.period$ShortName==single.dets.site.period$ShortName[x],'PositiveAssays']*single.dets.site.period[single.dets.site.period$ShortName!=single.dets.site.period$ShortName[x],'PositiveAssays']/(sum(single.dets.site.period$PositiveAssays)^2))))
for(k in 1:nrow(temp)) {
r.bug.string <- strsplit(as.character(temp$ShortName), split=', ')[[k]]
r.bug.string <- paste(r.bug.string[order(r.bug.string)], collapse=', ')
temp[k,'ShortName'] <- r.bug.string
}
temp <- unique(temp)
temp$SE <- with(temp, sqrt(P*(1-P)/N))
temp$LL <- (temp$P - temp$SE*qnorm(1-0.05/(length(unique(single.dets.site.period$ShortName))*(length(unique(single.dets.site.period$ShortName))-1))))*temp$N
temp$UL <- ceiling((temp$P + temp$SE*qnorm(1-0.05/(length(unique(single.dets.site.period$ShortName))*(length(unique(single.dets.site.period$ShortName))-1))))*temp$N)
temp$LL <- ifelse(temp$LL < 0, 0, ceiling(temp$LL))
combo.probs <- rbind(combo.probs, temp)
}
j
head(single.dets.site.period)
single.dets.site.period
single.dets.site.period
temp
single.dets.site <- single.dets.fill[single.dets.fill$CustomerSiteId==sites[i], ]
site.periods <- unique(single.dets.site$YearWeek)
site.periods <- site.periods[order(site.periods)]
for(j in 1:length(site.periods)) {
single.dets.site.period <- single.dets.site[single.dets.site$YearWeek==site.periods[j], ]
if(nrow(single.dets.site.period)==1) { next() }
temp <- do.call(rbind, lapply(1:length(single.dets.site.period$ShortName), function(x) data.frame(YearWeek = site.periods[j], CustomerSiteId = sites[i],  ShortName = paste(single.dets.site.period$ShortName[x], single.dets.site.period[single.dets.site.period$ShortName!=single.dets.site.period$ShortName[x],'ShortName'], sep=', '), N = sum(single.dets.site.period$PositiveAssays), P = single.dets.site.period[single.dets.site.period$ShortName==single.dets.site.period$ShortName[x],'PositiveAssays']*single.dets.site.period[single.dets.site.period$ShortName!=single.dets.site.period$ShortName[x],'PositiveAssays']/(sum(single.dets.site.period$PositiveAssays)^2))))
for(k in 1:nrow(temp)) {
r.bug.string <- strsplit(as.character(temp$ShortName), split=', ')[[k]]
r.bug.string <- paste(r.bug.string[order(r.bug.string)], collapse=', ')
temp[k,'ShortName'] <- r.bug.string
}
temp <- unique(temp)
temp$SE <- with(temp, sqrt(P*(1-P)/N))
temp$LL <- (temp$P - temp$SE*qnorm(1-0.05/(length(unique(single.dets.site.period$ShortName))*(length(unique(single.dets.site.period$ShortName))-1))))*temp$N
temp$UL <- ceiling((temp$P + temp$SE*qnorm(1-0.05/(length(unique(single.dets.site.period$ShortName))*(length(unique(single.dets.site.period$ShortName))-1))))*temp$N)
temp$LL <- ifelse(temp$LL < 0, 0, ceiling(temp$LL))
combo.probs <- rbind(combo.probs, temp)
}
combo.probs <- c()
sites[i]
single.dets.site <- single.dets.fill[single.dets.fill$CustomerSiteId==sites[i], ]
site.periods <- unique(single.dets.site$YearWeek)
site.periods <- site.periods[order(site.periods)]
for(j in 1:length(site.periods)) {
single.dets.site.period <- single.dets.site[single.dets.site$YearWeek==site.periods[j], ]
if(nrow(single.dets.site.period)==1) { next() }
temp <- do.call(rbind, lapply(1:length(single.dets.site.period$ShortName), function(x) data.frame(YearWeek = site.periods[j], CustomerSiteId = sites[i],  ShortName = paste(single.dets.site.period$ShortName[x], single.dets.site.period[single.dets.site.period$ShortName!=single.dets.site.period$ShortName[x],'ShortName'], sep=', '), N = sum(single.dets.site.period$PositiveAssays), P = single.dets.site.period[single.dets.site.period$ShortName==single.dets.site.period$ShortName[x],'PositiveAssays']*single.dets.site.period[single.dets.site.period$ShortName!=single.dets.site.period$ShortName[x],'PositiveAssays']/(sum(single.dets.site.period$PositiveAssays)^2))))
for(k in 1:nrow(temp)) {
r.bug.string <- strsplit(as.character(temp$ShortName), split=', ')[[k]]
r.bug.string <- paste(r.bug.string[order(r.bug.string)], collapse=', ')
temp[k,'ShortName'] <- r.bug.string
}
temp <- unique(temp)
temp$SE <- with(temp, sqrt(P*(1-P)/N))
temp$LL <- (temp$P - temp$SE*qnorm(1-0.05/(length(unique(single.dets.site.period$ShortName))*(length(unique(single.dets.site.period$ShortName))-1))))*temp$N
temp$UL <- ceiling((temp$P + temp$SE*qnorm(1-0.05/(length(unique(single.dets.site.period$ShortName))*(length(unique(single.dets.site.period$ShortName))-1))))*temp$N)
temp$LL <- ifelse(temp$LL < 0, 0, ceiling(temp$LL))
combo.probs <- rbind(combo.probs, temp)
}
View(combo.probs)
head(combo.probs)
head(single.dets.site)
a <- single.dets.site
head(a)
length(bugs)
choose(20, 4)
library(RODBC)
library(lubridate)
library(ggplot2)
library(scales)
require(dateManip)
library(dplyr)
library(tidyr)
source('../../Rfunctions/generateCombosBetter.R')
FADWcxn <- odbcConnect(dsn = 'FA_DW', uid = 'afaucett', pwd = 'ThisIsAPassword-BAD')
queryVector <- readLines('AllRespiratoryDetectionsBySiteAndDate.sql')
query <- paste(queryVector,collapse="\n")
detections.df <- sqlQuery(FADWcxn,query)
odbcClose(FADWcxn)
# Create an epi calendar
calendar.df <- createCalendarLikeMicrosoft(2013, 'Week')
calendar.df <- transformToEpiWeeks(calendar.df)
calendar.df$YearWeek <- with(calendar.df, ifelse(Week < 10, paste(Year, Week, sep='-0'), paste(Year, Week, sep='-')))
# Create a generic data frame that has a place holder for each week and each bug for each site
sites <- unique(detections.df$CustomerSiteId)[order(unique(detections.df$CustomerSiteId))]
periods <- unique(calendar.df$YearWeek)[order(unique(calendar.df$YearWeek))]
bugs <- as.character(unique(detections.df$ShortName))[order(as.character(unique(detections.df$ShortName)))]
placeholder.df <- do.call(rbind, lapply(1:length(sites), function(x) do.call(rbind, lapply(1:length(periods), function(y) data.frame(CustomerSiteId = sites[x], YearWeek = periods[y], ShortName = bugs)))))
detections.df <- merge(calendar.df, detections.df, by='Date')
# How many of the detections are single detections vs. co-detections of any number?
ggplot(unique(detections.df[,c('RunDataId','PositiveAssays')]), aes(x=PositiveAssays)) + geom_histogram(binwidth = 1)
# The overwhelming majority of positives tests have a single positive target
single.dets <- subset(detections.df, PositiveAssays==1)
quad.dets <- subset(detections.df, PositiveAssays==4)
single.dets.agg <- with(single.dets, aggregate(PositiveAssays~YearWeek+CustomerSiteId+ShortName, FUN=sum))
single.dets.fill <- merge(placeholder.df, single.dets.agg, by=c('CustomerSiteId','YearWeek','ShortName'), all.x=TRUE)
single.dets.fill[is.na(single.dets.fill$PositiveAssays),'PositiveAssays'] <- 0
head(single.dets.fill)
workDir <-'~/FilmArrayTrend/InitialPublication/ProbabilityOfCoDetections/'
setwd(workDir)
# load libraries
library(RODBC)
library(lubridate)
library(ggplot2)
library(scales)
require(dateManip)
library(dplyr)
library(tidyr)
# load custom functions
source('~/WebHub/AnalyticsWebHub/Rfunctions/createPaletteOfVariableLength.R')
source('../../Rfunctions/generateCombosBetter.R')
detections.df <- subset(test.df, ShortName != 'Neg')
workDir <-'~/FilmArrayTrend/InitialPublication/ProbabilityOfCoDetections/'
setwd(workDir)
# load libraries
library(RODBC)
library(lubridate)
library(ggplot2)
library(scales)
require(dateManip)
library(dplyr)
library(tidyr)
# load custom functions
source('~/WebHub/AnalyticsWebHub/Rfunctions/createPaletteOfVariableLength.R')
source('../../Rfunctions/generateCombosBetter.R')
# read in the data from FilmArray Data Warehouse DB (ODBC object in Windows "FA_DW" with Lindsay's credentials)
FADWcxn <- odbcConnect(dsn = 'FA_DW', uid = 'afaucett', pwd = 'ThisIsAPassword-BAD')
queryVector <- readLines('AllRespiratoryDetectionsBySiteAndDate.sql')
query <- paste(queryVector,collapse="\n")
tests.df <- sqlQuery(FADWcxn,query)
odbcClose(FADWcxn)
detections.df <- subset(test.df, ShortName != 'Neg')
calendar.df <- createCalendarLikeMicrosoft(2013, 'Week')
calendar.df <- transformToEpiWeeks(calendar.df)
calendar.df$YearWeek <- with(calendar.df, ifelse(Week < 10, paste(Year, Week, sep='-0'), paste(Year, Week, sep='-')))
sites <- unique(detections.df$CustomerSiteId)[order(unique(detections.df$CustomerSiteId))]
periods <- unique(calendar.df$YearWeek)[order(unique(calendar.df$YearWeek))]
bugs <- as.character(unique(detections.df$ShortName))[order(as.character(unique(detections.df$ShortName)))]
placeholder.df <- do.call(rbind, lapply(1:length(sites), function(x) do.call(rbind, lapply(1:length(periods), function(y) data.frame(CustomerSiteId = sites[x], YearWeek = periods[y], ShortName = bugs)))))
detections.df <- subset(tests.df, ShortName != 'Neg')
sites <- unique(detections.df$CustomerSiteId)[order(unique(detections.df$CustomerSiteId))]
periods <- unique(calendar.df$YearWeek)[order(unique(calendar.df$YearWeek))]
bugs <- as.character(unique(detections.df$ShortName))[order(as.character(unique(detections.df$ShortName)))]
placeholder.df <- do.call(rbind, lapply(1:length(sites), function(x) do.call(rbind, lapply(1:length(periods), function(y) data.frame(CustomerSiteId = sites[x], YearWeek = periods[y], ShortName = bugs)))))
detections.df <- merge(calendar.df, detections.df, by='Date')
# How many of the detections are single detections vs. co-detections of any number?
ggplot(unique(detections.df[,c('RunDataId','PositiveAssays')]), aes(x=PositiveAssays)) + geom_histogram(binwidth = 1)
single.dets <- subset(detections.df, PositiveAssays==1)
quad.dets <- subset(detections.df, PositiveAssays==4)
single.dets.agg <- with(single.dets, aggregate(PositiveAssays~YearWeek+CustomerSiteId+ShortName, FUN=sum))
single.dets.fill <- merge(placeholder.df, single.dets.agg, by=c('CustomerSiteId','YearWeek','ShortName'), all.x=TRUE)
single.dets.fill[is.na(single.dets.fill$PositiveAssays),'PositiveAssays'] <- 0
head(single.dets.fill)
do.call(rbind, lapply(periods[2:(length(periods)-2)], function(x) do.call(rbind, lapply(bugs, function(y) data.frame(YearWeek = periods[x], ShortName = bugs[y], Positives = sum(single.dets.fill[single.dets.fill$YearWeek %in% periods[(x-2):(x+2)] & single.dets.fill$ShortName==bugs[y], 'PositiveAssays']))))))
do.call(rbind, lapply(2:(length(periods)-2), function(x) do.call(rbind, lapply(bugs, function(y) data.frame(YearWeek = periods[x], ShortName = bugs[y], Positives = sum(single.dets.fill[single.dets.fill$YearWeek %in% periods[(x-2):(x+2)] & single.dets.fill$ShortName==bugs[y], 'PositiveAssays']))))))
do.call(rbind, lapply(sites, function(x) do.call(rbind, lapply(2:(length(periods)-2), function(y) do.call(rbind, lapply(bugs, function(z) data.frame(CustomerSiteId = sites[x], YearWeek = periods[y], ShortName = bugs[z], Positives = sum(single.dets.fill[single.dets.fill$YearWeek %in% periods[(x-2):(x+2)] & single.dets.fill$ShortName==bugs[y], 'PositiveAssays']))))))))
single.dets.roll <- do.call(rbind, lapply(sites, function(x) do.call(rbind, lapply(2:(length(periods)-2), function(y) do.call(rbind, lapply(bugs, function(z) data.frame(CustomerSiteId = sites[x], YearWeek = periods[y], ShortName = bugs[z], Positives = sum(single.dets.fill[single.dets.fill$YearWeek %in% periods[(x-2):(x+2)] & single.dets.fill$ShortName==bugs[y], 'PositiveAssays']))))))))
head(single.dets.roll)
bugs
single.dets.roll <- do.call(rbind, lapply(1:1, function(x) do.call(rbind, lapply(2:(length(periods)-2), function(y) do.call(rbind, lapply(bugs, function(z) data.frame(CustomerSiteId = sites[x], YearWeek = periods[y], ShortName = bugs[z], Positives = sum(single.dets.fill[single.dets.fill$YearWeek %in% periods[(x-2):(x+2)] & single.dets.fill$ShortName==bugs[y], 'PositiveAssays']))))))))
single.dets.roll <- do.call(rbind, lapply(1:1, function(x) do.call(rbind, lapply(2:(length(periods)-2), function(y) do.call(rbind, lapply(bugs, function(z) data.frame(CustomerSiteId = sites[x], YearWeek = periods[y], ShortName = bugs[z], Positives = sum(single.dets.fill[single.dets.fill$CustomerSiteId==sites[x] & single.dets.fill$YearWeek %in% periods[(y-2):(y+2)] & single.dets.fill$ShortName==bugs[z], 'PositiveAssays']))))))))
head(single.dets.roll)
periods
periods[(3-2):(3+2)]
do.call(rbind, lapply(1:1, function(x) do.call(rbind, lapply(3:(length(periods)-3), function(y) do.call(rbind, lapply(bugs, function(z) data.frame(CustomerSiteId = sites[x], YearWeek = periods[y], ShortName = bugs[z], Positives = sum(single.dets.fill[single.dets.fill$YearWeek %in% periods[(x-2):(x+2)] & single.dets.fill$ShortName==bugs[y], 'PositiveAssays']))))))))
a <- do.call(rbind, lapply(1:2, function(x) do.call(rbind, lapply(3:(length(periods)-3), function(y) do.call(rbind, lapply(bugs, function(z) data.frame(CustomerSiteId = sites[x], YearWeek = periods[y], ShortName = bugs[z], Positives = sum(single.dets.fill[single.dets.fill$YearWeek %in% periods[(x-2):(x+2)] & single.dets.fill$ShortName==bugs[y], 'PositiveAssays']))))))))
a <- do.call(rbind, lapply(1:1, function(x) do.call(rbind, lapply(3:(length(periods)-3), function(y) do.call(rbind, lapply(bugs, function(z) data.frame(CustomerSiteId = sites[x], YearWeek = periods[y], ShortName = bugs[z], Positives = sum(single.dets.fill[single.dets.fill$YearWeek %in% periods[(y-2):(y+2)] & single.dets.fill$ShortName==bugs[z], 'PositiveAssays']))))))))
head(a)
a <- do.call(rbind, lapply(1:1, function(x) do.call(rbind, lapply(3:(length(periods)-233), function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(CustomerSiteId = sites[x], YearWeek = periods[y], ShortName = bugs[z], Positives = sum(single.dets.fill[single.dets.fill$CustomerSiteId==sites[x] & single.dets.fill$YearWeek %in% periods[(y-2):(y+2)] & single.dets.fill$ShortName==bugs[z], 'PositiveAssays']))))))))
a <- do.call(rbind, lapply(1:1, function(x) do.call(rbind, lapply(3:(length(periods)-233), function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(CustomerSiteId = sites[x], YearWeek = periods[y], ShortName = bugs[z], Positives = sum(single.dets.fill[single.dets.fill$CustomerSiteId==sites[x] & single.dets.fill$YearWeek %in% periods[(y-2):(y+2)] & single.dets.fill$ShortName==bugs[z], 'PositiveAssays']))))))))
a <- do.call(rbind, lapply(1:1, function(x) do.call(rbind, lapply(3:(length(periods)-3), function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(CustomerSiteId = sites[x], YearWeek = periods[y], ShortName = bugs[z], Positives = sum(single.dets.fill[single.dets.fill$CustomerSiteId==sites[x] & single.dets.fill$YearWeek %in% periods[(y-2):(y+2)] & single.dets.fill$ShortName==bugs[z], 'PositiveAssays']))))))))
20*223
do.call(rbind, lapply(1:1, function(x) do.call(rbind, lapply(3:12, function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(CustomerSiteId = sites[x], YearWeek = periods[y], ShortName = bugs[z], Positives = sum(single.dets.fill[single.dets.fill$CustomerSiteId==sites[x] & single.dets.fill$YearWeek %in% periods[(y-2):(y+2)] & single.dets.fill$ShortName==bugs[z], 'PositiveAssays']))))))))
a <- do.call(rbind, lapply(1:1, function(x) do.call(rbind, lapply(3:12, function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(CustomerSiteId = sites[x], YearWeek = periods[y], ShortName = bugs[z], Positives = sum(single.dets.fill[single.dets.fill$CustomerSiteId==sites[x] & single.dets.fill$YearWeek %in% periods[(y-2):(y+2)] & single.dets.fill$ShortName==bugs[z], 'PositiveAssays']))))))))
head(single.dets.fill)
single.dets.fill[single.dets.fill$YearWeek %in% periods[1:15] & single.dets.fill$CustomerSiteId==2 & single.dets.fill$ShortName=='Adeno', ]
b <- single.dets.fill[single.dets.fill$YearWeek %in% periods[1:15] & single.dets.fill$CustomerSiteId==2 & single.dets.fill$ShortName=='Adeno', ]
b
a[a$ShortName=='Adeno', ]
rm(b)
single.dets.roll <- do.call(rbind, lapply(1:length(sites), function(x) do.call(rbind, lapply(3:(length(periods)-3), function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(CustomerSiteId = sites[x], YearWeek = periods[y], ShortName = bugs[z], Positives = sum(single.dets.fill[single.dets.fill$CustomerSiteId==sites[x] & single.dets.fill$YearWeek %in% periods[(y-2):(y+2)] & single.dets.fill$ShortName==bugs[z], 'PositiveAssays']))))))))
head(single.dets.roll)
head(single.dets.roll)
head(single.dets.roll)
single.dets.fill[single.dets.fill$CustomerSiteId==2 & single.dets.fill$YearWeek %in% periods[3:12] & single.dets.fill$ShortName=='HRV/EV', ]
single.dets.roll[single.dets.roll$CustomerSiteId==2 & single.dets.roll$YearWeek %in% periods[3:12] & single.dets.roll$ShortName=='HRV/EV', ]
single.dets.fill[single.dets.fill$CustomerSiteId==2 & single.dets.fill$YearWeek %in% periods[1:15] & single.dets.fill$ShortName=='HRV/EV', ]
head(single.dets.roll)
head(tests.df)
nrow(tests.df[tests.df$ShortName=='Neg', ])
nrow(tests.df)
View(tests.df)
length(unique(tests.df$RunDataId))
nrow(tests.df[tests.df$ShortName=='Neg', ])/length(unique(tests.df$RunDataId))
workDir <-'~/FilmArrayTrend/InitialPublication/ProbabilityOfCoDetections/'
setwd(workDir)
# load libraries
library(RODBC)
library(lubridate)
library(ggplot2)
library(scales)
require(dateManip)
library(dplyr)
library(tidyr)
# load custom functions
source('~/WebHub/AnalyticsWebHub/Rfunctions/createPaletteOfVariableLength.R')
source('../../Rfunctions/generateCombosBetter.R')
# read in the data from FilmArray Data Warehouse DB (ODBC object in Windows "FA_DW" with Lindsay's credentials)
FADWcxn <- odbcConnect(dsn = 'FA_DW', uid = 'afaucett', pwd = 'ThisIsAPassword-BAD')
queryVector <- readLines('AllRespiratoryDetectionsBySiteAndDate.sql')
query <- paste(queryVector,collapse="\n")
tests.df <- sqlQuery(FADWcxn,query)
odbcClose(FADWcxn)
# Create a data frame that contains detections only
detections.df <- subset(tests.df, ShortName != 'Neg')
# Create an epi calendar
calendar.df <- createCalendarLikeMicrosoft(2013, 'Week')
calendar.df <- transformToEpiWeeks(calendar.df)
calendar.df$YearWeek <- with(calendar.df, ifelse(Week < 10, paste(Year, Week, sep='-0'), paste(Year, Week, sep='-')))
sites <- unique(detections.df$CustomerSiteId)[order(unique(detections.df$CustomerSiteId))]
periods <- unique(calendar.df$YearWeek)[order(unique(calendar.df$YearWeek))]
bugs <- as.character(unique(detections.df$ShortName))[order(as.character(unique(detections.df$ShortName)))]
placeholder.df <- do.call(rbind, lapply(1:length(sites), function(x) do.call(rbind, lapply(1:length(periods), function(y) data.frame(CustomerSiteId = sites[x], YearWeek = periods[y], ShortName = bugs)))))
# Find an epi period associated with the dates of the tests for all runs
detections.df <- merge(calendar.df, detections.df, by='Date')
# How many of the detections are single detections vs. co-detections of any number?
ggplot(unique(detections.df[,c('RunDataId','PositiveAssays')]), aes(x=PositiveAssays)) + geom_histogram(binwidth = 1)
single.dets <- subset(detections.df, PositiveAssays==1)
quad.dets <- subset(detections.df, PositiveAssays==4)
single.dets.agg <- with(single.dets, aggregate(PositiveAssays~YearWeek+CustomerSiteId+ShortName, FUN=sum))
single.dets.fill <- merge(placeholder.df, single.dets.agg, by=c('CustomerSiteId','YearWeek','ShortName'), all.x=TRUE)
single.dets.fill[is.na(single.dets.fill$PositiveAssays),'PositiveAssays'] <- 0
# perform a 5-week centered rolling sum of positives
single.dets.roll <- do.call(rbind, lapply(1:length(sites), function(x) do.call(rbind, lapply(3:(length(periods)-3), function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(CustomerSiteId = sites[x], YearWeek = periods[y], ShortName = bugs[z], Positives = sum(single.dets.fill[single.dets.fill$CustomerSiteId==sites[x] & single.dets.fill$YearWeek %in% periods[(y-2):(y+2)] & single.dets.fill$ShortName==bugs[z], 'PositiveAssays']))))))))
# perform a 5-week centered rolling sum of tests
head(single.dets.roll)
head(tests.df)
unique(tests.df[,c('RunDataId','Date','CustomerSiteId')])
test.count <- unique(tests.df[,c('RunDataId','Date','CustomerSiteId')])
head(test.count)
test.count.fill <- do.call(rbind, lapply(1:length(sites), function(x) data.frame(merge(calendar.df[,c('Date','YearWeek')], data.frame(test.count[test.count$CustomerSiteId==sites[x], c('Date')], Record = 1), by='Date', all.x=TRUE), CustomerSiteId = sites[x])))
test.count.fill <- do.call(rbind, lapply(1:length(sites), function(x) data.frame(merge(calendar.df[,c('Date','YearWeek')], data.frame(Date = test.count[test.count$CustomerSiteId==sites[x], c('Date')], Record = 1), by='Date', all.x=TRUE), CustomerSiteId = sites[x])))
head(test.count.fill)
test.count.fill[is.na(test.count.fill$Record), 'Record'] <- 0
test.count.fill[is.na(test.count.fill$CustomerSiteId), ]
test.count.fill[is.na(test.count.fill$YearWeek), ]
test.count.fill[is.na(test.count.fill$Date), ]
test.count.fill[is.na(test.count.fill$Record), ]
head(test.count.fill)
head(single.dets.roll)
test.count.agg <- with(test.count.fill, aggregate(Record~CustomerSiteId+YearWeek, FUN=sum))
length(periods)*length(sites)
head(test.count.agg)
test.count.roll <- do.call(rbind, lapply(1:length(sites), function(x) do.call(rbind, lapply(3:(length(periods)-3), function(y) data.frame(CustomerSiteId = sites[x], YearWeek = periods[y], Tests = sum(test.count.agg[test.count.agg$CustomerSiteId==sites[x] & test.count.agg$YearWeek %in% periods[(y-3):(y+3)], 'Record']))))))
head(test.count.roll)
test.count.agg[test.count.agg$CustomerSiteId==2 & test.count.agg$YearWeek %in% periods[1:9], ]
do.call(rbind, lapply(1:1, function(x) do.call(rbind, lapply(3:9, function(y) data.frame(CustomerSiteId = sites[x], YearWeek = periods[y], Tests = sum(test.count.agg[test.count.agg$CustomerSiteId==sites[x] & test.count.agg$YearWeek %in% periods[(y-2):(y+2)], 'Record']))))))
test.count.roll <- do.call(rbind, lapply(1:length(sites), function(x) do.call(rbind, lapply(3:(length(periods)-3), function(y) data.frame(CustomerSiteId = sites[x], YearWeek = periods[y], Tests = sum(test.count.agg[test.count.agg$CustomerSiteId==sites[x] & test.count.agg$YearWeek %in% periods[(y-2):(y+2)], 'Record']))))))
head(test.count.roll)
head(single.dets.roll)
single.dets.roll[single.dets.roll$Positives > 0, ]
library(RODBC)
library(lubridate)
library(ggplot2)
library(scales)
require(dateManip)
library(dplyr)
library(tidyr)
# load custom functions
source('~/WebHub/AnalyticsWebHub/Rfunctions/createPaletteOfVariableLength.R')
source('../../Rfunctions/generateCombosBetter.R')
rm(a)
heaD(test.count.roll)
head(test.count.roll)
head(single.dets.roll)
n.det <- 4
combo.probs <- c()
i
i <- 1
single.dets.site <- single.dets.roll[single.dets.roll$CustomerSiteId==sites[i] & single.dets.roll$Positives > 0, ]
site.periods <- unique(single.dets.site$YearWeek)
site.periods <- site.periods[order(site.periods)]
j <- 1
single.dets.site.period <- single.dets.site[single.dets.site$YearWeek==site.periods[j], ]
# if there aren't 4 things that are detected in the period, then skip the period because there shouldn't (according to our assumptions)
# be any chance of a quadruple detection in the population
if(nrow(single.dets.site.period) < n.det) { next() }
bugs.site.period <- unique(as.character(single.dets.site.period$ShortName))[order(unique(as.character(single.dets.site.period$ShortName)))]
n.combos <- choose(length(bugs.site.period), n.det)
combo.list <- generateCombos(bugs.site.period, n.det, FALSE)
single.dets.site.period
single.dets.site.period
single.dets.site.period[single.dets.site.period$ShortName %in% combo.list[[1]], ]
k <- 1
single.dets.site.period[single.dets.site.period$ShortName %in% combo.list[[k]], ]
combo.list[[k]]
paste(combo.list[[k]], collapse=', ')
combo.temp <- paste(combo.list[[k]], collapse=', ')
data.temp <- single.dets.site.period[single.dets.site.period$ShortName %in% combo.list[[k]], ]
data.temp
data.temp
data.temp$Positives
apply(data.temp, 1, prod)
apply(data.temp$Positives, 1, prod)
apply(data.temp$Positives, 2, prod)
apply(data.temp$Positives, 2)
apply(data.temp$Positives, 2, FUN=prod)
data.temp
prod(data.temp$Positives)
1*4*12*21
n.tests <- test.count.roll[test.count.roll$YearWeek==site.periods[j] & test.count.roll$CustomerSiteId==sites[i], ]
n.tests
n.tests <- test.count.roll[test.count.roll$YearWeek==site.periods[j] & test.count.roll$CustomerSiteId==sites[i], 'Tests']
prod(data.temp$Positives)/n.tests^4
prod(data.temp$Positives)/(n.tests^4)
prod(data.temp$Positives)/(n.tests^n.det)
combo.prob <- prod(data.temp$Positives)/(n.tests^n.det)
n.tests
if(n.tests < 100)
binom.test(0, 6, p=0.3)
choose(6, 0)
choose(6, 0)*0.3^0*(1-0.3)^(6-0)
pbinom(0, 6, p=0.3)
library(binom)
binom.test(0, 6, p=0.3)
binom.confint(0, 6, conf.level = 0.95, methods='exact')
attributes(binom.test(0, 6, p=0.3))
binom.test(0, 6, p=0.3)$conf.int
binom.test(0, 6, p=0.3)$estimate
binom.test(0, 6, p=0.3)$statistic
binom.test(0, 6, p=0.3)$paramter
binom.test(0, 6, p=0.3)$parameter
binom.test(0, 6, p=0.3)$conf.int
binom.test(0, 6, p=0.3)$conf.int[1]
binom.test(0, 6, p=0.3)$conf.int[2]
data.temp
sqrt(combo.prob*(1-combo.prob)/n.tests)
combo.se <- sqrt(combo.prob*(1-combo.prob)/n.tests)
combo.prob
n.tests
bus.site.period
bugss.site.period
bugs.site.period
n.combos
20*20
n.det
length(bugs.site.period)
12*14
n.combos
combo.prob - combo.se*(1-0.05/n.combos)
combo.prob + combo.se*(1-0.05/n.combos)
qnorm(0.05)
qnorm(1-0.05/2)
qnorm(1-0.05/n.combos)
combo.se <- sqrt(combo.prob*(1-combo.prob)/n.tests)
combo.ci.lower <- combo.prob - combo.se*qnorm(1-0.05/n.combos)
combo.ci.lower <- ifelse(combo.ci.lower < 0, 0, combo.ci.lower)
combo.ci.upper <- combo.prob + combo.se*qnorm(1-0.05/n.combos)
combo.ci.lower
combo.ci.upper
comob.prob
combo.prob
combo.prob*n.test
combo.prob*n.tests
combo.prob*n.tests
