library(RColorBrewer)
library(devtools)
library(RCurl)
library(binom)
library(caret)
library(rpart)
library(party)
library(partykit)
library(randomForest)
library(dplyr)
library(tidyr)
require(dateManip)
heaD(ili.burn.nat)
head(ili.burn.nat)
ccf(ili.burn.nat$Rate, ili.burn.nat$NormalizedBurn)
ccf(ili.burn.nat$Rate, ili.burn.nat$NormalizedBurn, na.action = 'omit')
ccf(ili.burn.nat$Rate, ili.burn.nat$NormalizedBurn, na.action = na.pass)
ccf(ili.burn.nat$Rate, ili.burn.nat$NormalizedBurn, na.action=na.pass)
attributes(ccf(ili.burn.nat$Rate, ili.burn.nat$NormalizedBurn, na.action=na.pass))
ccf(ili.burn.nat$Rate, ili.burn.nat$NormalizedBurn, na.action=na.pass)$acf
rbind(ccf(ili.burn.nat$Rate, ili.burn.nat$NormalizedBurn, na.action=na.pass)$lag, ccf(ili.burn.nat$Rate, ili.burn.nat$NormalizedBurn, na.action=na.pass)$acf)
data.frame(rbind(ccf(ili.burn.nat$Rate, ili.burn.nat$NormalizedBurn, na.action=na.pass)$lag, ccf(ili.burn.nat$Rate, ili.burn.nat$NormalizedBurn, na.action=na.pass)$acf))
data.frame(ccf(ili.burn.nat$Rate, ili.burn.nat$NormalizedBurn, na.action=na.pass)$lag, ccf(ili.burn.nat$Rate, ili.burn.nat$NormalizedBurn, na.action=na.pass)$acf)
data.frame(Lag = ccf(ili.burn.nat$Rate, ili.burn.nat$NormalizedBurn, na.action=na.pass)$lag, CCF = ccf(ili.burn.nat$Rate, ili.burn.nat$NormalizedBurn, na.action=na.pass)$acf)
ccf.ili.turn <- data.frame(Lag = ccf(ili.burn.nat$Rate, ili.burn.nat$NormalizedBurn, na.action=na.pass)$lag, CCF = ccf(ili.burn.nat$Rate, ili.burn.nat$NormalizedBurn, na.action=na.pass)$acf)
data.frame(Lag = ccf(ili.burn.nat$Rate, ili.burn.nat$NormalizedBurn, na.action=na.pass)$lag, CCF = ccf(ili.burn.nat$Rate, ili.burn.nat$NormalizedBurn, na.action=na.pass)$acf)
library(RODBC)
library(lubridate)
library(EpiWeek)
library(ggplot2)
library(grid)
library(gridExtra)
library(scales)
library(gtable)
library(RColorBrewer)
library(devtools)
library(RCurl)
library(binom)
library(caret)
library(rpart)
library(party)
library(partykit)
library(randomForest)
library(dplyr)
library(tidyr)
require(dateManip)
heaD(cor.count.agg.mrg)
head(cor.count.agg.mrg)
cor.count.agg$Prev <- with(cor.count.agg, Positives/Runs)
cor.count.agg.mrg <- merge(subset(cor.count.agg, YearWeek >= '2013-26'), ili.burn.nat, by='YearWeek')
cor.count.agg.mrg$FactPrev <- with(cor.count.agg.mrg, NormalizedBurn*Prev)
ggplot(cor.count.agg.mrg, aes(x=YearWeek)) + geom_area(aes(y=FactPrev, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=new.pal, name='') + geom_line(aes(x=YearWeek, y=NormalizedBurn, group='TURN'), data=cor.count.agg.mrg, size=1.5) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', x='Date', y='TURN, Seasonally Adjusted Detections')
p.SeasonallyAdjustedPercentDetection <- ggplot(cor.count.agg.mrg, aes(x=YearWeek)) + geom_area(aes(y=FactPrev, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=new.pal, name='') + geom_line(aes(x=YearWeek, y=NormalizedBurn, group='TURN'), data=cor.count.agg.mrg, size=1.5) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', x='Date', y='TURN, Seasonally Adjusted Detections')
head(cor.count.agg.mrg)
cor.count.agg$Name <- factor(cor.count.agg$ShortName, levels=c('RSV','PIV4','PIV3','PIV2','PIV1','hMPV','FluB','FluA','CoV OC43','CoV NL63','CoV HKU1','CoV 229E','HRV/EV','M. pne','C. pne','B. per','Adeno'))
ggplot(cor.count.agg.mrg, aes(x=YearWeek)) + geom_area(aes(y=FactPrev, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=new.pal, name='') + geom_line(aes(x=YearWeek, y=NormalizedBurn, group='TURN'), data=cor.count.agg.mrg, size=1.5) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', x='Date', y='TURN, Seasonally Adjusted Detections')
cor.count.agg$Prev <- with(cor.count.agg, Positives/Runs)
cor.count.agg.mrg <- merge(subset(cor.count.agg, YearWeek >= '2013-26'), ili.burn.nat, by='YearWeek')
cor.count.agg.mrg$FactPrev <- with(cor.count.agg.mrg, NormalizedBurn*Prev)
ggplot(cor.count.agg.mrg, aes(x=YearWeek)) + geom_area(aes(y=FactPrev, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=new.pal, name='') + geom_line(aes(x=YearWeek, y=NormalizedBurn, group='TURN'), data=cor.count.agg.mrg, size=1.5) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', x='Date', y='TURN, Seasonally Adjusted Detections')
ggplot(cor.count.agg.mrg, aes(x=YearWeek)) + geom_area(aes(y=FactPrev, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=new.pal, name='') + geom_line(aes(x=YearWeek, y=NormalizedBurn, group='TURN'), data=cor.count.agg.mrg, size=1.5) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', x='Date', y='TURN, Seasonally Adjusted Detections')
head(cor.count.agg.mrg)
head(prevalence.nat.individual.wrap)
ggplot(subset(cor.count.agg.mrg, ShortName='HRV/EV'), aes(x=YearWeek)) + geom_area(aes(y=FactPrev, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=new.pal, name='') + geom_line(aes(x=YearWeek, y=NormalizedBurn, group='TURN'), data=cor.count.agg.mrg, size=1.5) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', x='Date', y='TURN, Seasonally Adjusted Detections')
subset(cor.count.agg.mrg, ShortName='HRV/EV')
ggplot(subset(cor.count.agg.mrg, ShortName=='HRV/EV'), aes(x=YearWeek)) + geom_area(aes(y=FactPrev, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=new.pal, name='') + geom_line(aes(x=YearWeek, y=NormalizedBurn, group='TURN'), data=cor.count.agg.mrg, size=1.5) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', x='Date', y='TURN, Seasonally Adjusted Detections')
head(prevalence.nat.individual.wrap)
ggplot(subset(cor.count.agg.mrg, ShortName=='HRV/EV'), aes(x=YearWeek)) + geom_area(aes(y=FactPrev, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=new.pal, name='') + geom_line(aes(x=YearWeek, y=Prevalence), data=subset(prevalence.nat.individual.wrap, ShortName=='HRV/EV'), size=1.5) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', x='Date', y='TURN, Seasonally Adjusted Detections')
ggplot(subset(cor.count.agg.mrg, ShortName=='HRV/EV'), aes(x=YearWeek)) + geom_area(aes(y=FactPrev, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=new.pal, name='') + geom_line(aes(x=YearWeek, y=Prevalence, group=1), data=subset(prevalence.nat.individual.wrap, ShortName=='HRV/EV'), size=1.5) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', x='Date', y='TURN, Seasonally Adjusted Detections')
ggplot(subset(cor.count.agg.mrg, ShortName=='HRV/EV'), aes(x=YearWeek)) + geom_area(aes(y=FactPrev, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=new.pal, name='') + geom_line(aes(x=YearWeek, y=2*Prevalence, group=1), data=subset(prevalence.nat.individual.wrap, ShortName=='HRV/EV'), size=1.5) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', x='Date', y='TURN, Seasonally Adjusted Detections')
lm(subset(cor.count.agg.mrg, ShortName=='HRV/EV')$FactPrev~subset(prevalence.nat.individual.wrap, ShortName=='HRV/EV')$Prevalence)
lm(subset(cor.count.agg.mrg, ShortName=='HRV/EV')$FactPrev~subset(prevalence.nat.individual.wrap, ShortName=='HRV/EV')$Prevalence)
subset(prevalence.nat.individual.wrap, ShortName=='HRV/EV')$Prevalence
subset(cor.count.agg.mrg, ShortName=='HRV/EV')$FactPrev
subset(prevalence.nat.individual.wrap, ShortName=='HRV/EV')
head(subset(prevalence.nat.individual.wrap, ShortName=='HRV/EV'))
rhino.fact.prev <- merge(subset(cor.count.agg.mrg, ShortName=='HRV/EV'), subset(prevalence.nat.individual.wrap, ShortName=='HRV/EV')[,c('YearWeek','Prevalence')], by='YearWeek')
head(rhino.fact.prev)
ggplot(rhino.fact.prev, aes(x=YearWeek)) + geom_area(aes(y=FactPrev, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=new.pal, name='') + geom_line(aes(x=YearWeek, y=Prevalence, group=1), data=rhino.fact.prev, size=1.5) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', x='Date', y='TURN, Seasonally Adjusted Detections')
head(rhino.fact.prev)
lm(FactPrev~Prevalence, data=rhino.fact.prev)
summary(lm(FactPrev~Prevalence, data=rhino.fact.prev))
summary(lm(FactPrev~Prevalence, data=rhino.fact.prev))$coeff
attributes(lm(FactPrev~Prevalence, data=rhino.fact.prev))
lm(FactPrev~Prevalence, data=rhino.fact.prev)$coefficients
lm(FactPrev~Prevalence, data=rhino.fact.prev)$coefficients[2]
m.rhino <- lm(FactPrev~Prevalence, data=rhino.fact.prev)$coefficients[2]
ggplot(rhino.fact.prev, aes(x=YearWeek)) + geom_area(aes(y=FactPrev, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=new.pal, name='') + geom_line(aes(x=YearWeek, y=m.rhino*Prevalence, group=1), data=rhino.fact.prev, size=1.5) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', x='Date', y='TURN, Seasonally Adjusted Detections')
summary(lm(FactPrev~Prevalence, data=rhino.fact.prev))$coeff
summary(lm(FactPrev~Prevalence, data=rhino.fact.prev))
summary(lm(FactPrev~Prevalence, data=rhino.fact.prev))$r.squared
sqrt(summary(lm(FactPrev~Prevalence, data=rhino.fact.prev))$r.squared)
summary(lm(FactPrev~Prevalence, data=rhino.fact.prev))$r.squared
with(rhino.fact.prev, cor(FactPrev~Prevalence))
with(rhino.fact.prev, cor(FactPrev~Prevalence))
with(rhino.fact.prev, cor(FactPrev, Prevalence))
acf(rhino.fact.prev$FactPrev, rhino.fact.prev$Prevalence)
acf(rhino.fact.prev$FactPrev, rhino.fact.prev$Prevalence, type = 'ccf')
ccf(rhino.fact.prev$FactPrev, rhino.fact.prev$Prevalence)
ccf(rhino.fact.prev$FactPrev, rhino.fact.prev$Prevalence)$acf
ccf(rhino.fact.prev$FactPrev, rhino.fact.prev$Prevalence)$lag
data.frame(Lag = ccf(rhino.fact.prev$FactPrev, rhino.fact.prev$Prevalence)$lag, CCF = ccf(rhino.fact.prev$FactPrev, rhino.fact.prev$Prevalence)$acf)
ccf.rhino <- data.frame(Lag = ccf(rhino.fact.prev$FactPrev, rhino.fact.prev$Prevalence)$lag, CCF = ccf(rhino.fact.prev$FactPrev, rhino.fact.prev$Prevalence)$acf)
ccf.rhino
summary(lm(FactPrev~Prevalence, data=rhino.fact.prev))$r.squared
ggplot(rhino.fact.prev, aes(x=YearWeek)) + geom_area(aes(y=FactPrev, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=new.pal, name='') + geom_line(aes(x=YearWeek, y=m.rhino*Prevalence, group=1), data=rhino.fact.prev, size=1.5) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', x='Date', y='TURN, Seasonally Adjusted Detections')
ggplot(rhino.fact.prev, aes(x=YearWeek)) + geom_area(aes(y=FactPrev, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=new.pal, name='') + geom_line(aes(x=YearWeek, y=m.rhino*Prevalence, group=1), data=rhino.fact.prev, size=1.5) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', x='Date', y='Seasonally Adjusted Detections')
head(rhino.fact.prev)
m.rhino
max(rhino.fact.prev)
max(rhino.fact.prev$Prevalence)
max(rhino.fact.prev$FactPrev)
ggplot(rhino.fact.prev, aes(x=YearWeek)) + geom_area(aes(y=FactPrev, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=new.pal, name='') + geom_line(aes(x=YearWeek, y=m.rhino*Prevalence, group=1), data=rhino.fact.prev, size=1.5) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', x='Date', y='Seasonally Adjusted Detections') + scale_y_continuous(limits=c(0, 1.4), breaks=c(0.0,0.2,0.4,0.6,0.8,1.0,1.2,1.4), labels=c('0.0','0.2','0.4','0.6','0.8','1.0','1.2','1.4'))
c(0, 0.2,0.4,0.6,0.8,1,1.2,1.4)
c(0, 0.2,0.4,0.6,0.8,1,1.2,1.4)/m.rhino
ggplot(rhino.fact.prev) + theme(panel.grid=element_blank(), plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='transparent', fill='transparent'), axis.ticks.x=element_blank()) + labs(title='', y='Detection (%)', x='Date') + scale_y_continuous(limits=c(0, 1.4), breaks=c(0.0,0.14,0.28,0.42,0.56,0.70,0.84,0.98), labels=c('0','14','28','42','56','70','84','98'))
p1 <- ggplot(rhino.fact.prev, aes(x=YearWeek)) + geom_area(aes(y=FactPrev, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=new.pal, name='') + geom_line(aes(x=YearWeek, y=m.rhino*Prevalence, group=1), data=rhino.fact.prev, size=1.5) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', x='Date', y='Seasonally Adjusted Detections') + scale_y_continuous(limits=c(0, 1.4), breaks=c(0.0,0.2,0.4,0.6,0.8,1.0,1.2,1.4), labels=c('0.0','0.2','0.4','0.6','0.8','1.0','1.2','1.4'))
p2 <- ggplot(rhino.fact.prev) + theme(panel.grid=element_blank(), plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='transparent', fill='transparent'), axis.ticks.x=element_blank()) + labs(title='', y='Detection (%)', x='Date') + scale_y_continuous(limits=c(0, 1.4), breaks=c(0.0,0.2,0.4,0.6,0.8,1.0,1.2,1.4), labels=c('0','14','28','42','56','70','84','98'))
# Get the ggplot grobs
g1 <- ggplotGrob(p1)
g2 <- ggplotGrob(p2)
# Get the location of the plot panel in g1.
# These are used later when transformed elements of g2 are put back into g1
pp <- c(subset(g1$layout, name == "panel", se = t:r))
# Overlap panel for second plot on that of the first plot
g1 <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t, pp$l, pp$b, pp$l)
# Get the y axis title from g2
index <- which(g2$layout$name == "ylab-l") # Which grob contains the y axis title?
ylab <- g2$grobs[[index]]                # Extract that grob
ylab <- hinvert_title_grob(ylab)         # Swap margins and fix justifications
# Put the transformed label on the right side of g1
g1 <- gtable_add_cols(g1, g2$widths[g2$layout[index, ]$l], pp$r)
g1 <- gtable_add_grob(g1, ylab, pp$t, pp$r + 1, pp$b, pp$r + 1, clip = "off", name = "ylab-r")
# Get the y axis from g2 (axis line, tick marks, and tick mark labels)
index <- which(g2$layout$name == "axis-l")  # Which grob
yaxis <- g2$grobs[[index]]                  # Extract the grob
# First, move the axis line to the left
yaxis$children[[1]]$x <- unit.c(unit(0, "npc"), unit(0, "npc"))
# Second, swap tick marks and tick mark labels
ticks <- yaxis$children[[2]]
ticks$widths <- rev(ticks$widths)
ticks$grobs <- rev(ticks$grobs)
# Third, move the tick marks
ticks$grobs[[1]]$x <- ticks$grobs[[1]]$x - unit(1, "npc") + unit(3, "pt")
# Fourth, swap margins and fix justifications for the tick mark labels
ticks$grobs[[2]] <- hinvert_title_grob(ticks$grobs[[2]])
# Fifth, put ticks back into yaxis
yaxis$children[[2]] <- ticks
# Put the transformed yaxis on the right side of g1
g1 <- gtable_add_cols(g1, g2$widths[g2$layout[index, ]$l], pp$r)
rsadwpdo <- gtable_add_grob(g1, yaxis, pp$t, pp$r + 1, pp$b, pp$r + 1, clip = "off", name = "axis-r")
# Draw it
grid.newpage()
grid.draw(rsadwpdo)
grid.newpage()
png('Figures/RhinoSeaonallyAdjustedDetectionsWithPercentDetectionOverlay.png', height=800, width=1400)
grid.draw(rsadwpdo)
dev.off()
# load libraries
library(RODBC)
library(lubridate)
library(EpiWeek)
library(ggplot2)
library(grid)
library(gridExtra)
library(scales)
library(gtable)
library(RColorBrewer)
library(devtools)
library(RCurl)
library(binom)
library(caret)
library(rpart)
library(party)
library(partykit)
library(randomForest)
library(dplyr)
library(tidyr)
require(dateManip)
ggplot(subset(prev.pareto.all.duals, PercentOfDetectionsWithACo < 0.7), aes(x=PercentOfDetectionsWithACo, fill=ShortName)) + geom_histogram(binwidth=0.1) + scale_fill_manual(values=elementary.block.pal, guide=FALSE) + annotate('text',x=c(0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.3, 0.3, 0.3, 0.3, 0.3, 0.4, 0.4, 0.4, 0.4, 0.4, 0.5, 0.5, 0.6), y=c(0.5, 0.5, 1.5, 2.5, 3.5, 4.5, 0.5, 1.5, 2.5, 3.5, 4.5, 0.5, 1.5, 2.5, 3.5, 4.5, 0.5, 1.5, 0.5), label=block.labels, size=6) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(hjust=0.5, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank()) + labs(x='Percent of Detections with a Co-Detection (%)', y='Frequency') + scale_x_continuous(breaks=c(0,0.1,0.2,0.3,0.4,0.5,0.6), labels=c('0','10','20','30','40','50','60'))
ggplot(prev.pareto.all.duals, aes(x=Name, y=Prevalence, fill='Percent Detection')) + geom_bar(stat='identity') + scale_fill_manual(values=c('grey','transparent'), guide=FALSE) + geom_point(aes(x=Name, y=PercentOfDetectionsWithACo/4, color='Percent of Detections with a Co-Detection Present'), data=prev.pareto.all.duals, size=4, color='black') + scale_y_continuous(limits=c(0,0.25), breaks=c(0,0.05,0.10,0.15,0.20,0.25), labels=c('0','5','10','15','20','25')) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank()) + labs(y='Detection (%)', x='')
ggplot(prev.pareto.all.duals, aes(x=Name, y=PercentOfDetectionsWithACo/4)) + geom_point() + scale_y_continuous(limits=c(0,0.25), breaks=c(0,0.05,0.1,0.15,0.2,0.25), labels=c('0','20','40','60','80','100')) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(fill='transparent', color='transparent'), panel.grid=element_blank()) + labs(y='Detections with a Co-Detection (%)')
ggplot(coParticipation.DetectionCount.fillByCount, aes(x=Name, y=Percentage, fill=Key)) + geom_bar(stat='identity') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(coParticipation.DetectionCount.fillByCount, 'Key'), name='') + scale_y_continuous(limits=c(0,0.25), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
ggplot(subset(coParticipation.DetectionCount.fillByCount, ShortName!='HRV/EV'), aes(x=Name, y=Percentage, fill=Key)) + geom_bar(stat='identity') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(coParticipation.DetectionCount.fillByCount, 'Key'), name='') + scale_y_continuous(limits=c(0,0.10), breaks=c(0,0.025,0.05,0.075,0.10), labels=c('0.0','2.5','5.0','7.5','10.0')) + labs(x='', y='Detection (%)')
ggplot(subset(coParticipation.DetectionCount.fillByCount, !(ShortName %in% c('HRV/EV','RSV'))), aes(x=Name, y=Percentage, fill=Key)) + geom_bar(stat='identity') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(coParticipation.DetectionCount.fillByCount, 'Key'), name='') + scale_y_continuous(limits=c(0,0.05), breaks=c(0,0.01,0.02,0.03,0.04,0.05), labels=c('0.0','1.0','2.0','3.0','4.0','5.0')) + labs(x='', y='Detection (%)')
ggplot(subset(b, Name!='FluA H1'), aes(x=Name, y=PercentOfDetectionsWithACo)) + geom_bar(stat='identity', fill='#FF7F24') + scale_y_continuous(limits=c(0,0.6), breaks=c(0,0.1,0.2,0.3,0.4,0.5,0.6), labels=c('0','10','20','30','40','50','60')) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank()) + labs(y='Co-Detections/Total Detections (%)', x='')
b <- prev.pareto.all.duals
b$Name <- factor(b$ShortName, levels = b[with(b, order(PercentOfDetectionsWithACo, decreasing = TRUE)), 'ShortName'])
ggplot(subset(b, Name!='FluA H1'), aes(x=Name, y=PercentOfDetectionsWithACo)) + geom_bar(stat='identity', fill='#FF7F24') + scale_y_continuous(limits=c(0,0.6), breaks=c(0,0.1,0.2,0.3,0.4,0.5,0.6), labels=c('0','10','20','30','40','50','60')) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank()) + labs(y='Co-Detections/Total Detections (%)', x='')
head(coParticipation.DetectionCount.fillByCount)
levels(coParticipation.DetectionCount.fillByCount$Name)
b$Name <- factor(b$ShortName, levels = levels(coParticipation.DetectionCount.fillByCount$Name))
ggplot(subset(b, Name!='FluA H1'), aes(x=Name, y=PercentOfDetectionsWithACo)) + geom_bar(stat='identity', fill='#FF7F24') + scale_y_continuous(limits=c(0,0.6), breaks=c(0,0.1,0.2,0.3,0.4,0.5,0.6), labels=c('0','10','20','30','40','50','60')) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank()) + labs(y='Co-Detections/Total Detections (%)', x='')
p.CosPerTotalDetections <- ggplot(subset(b, Name!='FluA H1'), aes(x=Name, y=PercentOfDetectionsWithACo)) + geom_bar(stat='identity', fill='#FF7F24') + scale_y_continuous(limits=c(0,0.6), breaks=c(0,0.1,0.2,0.3,0.4,0.5,0.6), labels=c('0','10','20','30','40','50','60')) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank()) + labs(y='Co-Detections/Total Detections (%)', x='')
ggplot(cdc.bfdx.flu.nat, aes(x=YearWeek, y=FluPercentDetection, group='FilmArrary Detection', color='FilmArray Detection')) + geom_line(size=2) + geom_line(aes(x=YearWeek, y=FluPrevalence, group='CDC Flu Prevalence', color='CDC Flu Prevalence'), cdc.bfdx.flu.nat, lwd=1.5)  + geom_line(aes(x=YearWeek, y=8*Rate, group='CDC ILI Rate', color='CDC ILI Rate'), cdc.bfdx.flu.nat, lwd=1.5) + scale_color_manual(values=c('black','blue','purple','darkgreen'), name='') + scale_y_continuous(breaks=c(0,.07,0.14,0.21,0.28,0.35), limits=c(0,0.35), labels=c(0, 7, 14, 21, 28, 35)) + scale_x_discrete(breaks = dateBreaksAlt2, labels = dateLabelsAlt2) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank(), axis.ticks.x=element_blank()) + labs(y='FilmArray Detection (%), Flu Prevalence (%)', x='Date')
ggplot(cdc.bfdx.flu.nat, aes(x=YearWeek, y=FluPercentDetection, group='FilmArrary Detection', color='FilmArray Detection')) + geom_line(size=2) + geom_line(aes(x=YearWeek, y=FluPrevalence, group='CDC Flu Prevalence', color='CDC Flu Prevalence'), cdc.bfdx.flu.nat, lwd=1.5) + scale_color_manual(values=c('black','blue','purple','darkgreen'), name='') + scale_y_continuous(breaks=c(0,.07,0.14,0.21,0.28,0.35), limits=c(0,0.35), labels=c(0, 7, 14, 21, 28, 35)) + scale_x_discrete(breaks = dateBreaksAlt2, labels = dateLabelsAlt2) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank(), axis.ticks.x=element_blank()) + labs(y='FilmArray Detection (%), Flu Prevalence (%)', x='Date')
ggplot(cdc.bfdx.flu.nat, aes(x=YearWeek, y=FluPercentDetection, group='FilmArrary Detection', color='FilmArray Detection')) + geom_line(size=2) + geom_line(aes(x=YearWeek, y=FluPrevalence, group='CDC Flu Prevalence', color='CDC Flu Prevalence'), cdc.bfdx.flu.nat, lwd=1.5) + scale_color_manual(values=c('black','blue','purple','darkgreen'), name='') + scale_y_continuous(breaks=c(0,.07,0.14,0.21,0.28,0.35), limits=c(0,0.28), labels=c(0, 7, 14, 21, 28, 35)) + scale_x_discrete(breaks = dateBreaksAlt2, labels = dateLabelsAlt2) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank(), axis.ticks.x=element_blank(), axis.title.y=element_text(size=16)) + labs(y='FilmArray Detection (%), Flu Prevalence (%)', x='Date')
ggplot(cdc.bfdx.flu.nat, aes(x=YearWeek, y=FluPercentDetection, group='FilmArrary Detection', color='FilmArray Detection')) + geom_line(size=2) + geom_line(aes(x=YearWeek, y=FluPrevalence, group='CDC Flu Prevalence', color='CDC Flu Prevalence'), cdc.bfdx.flu.nat, lwd=1.5) + scale_color_manual(values=c('black','blue','purple','darkgreen'), name='') + scale_y_continuous(breaks=c(0,.07,0.14,0.21,0.28,0.35), limits=c(0,0.28), labels=c(0, 7, 14, 21, 28, 35)) + scale_x_discrete(breaks = dateBreaksAlt2, labels = dateLabelsAlt2) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank(), axis.ticks.x=element_blank(), axis.title.y=element_text(size=18)) + labs(y='FilmArray Detection (%), Flu Prevalence (%)', x='Date')
p.InfluezaPrevalencePercentDetectionNoILI <- ggplot(cdc.bfdx.flu.nat, aes(x=YearWeek, y=FluPercentDetection, group='FilmArrary Detection', color='FilmArray Detection')) + geom_line(size=2) + geom_line(aes(x=YearWeek, y=FluPrevalence, group='CDC Flu Prevalence', color='CDC Flu Prevalence'), cdc.bfdx.flu.nat, lwd=1.5) + scale_color_manual(values=c('black','blue','purple','darkgreen'), name='') + scale_y_continuous(breaks=c(0,.07,0.14,0.21,0.28,0.35), limits=c(0,0.28), labels=c(0, 7, 14, 21, 28, 35)) + scale_x_discrete(breaks = dateBreaksAlt2, labels = dateLabelsAlt2) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank(), axis.ticks.x=element_blank(), axis.title.y=element_text(size=18)) + labs(y='FilmArray Detection (%), Flu Prevalence (%)', x='Date')
FADWcxn <- odbcConnect(dsn = 'FA_DW', uid = 'afaucett', pwd = 'ThisIsAPassword-BAD')
query <- paste(readLines('../DataSources/SQL/DataCleaningOfQcRuns/qcRunsFromFirstLotTest.sql'), collapse='\n')
clean.df <- sqlQuery(FADWcxn, query)
odbcClose(FADWcxn)
head(clean.df)
clean.agg <- with(clean.df, aggregate(QCruns~RowNumber, FUN=sum))
clean.mrg <- merge(clean.df, clean.agg, by='RowNumber')
head(clean.mrg)
clean.mrg$Rate <- with(clean.mrg, QCruns.x/QcRuns.y)
clean.mrg$Rate <- with(clean.mrg, QCruns.x/QCruns.y)
head(clean.mrg)
ggplot(clean.mrg, aes(x=RowNumber, y=Rate, fill=PositiveCount)) + geom_bar(stat='identity')
ggplot(subset(clean.mrg, PositiveCount=='0-3'), aes(x=RowNumber, y=Rate, fill=PositiveCount)) + geom_bar(stat='identity')
ggplot(subset(clean.mrg, PositiveCount=='0-3'), aes(x=RowNumber, y=Rate, fill=PositiveCount)) + geom_bar(stat='identity') + scale_fill_manual(values=c('dodgerblue'))
ggplot(subset(clean.mrg, PositiveCount=='>3'), aes(x=RowNumber, y=Rate, fill=PositiveCount)) + geom_bar(stat='identity') + scale_fill_manual(values=c('dodgerblue'), guide=FALSE) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank()) + labs(y='Portion of Runs with 0-3 Positive Assays (%)', x='')
ggplot(subset(clean.mrg, PositiveCount=='0-3'), aes(x=RowNumber, y=Rate, fill=PositiveCount)) + geom_bar(stat='identity') + scale_fill_manual(values=c('dodgerblue'), guide=FALSE) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank()) + labs(y='Portion of Runs with 4 or More Positives', x='')
ggplot(subset(clean.mrg, PositiveCount=='0-3'), aes(x=RowNumber, y=Rate, fill=PositiveCount)) + geom_bar(stat='identity') + scale_fill_manual(values=c('dodgerblue'), guide=FALSE) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank()) + labs(y='Portion of Runs with 4 or More Positives', x='Runs since First Test of Lot')
library(RODBC)
library(lubridate)
library(EpiWeek)
library(ggplot2)
library(grid)
library(gridExtra)
library(scales)
library(gtable)
library(RColorBrewer)
library(devtools)
library(RCurl)
library(binom)
library(caret)
library(rpart)
library(party)
library(partykit)
library(randomForest)
library(dplyr)
library(tidyr)
require(dateManip)
library(lubridate)
install.packages('lubridate')
install.packages(c('devtools','dplyr','tidyr'))
library(RODBC)
library(lubridate)
library(EpiWeek)
library(ggplot2)
library(grid)
library(gridExtra)
library(scales)
library(gtable)
library(RColorBrewer)
library(devtools)
library(RCurl)
library(binom)
library(caret)
install.packages('caret')
library(caret)
install.packages('lm34')
install.packages('caret')
library(caret)
install.packages('lme4')
library(RODBC)
library(lubridate)
library(EpiWeek)
library(ggplot2)
library(grid)
library(gridExtra)
library(scales)
library(gtable)
library(RColorBrewer)
library(devtools)
library(RCurl)
library(binom)
library(caret)
library(rpart)
library(party)
library(partykit)
library(randomForest)
library(dplyr)
library(tidyr)
require(dateManip)
ggplot(subset(prev.pareto.all.duals, PercentOfDetectionsWithACo < 0.7), aes(x=PercentOfDetectionsWithACo, fill=ShortName)) + geom_histogram(binwidth=0.1) + scale_fill_manual(values=elementary.block.pal, guide=FALSE) + annotate('text',x=c(0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.3, 0.3, 0.3, 0.3, 0.3, 0.4, 0.4, 0.4, 0.4, 0.4, 0.5, 0.5, 0.6), y=c(0.5, 0.5, 1.5, 2.5, 3.5, 4.5, 0.5, 1.5, 2.5, 3.5, 4.5, 0.5, 1.5, 2.5, 3.5, 4.5, 0.5, 1.5, 0.5), label=block.labels, size=6) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(hjust=0.5, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank()) + labs(x='Percent of Detections with a Co-Detection (%)', y='Frequency') + scale_x_continuous(breaks=c(0,0.1,0.2,0.3,0.4,0.5,0.6), labels=c('0','10','20','30','40','50','60'))
ggplot(subset(b, Name!='FluA H1'), aes(x=Name, y=PercentOfDetectionsWithACo)) + geom_bar(stat='identity', fill='#FF7F24') + scale_y_continuous(limits=c(0,0.6), breaks=c(0,0.1,0.2,0.3,0.4,0.5,0.6), labels=c('0','10','20','30','40','50','60')) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank()) + labs(y='Co-Detections/Total Detections (%)', x='')
ggplot(coParticipation.DetectionCount.fillByCount, aes(x=Name, y=Percentage, fill=Key)) + geom_bar(stat='identity') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(coParticipation.DetectionCount.fillByCount, 'Key'), name='') + scale_y_continuous(limits=c(0,0.25), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
b <- prev.pareto.all.duals
b$Name <- factor(b$ShortName, levels = b[with(b, order(PercentOfDetectionsWithACo, decreasing = TRUE)), 'ShortName'])
ggplot(subset(b, Name!='FluA H1'), aes(x=Name, y=PercentOfDetectionsWithACo)) + geom_bar(stat='identity', fill='#FF7F24') + scale_y_continuous(limits=c(0,0.6), breaks=c(0,0.1,0.2,0.3,0.4,0.5,0.6), labels=c('0','10','20','30','40','50','60')) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank()) + labs(y='Co-Detections/Total Detections (%)', x='')
ggplot(subset(b, Name!='FluA H1'), aes(x=Name, y=PercentOfDetectionsWithACo)) + geom_bar(stat='identity', fill=bug.individual.Pal) + scale_y_continuous(limits=c(0,0.6), breaks=c(0,0.1,0.2,0.3,0.4,0.5,0.6), labels=c('0','10','20','30','40','50','60')) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank()) + labs(y='Co-Detections/Total Detections (%)', x='')
bug.individual.Pal
ggplot(b, aes(x=Name, y=PercentOfDetectionsWithACo)) + geom_bar(stat='identity', fill=bug.individual.Pal) + scale_y_continuous(limits=c(0,0.6), breaks=c(0,0.1,0.2,0.3,0.4,0.5,0.6), labels=c('0','10','20','30','40','50','60')) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank()) + labs(y='Co-Detections/Total Detections (%)', x='')
ggplot(subset(b, Name!='FluA H1'), aes(x=Name, y=PercentOfDetectionsWithACo)) + geom_bar(stat='identity', fill=Name) + scale_y_continuous(limits=c(0,0.6), breaks=c(0,0.1,0.2,0.3,0.4,0.5,0.6), labels=c('0','10','20','30','40','50','60')) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank()) + labs(y='Co-Detections/Total Detections (%)', x='') + scale_fill_manual(values=bug.individual.Pal)
ggplot(subset(b, Name!='FluA H1'), aes(x=Name, y=PercentOfDetectionsWithACo, fill=Name)) + geom_bar(stat='identity') + scale_y_continuous(limits=c(0,0.6), breaks=c(0,0.1,0.2,0.3,0.4,0.5,0.6), labels=c('0','10','20','30','40','50','60')) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank()) + labs(y='Co-Detections/Total Detections (%)', x='') + scale_fill_manual(values=bug.individual.Pal)
ggplot(subset(b, Name!='FluA H1'), aes(x=Name, y=PercentOfDetectionsWithACo, fill=Name)) + geom_bar(stat='identity') + scale_y_continuous(limits=c(0,0.6), breaks=c(0,0.1,0.2,0.3,0.4,0.5,0.6), labels=c('0','10','20','30','40','50','60')) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank()) + labs(y='Co-Detections/Total Detections (%)', x='') + scale_fill_manual(values=bug.individual.Pal, name='')
ggplot(subset(b, Name!='FluA H1'), aes(x=Name, y=PercentOfDetectionsWithACo, fill=Name)) + geom_bar(stat='identity') + scale_y_continuous(limits=c(0,0.6), breaks=c(0,0.1,0.2,0.3,0.4,0.5,0.6), labels=c('0','10','20','30','40','50','60')) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank()) + labs(y='Co-Detections/Total Detections (%)', x='') + scale_fill_manual(values=bug.individual.Pal, guide=FALSE)
p.CosPerTotalDetections_Colorized <- ggplot(subset(b, Name!='FluA H1'), aes(x=Name, y=PercentOfDetectionsWithACo, fill=Name)) + geom_bar(stat='identity') + scale_y_continuous(limits=c(0,0.6), breaks=c(0,0.1,0.2,0.3,0.4,0.5,0.6), labels=c('0','10','20','30','40','50','60')) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank()) + labs(y='Co-Detections/Total Detections (%)', x='') + scale_fill_manual(values=bug.individual.Pal, guide=FALSE)
workDir <-'~/FilmArrayTrend/InitialPublication/'
setwd(workDir)
# load libraries
library(RODBC)
library(lubridate)
library(EpiWeek)
library(ggplot2)
library(grid)
library(gridExtra)
library(scales)
library(gtable)
library(RColorBrewer)
library(devtools)
library(RCurl)
library(binom)
library(caret)
library(rpart)
library(party)
library(partykit)
library(randomForest)
library(dplyr)
library(tidyr)
require(dateManip)
bug.family.Pal
fluAs
prev.pareto.all.duals
ggplot(subset(b, Name!='FluA H1'), aes(x=Name, y=PercentOfDetectionsWithACo, fill=Name)) + geom_bar(stat='identity') + scale_y_continuous(limits=c(0,0.6), breaks=c(0,0.1,0.2,0.3,0.4,0.5,0.6), labels=c('0','10','20','30','40','50','60')) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank()) + labs(y='Co-Detections/Total Detections (%)', x='') + scale_fill_manual(values=bug.individual.Pal, guide=FALSE)
head(b)
bug.family.Pal
b[grep(fluBs, b$BugPositive)]
fluBs
b[grep(fluBs, b$BugPositive), ]
head(b)
corona
b <- prev.pareto.all.duals
b[grep(fluBs, b$BugPositive), 'Color'] = 'Influenza B'
b[grep(fluAs, b$BugPositive), 'Color'] = 'Influenza A'
b[grep(corona, b$BugPositive), 'Color'] = 'Coronavirus'
b[grep(rsv, b$BugPositive), 'Color'] = 'RSV'
b[grep(pivs, b$BugPositive), 'Color'] = 'Parainfluenza'
b[grep(bacterias, b$BugPositive), 'Color'] = 'Bacteria'
b[grep(adeno, b$BugPositive), 'Color'] = 'Adeno'
b[grep(rhino, b$BugPositive), 'Color'] = 'HRV/EV'
b[grep(fluAs, b$BugPositive), ]
b
corona
b[grep(corona, b$BugPositive), 'Color']
b[grep(corona, b$BugPositive), 'Color']
b[grep(corona, b$BugPositive), ]
corona
b[grep('Corona', b$BugPositive), ]
b <- prev.pareto.all.duals
b$Color <- NA
b[grep(fluBs, b$BugPositive), 'Color'] <- 'Influenza B'
b[grep(fluAs, b$BugPositive), 'Color'] <- 'Influenza A'
b[grep(corona, b$BugPositive), 'Color'] <- 'Coronavirus'
b[grep(rsv, b$BugPositive), 'Color'] <- 'RSV'
b[grep(pivs, b$BugPositive), 'Color'] <- 'Parainfluenza'
b[grep(bacterias, b$BugPositive), 'Color'] <- 'Bacteria'
b[grep(adeno, b$BugPositive), 'Color'] <- 'Adeno'
b[grep(rhino, b$BugPositive), 'Color'] <- 'HRV/EV'
b
b <- prev.pareto.all.duals
b$Color <- NA
b[grep('Influenza B', b$BugPositive), 'Color'] <- 'Influenza B'
b[grep('Influenza A', b$BugPositive), 'Color'] <- 'Influenza A'
b[grep('Corona', b$BugPositive), 'Color'] <- 'Coronavirus'
b[grep('Respiratory', b$BugPositive), 'Color'] <- 'RSV'
b[grep('Para', b$BugPositive), 'Color'] <- 'Parainfluenza'
b[grep('Myco|Chlamy|Bord', b$BugPositive), 'Color'] <- 'Bacteria'
b[grep(adeno, b$BugPositive), 'Color'] <- 'Adeno'
b[grep(rhino, b$BugPositive), 'Color'] <- 'HRV/EV'
b$Name <- factor(b$ShortName, levels = b[with(b, order(PercentOfDetectionsWithACo, decreasing = TRUE)), 'ShortName'])
ggplot(subset(b, Name!='FluA H1'), aes(x=Name, y=PercentOfDetectionsWithACo, fill=Color)) + geom_bar(stat='identity') + scale_y_continuous(limits=c(0,0.6), breaks=c(0,0.1,0.2,0.3,0.4,0.5,0.6), labels=c('0','10','20','30','40','50','60')) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank()) + labs(y='Co-Detections/Total Detections (%)', x='') + scale_fill_manual(values=bug.family.Pal, guide=FALSE)
bug.family.Pal
b$BugPositive
b <- prev.pareto.all.duals
b$Color <- NA
b[grep('Influenza B', b$BugPositive), 'Color'] <- 'Influenza B'
b[grep('Influenza A', b$BugPositive), 'Color'] <- 'Influenza A'
b[grep('Corona', b$BugPositive), 'Color'] <- 'Coronavirus'
b[grep('Respiratory', b$BugPositive), 'Color'] <- 'RSV'
b[grep('Para', b$BugPositive), 'Color'] <- 'Parainfluenza'
b[grep('Myco|Chlamy|Bord', b$BugPositive), 'Color'] <- 'Bacteria'
b[grep(adeno, b$BugPositive), 'Color'] <- 'Adeno'
b[grep(rhino, b$BugPositive), 'Color'] <- 'HRV/EV'
b[grep('Metapneu', b$BugPositive), 'Color'] <- 'hMPV'
# b$Name <- factor(b$ShortName, levels = levels(coParticipation.DetectionCount.fillByCount$Name))
# p.CosPerTotalDetections <- ggplot(subset(b, Name!='FluA H1'), aes(x=Name, y=PercentOfDetectionsWithACo)) + geom_bar(stat='identity', fill='#FF7F24') + scale_y_continuous(limits=c(0,0.6), breaks=c(0,0.1,0.2,0.3,0.4,0.5,0.6), labels=c('0','10','20','30','40','50','60')) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank()) + labs(y='Co-Detections/Total Detections (%)', x='')
b$Name <- factor(b$ShortName, levels = b[with(b, order(PercentOfDetectionsWithACo, decreasing = TRUE)), 'ShortName'])
ggplot(subset(b, Name!='FluA H1'), aes(x=Name, y=PercentOfDetectionsWithACo, fill=Color)) + geom_bar(stat='identity') + scale_y_continuous(limits=c(0,0.6), breaks=c(0,0.1,0.2,0.3,0.4,0.5,0.6), labels=c('0','10','20','30','40','50','60')) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank()) + labs(y='Co-Detections/Total Detections (%)', x='') + scale_fill_manual(values=bug.family.Pal, guide=FALSE)
p.CosPerTotalDetections_Colorized <- ggplot(subset(b, Name!='FluA H1'), aes(x=Name, y=PercentOfDetectionsWithACo, fill=Color)) + geom_bar(stat='identity') + scale_y_continuous(limits=c(0,0.6), breaks=c(0,0.1,0.2,0.3,0.4,0.5,0.6), labels=c('0','10','20','30','40','50','60')) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank()) + labs(y='Co-Detections/Total Detections (%)', x='') + scale_fill_manual(values=bug.family.Pal, guide=FALSE)
workDir <-'~/FilmArrayTrend/InitialPublication/'
setwd(workDir)
# load libraries
library(RODBC)
library(lubridate)
library(EpiWeek)
library(ggplot2)
library(grid)
library(gridExtra)
library(scales)
library(gtable)
library(RColorBrewer)
library(devtools)
library(RCurl)
library(binom)
library(caret)
library(rpart)
library(party)
library(partykit)
library(randomForest)
library(dplyr)
library(tidyr)
require(dateManip)
# load custom functions
source('../Rfunctions/normalizeBurnRate.R')
source('../Rfunctions/generateCombosBetter.R')
source('~/WebHub/AnalyticsWebHub/Rfunctions/createPaletteOfVariableLength.R')
FADWcxn <- odbcConnect(dsn = 'FA_DW', uid = 'afaucett', pwd = 'ThisIsAPassword-BAD')
queryVector <- scan('../DataSources/AllSitesRespiratoryTrendableRuns.txt', what=character(), quote="")
query <- paste(queryVector,collapse=" ")
runs.df <- sqlQuery(FADWcxn,query)
queryVector <- scan('../DataSources/PositiveBugsRP.txt',what=character(),quote="")
query <- paste(queryVector,collapse=" ")
bugs.df <- sqlQuery(FADWcxn,query)
bugs.df <- bugs.df[bugs.df$BugPositive != 'Bocavirus',]
queryVector <- scan('../DataSources/ShortNames.txt',what=character(),quote="")
query <- paste(queryVector,collapse=" ")
shortnames.df <- sqlQuery(FADWcxn,query)
queryVector <- scan('../DataSources/NationalDataILI.txt',what=character(),quote="")
query <- paste(queryVector,collapse=" ")
cdc.nat.df <- sqlQuery(FADWcxn,query)
query <- paste(readLines('../DataSources/SQL/DataCleaningOfQcRuns/qcRunsFromFirstLotTest.sql'), collapse='\n')
clean.df <- sqlQuery(FADWcxn, query)
odbcClose(FADWcxn)
# read in data from PMS PROD server
PMScxn <- odbcConnect('PMS_PROD')
queryVector <- scan('../DataSources/AllSitesRegionKey.txt',what=character(),quote="")
query <- paste(queryVector,collapse=" ")
regions.df <- sqlQuery(PMScxn,query)
odbcClose(PMScxn)
# read in data from Excel files
cdc.reg.df <- read.csv('../DataSources/RegionalILI.csv', header=TRUE, sep=',')
# make an epi calendar
calendar.df <- transformToEpiWeeks(createCalendarLikeMicrosoft(2012, 'Week'))
calendar.df$YearWeek <- with(calendar.df, ifelse(Week < 10, paste(Year, Week, sep='-0'), paste(Year, Week, sep='-')))
calendar.df <- calendar.df[calendar.df$YearWeek > '2012-51', ]
calendar.df$Days <- 1
# now rerun the code that is in the Publication_Update main.R file to see what the data looks like now
runs.reg <- merge(runs.df, data.frame(Province = regions.df$StateAbv, Region = regions.df$CensusRegionLocal), by='Province')
runs.reg$Record <- 1
runs.reg.date <- merge(runs.reg[,c('RunDataId','Instrument','Date','Name','CustomerSiteId','Region','Record')], calendar.df[,c('Date','Year','Week','YearWeek')], by='Date')
sitesByCensusRegions.etc <- unique(merge(unique(runs.reg.date[,c('CustomerSiteId','Name','Region')]), regions.df, by.x='Region', by.y='CensusRegionLocal')[,c('CustomerSiteId','Name','Region','CensusRegionNational')])
# clean up the data frame that holds the cdc regional data
cdc.reg.df <- data.frame(Year = cdc.reg.df$YEAR, Week = cdc.reg.df$WEEK, Region = cdc.reg.df$REGION, ILITotal = cdc.reg.df$ILITOTAL, TotalPatients = cdc.reg.df$TOTAL.PATIENTS)
cdc.reg.df$YearWeek <- with(cdc.reg.df, ifelse(Week < 10, paste(Year, Week, sep='-0'), paste(Year, Week, sep='-')))
# roll the total patient count and the total ILI count such that it is a centered 3-week rolling sum
cdc.reg.count.df <- do.call(rbind, lapply(1:length(unique(cdc.reg.df$Region)), function(x)  data.frame(YearWeek =  cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x], 'YearWeek'][2:(length(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x], 'YearWeek'])-1)], Region = unique(cdc.reg.df$Region)[x], TotalPatients = sapply(2:(length(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],'YearWeek'])-1), function(y) sum(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],][(y-1):(y+1), 'TotalPatients'])), ILITotal = sapply(2:(length(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],'YearWeek'])-1), function(y) sum(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],][(y-1):(y+1), 'ILITotal'])))))
var <- 'CustomerSiteId'
sites <- unique(runs.reg.date$CustomerSiteId)
runs.reg.norm <- c()
for(i in 1:length(sites)) {
site.norm <- normalizeBurnRate(runs.reg.date, var, sites[i])
runs.reg.norm <- rbind(runs.reg.norm, site.norm)
}
runs.reg.norm.trim <- merge(runs.reg.norm[, c('YearWeek','Year','Week','CustomerSiteId','RollRuns','NormRollRate','NormRollRateByInst','NormalizedBurn')], unique(runs.reg[,c('CustomerSiteId','Name','Region')]), by='CustomerSiteId')
runs.reg.norm.ili <- merge(runs.reg.norm.trim, data.frame(YearWeek = cdc.reg.count.df$YearWeek, Region = cdc.reg.count.df$Region, Rate = with(cdc.reg.count.df, ILITotal/TotalPatients)), by=c('YearWeek','Region'), all.x=TRUE)
ili.burn.nat <- with(runs.reg.norm.ili, aggregate(cbind(Rate, NormalizedBurn)~YearWeek, FUN=mean))
add.back.burn <- data.frame(with(runs.reg.norm.ili[!(runs.reg.norm.ili$YearWeek %in% ili.burn.nat$YearWeek) & runs.reg.norm.ili$YearWeek > max(ili.burn.nat$YearWeek), ], aggregate(NormalizedBurn~YearWeek, FUN=mean)), Rate = NA)
ili.burn.nat <- rbind(ili.burn.nat, add.back.burn[,c('YearWeek','Rate','NormalizedBurn')])
# dateBreaksAlt <- c('2013-26','2013-39','2013-52',dateBreaks)
# dateLabelsAlt <- c('--','','',dateLabels)
ccf.ili.turn <- data.frame(Lag = ccf(ili.burn.nat$Rate, ili.burn.nat$NormalizedBurn, na.action=na.pass)$lag, CCF = ccf(ili.burn.nat$Rate, ili.burn.nat$NormalizedBurn, na.action=na.pass)$acf)
# # This is some code to check out the BURN rate vs. Run rates so that we can see if there are weird sites and how the algorithm may need to be adjusted
# ggplot(runs.reg.norm, aes(x=YearWeek, y=NormRollRateByInst, group=as.factor(CustomerSiteId), color='NormRunByInst')) + geom_line() + geom_line(aes(x=YearWeek, y=NormRollRate, group=as.factor(CustomerSiteId), color='NormRun'), data=runs.reg.norm) + geom_line(aes(x=YearWeek, y=NormalizedBurn, group=as.factor(CustomerSiteId), color='Burn'), data=runs.reg.norm) + facet_wrap(~CustomerSiteId, scale='free_y') + scale_x_discrete(breaks=dateBreaks) + theme(axis.text.x=element_text(angle=90)) + scale_color_manual(values=c('purple','blue','black'))
# ggplot(runs.reg.norm, aes(x=YearWeek, y=RollRate, group=as.factor(CustomerSiteId), color='RunRate')) + geom_line() + geom_line(aes(x=YearWeek, y=RollRateByInst, group=as.factor(CustomerSiteId), color='RunRateByInst'), data=runs.reg.norm) + geom_line(aes(x=YearWeek, y=8*NormalizedBurn, group=as.factor(CustomerSiteId), color='Burn'), data=runs.reg.norm) + facet_wrap(~CustomerSiteId, scale='free_y') + scale_x_discrete(breaks=dateBreaks) + theme(axis.text.x=element_text(angle=90)) + scale_color_manual(values=c('purple','blue','black'))
p1 <- ggplot(subset(ili.burn.nat, as.character(YearWeek) > '2013-26'), aes(x=YearWeek, y=Rate, color='CDC ILI', group='CDC ILI')) + geom_line(lwd=1.5) + geom_line(aes(x=YearWeek, y=NormalizedBurn/100, group='FilmArray Utilization', color='FilmArray Utilization'), subset(ili.burn.nat, as.character(YearWeek) > '2013-26'), lwd=1.5) + scale_color_manual(values=c('black','purple'), name='') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,0.05), breaks=c(0, 0.01, 0.02, 0.03, 0.04, 0.05), labels=c('0','1','2','3','4','5')) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, face='bold', color='black'), axis.text.x=element_text(angle=90, hjust=1), axis.ticks.x=element_blank(), panel.background=element_rect(fill='white', color='white'), legend.position = 'bottom') + labs(x='Date', y='ILI (%)')
p2 <- ggplot(subset(ili.burn.nat, as.character(YearWeek) > '2013-26'), aes(x=YearWeek, y=NormalizedBurn/100, group='FilmArray Utilization', color='FilmArray Utilization')) + geom_line(lwd=1.5, color='purple') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0, 0.05), breaks=c(0.01, 0.02, 0.03, 0.04, 0.05), labels=c('1','2','3','4','5')) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(fill='transparent', color='transparent'), panel.grid=element_blank(), axis.ticks.x=element_blank()) + labs(y='FilmArray Utilization')
# Get the ggplot grobs
g1 <- ggplotGrob(p1)
g2 <- ggplotGrob(p2)
# Get the location of the plot panel in g1.
# These are used later when transformed elements of g2 are put back into g1
pp <- c(subset(g1$layout, name == "panel", se = t:r))
# Overlap panel for second plot on that of the first plot
g1 <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t, pp$l, pp$b, pp$l)
# Get the y axis title from g2
# index <- which(g2$layout$name == "ylab-l") # Which grob contains the y axis title?
index <- which(g2$layout$name == "ylab-l") # Which grob contains the y axis title?
ylab <- g2$grobs[[index]]                # Extract that grob
ylab <- hinvert_title_grob(ylab)         # Swap margins and fix justifications
# Put the transformed label on the right side of g1
g1 <- gtable_add_cols(g1, g2$widths[g2$layout[index, ]$l], pp$r)
g1 <- gtable_add_grob(g1, ylab, pp$t, pp$r + 1, pp$b, pp$r + 1, clip = "off", name = "ylab-r")
# Get the y axis from g2 (axis line, tick marks, and tick mark labels)
index <- which(g2$layout$name == "axis-l")  # Which grob
yaxis <- g2$grobs[[index]]                  # Extract the grob
# yaxis is a complex of grobs containing the axis line, the tick marks, and the tick mark labels.
# The relevant grobs are contained in axis$children:
#   axis$children[[1]] contains the axis line;
#   axis$children[[2]] contains the tick marks and tick mark labels.
# First, move the axis line to the left
yaxis$children[[1]]$x <- unit.c(unit(0, "npc"), unit(0, "npc"))
# Second, swap tick marks and tick mark labels
ticks <- yaxis$children[[2]]
ticks$widths <- rev(ticks$widths)
ticks$grobs <- rev(ticks$grobs)
# Third, move the tick marks
ticks$grobs[[1]]$x <- ticks$grobs[[1]]$x - unit(1, "npc") + unit(3, "pt")
# Fourth, swap margins and fix justifications for the tick mark labels
ticks$grobs[[2]] <- hinvert_title_grob(ticks$grobs[[2]])
# Fifth, put ticks back into yaxis
yaxis$children[[2]] <- ticks
# Put the transformed yaxis on the right side of g1
g1 <- gtable_add_cols(g1, g2$widths[g2$layout[index, ]$l], pp$r)
ili.burn.nat.compare <- gtable_add_grob(g1, yaxis, pp$t, pp$r + 1, pp$b, pp$r + 1, clip = "off", name = "axis-r")
# Draw it
grid.newpage()
grid.draw(ili.burn.nat.compare)
