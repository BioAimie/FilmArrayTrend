head(prevalence.nat.census.individual)
prevalence.census.other <- with(prevalence.reg.census.agg[grep('Adeno|FluB|hMPV|HRV/EV|RSV', prevalence.reg.census.agg$ShortName), ], aggregate(cbind(Runs, Positives)~YearWeek+CensusRegionNational+ShortName, FUN=sum))
head(prevalence.census.other)
head(prevalence.census.bacteria)
prevalence.census.bacteria$Key <- 'Bacteria'
head(prevalence.census.bacteria)
prevalence.census.fluA$ShortName <- 'Influenza A'
prevalence.census.corona <- with(prevalence.reg.census.agg[grep('CoV', prevalence.reg.census.agg$ShortName), ], aggregate(cbind(Runs, Positives)~YearWeek+CensusRegionNational, FUN=sum))
prevalence.census.corona$ShortName <- 'Coronavirus'
prevalence.census.pivs <- with(prevalence.reg.census.agg[grep('PIV', prevalence.reg.census.agg$ShortName), ], aggregate(cbind(Runs, Positives)~YearWeek+CensusRegionNational, FUN=sum))
prevalence.census.pivs$ShortName <- 'Parainfluenza'
prevalence.census.bacteria <- with(prevalence.reg.census.agg[grep('B. per|C. pne|M. pne', prevalence.reg.census.agg$ShortName), ], aggregate(cbind(Runs, Positives)~YearWeek+CensusRegionNational, FUN=sum))
prevalence.census.bacteria$ShortName <- 'Bacteria'
prevalence.census.other <- with(prevalence.reg.census.agg[grep('Adeno|FluB|hMPV|HRV/EV|RSV', prevalence.reg.census.agg$ShortName), ], aggregate(cbind(Runs, Positives)~YearWeek+CensusRegionNational+ShortName, FUN=sum))
head(prevalence.census.corona)
head(prevalence.census.other)
prevalence.census.other <- with(prevalence.reg.census.agg[grep('Adeno|FluB|hMPV|HRV/EV|RSV', prevalence.reg.census.agg$ShortName), ], aggregate(cbind(Runs, Positives)~YearWeek+CensusRegionNational+ShortName, FUN=sum))[,c('YearWeek','CensusRegionNational','Runs','Positives','ShortName')]
head(prevalence.census.other)
head(prevalence.census.corona)
prevalence.census.families <- rbind(prevalence.census.fluA, prevalence.census.corona, prevalence.census.pivs, prevalence.census.bacteria, prevalence.census.other)
head(prevalence.census.fluA)
head(prevalence.census.corona)
prevalence.census.fluA <- with(prevalence.reg.census.agg[grep('Flu A|FluA', prevalence.reg.census.agg$ShortName), ], aggregate(cbind(Runs, Positives)~YearWeek+CensusRegionNational, FUN=sum))
prevalence.census.fluA$ShortName <- 'Influenza A'
prevalence.census.families <- rbind(prevalence.census.fluA, prevalence.census.corona, prevalence.census.pivs, prevalence.census.bacteria, prevalence.census.other)
head(prevalence.census.families)
prevalence.census.families$Prevalence <- with(prevalence.census.families, Positives/Runs)
head(prevalence.census.families)
prevalence.census.families <- merge(prevalence.census.families, population.dist.2016, by='CensusRegionNational')
head(prevalence.census.families)
prevalence.census.families$WeightedPrevalence <- with(prevalence.census.families, Prevalence*PopulationPercent)
prevalence.census.nat.families <- with(prevalence.census.nat.families, aggregate(WeightedPrevalence~YearWeek+ShortName, FUN=sum))
prevalence.census.nat.families <- with(prevalence.census.families, aggregate(WeightedPrevalence~YearWeek+ShortName, FUN=sum))
prevalence.census.nat.families$Name <- factor(prevalence.census.nat.families$Key, levels=unique(prevalence.census.nat.families[with(prevalence.census.nat.families, order(as.character(ShortName))), 'ShortName']))
ggplot(prevalence.census.nat.families[with(prevalence.census.nat.families, order(Name, decreasing=TRUE)),], aes(x=YearWeek)) + geom_area(aes(y=WeightedPrevalence, fill=Name, group=Name, order=Name), stat='identity', position='stack') + scale_fill_manual(values=bug.family.Pal, name='') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,0.8), breaks=c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8), labels=c(0, 10, 20, 30, 40, 50, 60, 70, 80)) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + labs(title='', y='Detection (%)', x='Date')
ggplot(prevalence.census.nat.families[with(prevalence.census.nat.families, order(ShortName, decreasing=TRUE)),], aes(x=YearWeek)) + geom_area(aes(y=WeightedPrevalence, fill=ShortName, group=ShortName, order=ShortName), stat='identity', position='stack') + scale_fill_manual(values=bug.family.Pal, name='') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,0.8), breaks=c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8), labels=c(0, 10, 20, 30, 40, 50, 60, 70, 80)) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + labs(title='', y='Detection (%)', x='Date')
prevalence.census.nat.families[grep('FluB', prevalence.census.nat.families$ShortName), ]
prevalence.census.nat.families[grep('FluB', prevalence.census.nat.families$ShortName), 'ShortName'] <- 'Influenza B'
ggplot(prevalence.census.nat.families[with(prevalence.census.nat.families, order(ShortName, decreasing=TRUE)),], aes(x=YearWeek)) + geom_area(aes(y=WeightedPrevalence, fill=ShortName, group=ShortName, order=ShortName), stat='identity', position='stack') + scale_fill_manual(values=bug.family.Pal, name='') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,0.8), breaks=c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8), labels=c(0, 10, 20, 30, 40, 50, 60, 70, 80)) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + labs(title='', y='Detection (%)', x='Date')
p.PercentDetectionTrend_Grouped_Weighted <- ggplot(prevalence.census.nat.families[with(prevalence.census.nat.families, order(ShortName, decreasing=TRUE)),], aes(x=YearWeek)) + geom_area(aes(y=WeightedPrevalence, fill=ShortName, group=ShortName, order=ShortName), stat='identity', position='stack') + scale_fill_manual(values=bug.family.Pal, name='') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,0.8), breaks=c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8), labels=c(0, 10, 20, 30, 40, 50, 60, 70, 80)) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + labs(title='', y='Detection (%)', x='Date')
start.year <- 2014
# use data from all time and show a pareto of prevalence (collapsing fluA, coronas, pivs, and bacterias)
positives.count.trim <- positives.count.all[as.character(positives.count.all$YearWeek) >= '2014-01', ]
# need to sum up flu As, CoVs, PIVs, and Bacterias by customer site Id... then join these onto the positives.count.trim data frame
positives.count.fluas <- merge(do.call(rbind, lapply(1:length(unique(positives.count.trim$CustomerSiteId)), function(x) do.call(rbind, lapply(1:length(unique(positives.count.trim[positives.count.trim$CustomerSiteId==unique(positives.count.trim$CustomerSiteId)[x],'YearWeek'])), function(y) data.frame(YearWeek = unique(positives.count.trim[positives.count.trim$CustomerSiteId==unique(positives.count.trim$CustomerSiteId)[x],'YearWeek'])[y], CustomerSiteId = unique(positives.count.trim$CustomerSiteId)[x], Code = 'v', Positives = sum(positives.count.trim[positives.count.trim$CustomerSiteId==unique(positives.count.trim$CustomerSiteId)[x] & positives.count.trim$Code %in% as.character(decoder[decoder$Bug %in% fluAs,'Code']) & positives.count.trim$YearWeek == unique(positives.count.trim[positives.count.trim$CustomerSiteId==unique(positives.count.trim$CustomerSiteId)[x],'YearWeek'])[y], 'Positives'])))))), prevalence.reg.agg[,c('YearWeek','CustomerSiteId','Runs')], by=c('YearWeek','CustomerSiteId'))
positives.count.covs <- merge(do.call(rbind, lapply(1:length(unique(positives.count.trim$CustomerSiteId)), function(x) do.call(rbind, lapply(1:length(unique(positives.count.trim[positives.count.trim$CustomerSiteId==unique(positives.count.trim$CustomerSiteId)[x],'YearWeek'])), function(y) data.frame(YearWeek = unique(positives.count.trim[positives.count.trim$CustomerSiteId==unique(positives.count.trim$CustomerSiteId)[x],'YearWeek'])[y], CustomerSiteId = unique(positives.count.trim$CustomerSiteId)[x], Code = 'w', Positives = sum(positives.count.trim[positives.count.trim$CustomerSiteId==unique(positives.count.trim$CustomerSiteId)[x] & positives.count.trim$Code %in% as.character(decoder[decoder$Bug %in% corona,'Code']) & positives.count.trim$YearWeek == unique(positives.count.trim[positives.count.trim$CustomerSiteId==unique(positives.count.trim$CustomerSiteId)[x],'YearWeek'])[y], 'Positives'])))))), prevalence.reg.agg[,c('YearWeek','CustomerSiteId','Runs')], by=c('YearWeek','CustomerSiteId'))
positives.count.pivs <- merge(do.call(rbind, lapply(1:length(unique(positives.count.trim$CustomerSiteId)), function(x) do.call(rbind, lapply(1:length(unique(positives.count.trim[positives.count.trim$CustomerSiteId==unique(positives.count.trim$CustomerSiteId)[x],'YearWeek'])), function(y) data.frame(YearWeek = unique(positives.count.trim[positives.count.trim$CustomerSiteId==unique(positives.count.trim$CustomerSiteId)[x],'YearWeek'])[y], CustomerSiteId = unique(positives.count.trim$CustomerSiteId)[x], Code = 'x', Positives = sum(positives.count.trim[positives.count.trim$CustomerSiteId==unique(positives.count.trim$CustomerSiteId)[x] & positives.count.trim$Code %in% as.character(decoder[decoder$Bug %in% pivs,'Code']) & positives.count.trim$YearWeek == unique(positives.count.trim[positives.count.trim$CustomerSiteId==unique(positives.count.trim$CustomerSiteId)[x],'YearWeek'])[y], 'Positives'])))))), prevalence.reg.agg[,c('YearWeek','CustomerSiteId','Runs')], by=c('YearWeek','CustomerSiteId'))
positives.count.bacteria <- merge(do.call(rbind, lapply(1:length(unique(positives.count.trim$CustomerSiteId)), function(x) do.call(rbind, lapply(1:length(unique(positives.count.trim[positives.count.trim$CustomerSiteId==unique(positives.count.trim$CustomerSiteId)[x],'YearWeek'])), function(y) data.frame(YearWeek = unique(positives.count.trim[positives.count.trim$CustomerSiteId==unique(positives.count.trim$CustomerSiteId)[x],'YearWeek'])[y], CustomerSiteId = unique(positives.count.trim$CustomerSiteId)[x], Code = 'y', Positives = sum(positives.count.trim[positives.count.trim$CustomerSiteId==unique(positives.count.trim$CustomerSiteId)[x] & positives.count.trim$Code %in% as.character(decoder[decoder$Bug %in% bacterias,'Code']) & positives.count.trim$YearWeek == unique(positives.count.trim[positives.count.trim$CustomerSiteId==unique(positives.count.trim$CustomerSiteId)[x],'YearWeek'])[y], 'Positives'])))))), prevalence.reg.agg[,c('YearWeek','CustomerSiteId','Runs')], by=c('YearWeek','CustomerSiteId'))
positives.count.agg <- rbind(positives.count.trim[,c('YearWeek','CustomerSiteId','Code','Positives','Runs')], positives.count.fluas, positives.count.covs, positives.count.pivs, positives.count.bacteria)
decoder.agg <- rbind(decoder, data.frame(Bug='Influenza A (all)', Code='v'), data.frame(Bug='Coronavirus (all)', Code='w'), data.frame(Bug='Parainfluenza (all)', Code='x'), data.frame(Bug='Bacteria (all)', Code='y'))
positives.count.agg <- merge(positives.count.agg, decoder.agg, by='Code')
positives.count.agg <- merge(positives.count.agg, shortnames.df, by.x='Bug', by.y='Organism', all.x=TRUE)
positives.count.agg$ShortName <- as.character(positives.count.agg$ShortName)
positives.count.agg[as.character(positives.count.agg$Code)=='v', 'ShortName'] <- 'Flu A (all)'
positives.count.agg[as.character(positives.count.agg$Code)=='w', 'ShortName'] <- 'CoV (all)'
positives.count.agg[as.character(positives.count.agg$Code)=='x', 'ShortName'] <- 'PIV (all)'
positives.count.agg[as.character(positives.count.agg$Code)=='y', 'ShortName'] <- 'Bacteria (all)'
# Make various paretos...
prev.pareto.all <- merge(positives.count.agg, unique(runs.reg.date[,c('YearWeek','Year')]), by='YearWeek')
prev.pareto.all <- subset(prev.pareto.all, Year >= start.year)
head(prev.pareto.all)
prev.pareto.all.nat <- with(prev.pareto.all, aggregate(cbind(Runs, Positives)~ShortName+Code+CustomerSiteId, FUN=sum))
head(prev.pareto.all.nat)
prev.pareto.all.nat$Prevalence <- with(prev.pareto.all.nat, Positives/Runs)
prev.pareto.all.nat <- with(prev.pareto.all.nat, aggregate(Prevalence~ShortName+Code, FUN=mean))
head(prev.pareto.all.nat)
unique(prev.pareto.all.nat$ShortName)
heaD(positives.count.agg)
head(positives.count.agg)
prev.pareto.all.nat.ind <- prev.pareto.all.nat[!(prev.pareto.all.nat$Code %in% c('v','w','x','y')), ]
prev.pareto.all.nat.fam <- prev.pareto.all.nat[!(prev.pareto.all.nat$Code %in% c('b','c','d','e','f','g','j','k','l','m','n','p','q','r','s','t')), ]
prev.pareto.all.nat[with(prev.pareto.all.nat, order(Prevalence, decreasing = TRUE)), 'ShortName']
label.order.all <- prev.pareto.all.nat[with(prev.pareto.all.nat, order(Prevalence, decreasing = TRUE)), 'ShortName']
label.order.all <- label.order.all[c(1,2,3,8,17,18,4,10,13,16,20,5,9,11,21,6,7,12,14,15,22,23)]
prev.pareto.all.nat$Name <- factor(prev.pareto.all.nat$ShortName, levels = label.order.all)
label.order.ind <- prev.pareto.all.nat.ind[with(prev.pareto.all.nat.ind, order(Prevalence, decreasing = TRUE)), 'ShortName']
prev.pareto.all.nat.ind$Name <- factor(prev.pareto.all.nat.ind$ShortName, levels = label.order.ind)
label.order.fam <- prev.pareto.all.nat.fam[with(prev.pareto.all.nat.fam, order(Prevalence, decreasing = TRUE)), 'ShortName']
prev.pareto.all.nat.fam$Name <- factor(prev.pareto.all.nat.fam$ShortName, levels = label.order.fam)
ggplot(prev.pareto.all.nat, aes(x=Name, y=Prevalence, fill='Key')) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(data.frame(Key='Key'), 'Key'), guide=FALSE) + scale_y_continuous(label=percent) + labs(title='', x='', y='Detection (%)')
p.PercentDetectionPareto <- ggplot(prev.pareto.all.nat, aes(x=Name, y=Prevalence, fill='Key')) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(data.frame(Key='Key'), 'Key'), guide=FALSE) + scale_y_continuous(label=percent) + labs(title='', x='', y='Detection (%)')
p.PercentDetectionPareto_Individual <- ggplot(prev.pareto.all.nat.ind, aes(x=Name, y=Prevalence, fill='Key')) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(data.frame(Key='Key'), 'Key'), guide=FALSE) + scale_y_continuous(label=percent) + labs(title='', x='', y='Detection (%)')
p.PercentDetectionPareto_Family <- ggplot(prev.pareto.all.nat.fam, aes(x=Name, y=Prevalence, fill='Key')) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(data.frame(Key='Key'), 'Key'), guide=FALSE) + scale_y_continuous(label=percent) + labs(title='', x='', y='Detection (%)')
ggplot(prev.pareto.all.nat.ind, aes(x=Name, y=Prevalence, fill='Key')) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(data.frame(Key='Key'), 'Key'), guide=FALSE) + scale_y_continuous(label=percent) + labs(title='', x='', y='Detection (%)')
ggplot(prev.pareto.all.nat.fam, aes(x=Name, y=Prevalence, fill='Key')) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(data.frame(Key='Key'), 'Key'), guide=FALSE) + scale_y_continuous(label=percent) + labs(title='', x='', y='Detection (%)')
prev.pareto.all.nat.fam[with(prev.pareto.all.nat.fam, order(Prevalence, decreasing = TRUE)), 'ShortName']
decoder
prev.pareto.all.nat.ind <- prev.pareto.all.nat[!(prev.pareto.all.nat$Code %in% c('v','w','x','y')), ]
prev.pareto.all.nat.fam <- prev.pareto.all.nat[!(prev.pareto.all.nat$Code %in% c('b','c','d','e','f','g','j','k','l','m','o','p','q','r','s')), ]
label.order.all <- prev.pareto.all.nat[with(prev.pareto.all.nat, order(Prevalence, decreasing = TRUE)), 'ShortName']
label.order.all <- label.order.all[c(1,2,3,8,17,18,4,10,13,16,20,5,9,11,21,6,7,12,14,15,22,23)]
prev.pareto.all.nat$Name <- factor(prev.pareto.all.nat$ShortName, levels = label.order.all)
label.order.ind <- prev.pareto.all.nat.ind[with(prev.pareto.all.nat.ind, order(Prevalence, decreasing = TRUE)), 'ShortName']
prev.pareto.all.nat.ind$Name <- factor(prev.pareto.all.nat.ind$ShortName, levels = label.order.ind)
label.order.fam <- prev.pareto.all.nat.fam[with(prev.pareto.all.nat.fam, order(Prevalence, decreasing = TRUE)), 'ShortName']
prev.pareto.all.nat.fam$Name <- factor(prev.pareto.all.nat.fam$ShortName, levels = label.order.fam)
ggplot(prev.pareto.all.nat, aes(x=Name, y=Prevalence, fill='Key')) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(data.frame(Key='Key'), 'Key'), guide=FALSE) + scale_y_continuous(label=percent) + labs(title='', x='', y='Detection (%)')
label.order.all
prev.pareto.all.nat
prev.pareto.all.nat.fam[with(prev.pareto.all.nat.fam, order(Prevalence, decreasing = TRUE)), 'ShortName']
label.order.fam <- prev.pareto.all.nat.fam[with(prev.pareto.all.nat.fam, order(Prevalence, decreasing = TRUE)), 'ShortName']
prev.pareto.all.nat.fam$Name <- factor(prev.pareto.all.nat.fam$ShortName, levels = label.order.fam)
ggplot(prev.pareto.all.nat.fam, aes(x=Name, y=Prevalence, fill='Key')) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(data.frame(Key='Key'), 'Key'), guide=FALSE) + scale_y_continuous(label=percent) + labs(title='', x='', y='Detection (%)')
ggplot(prev.pareto.all.nat, aes(x=Name, y=Prevalence, fill='Key')) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(data.frame(Key='Key'), 'Key'), guide=FALSE) + scale_y_continuous(label=percent) + labs(title='', x='', y='Detection (%)')
label.order.all <- prev.pareto.all.nat[with(prev.pareto.all.nat, order(Prevalence, decreasing = TRUE)), 'ShortName']
label.order.all[c(1,2,3,8,17,18,4,10,13,16,20,5,9,11,21,6,7,12,14,15,22,23)]
label.order.all <- prev.pareto.all.nat[with(prev.pareto.all.nat, order(Prevalence, decreasing = TRUE)), 'ShortName']
label.order.all
label.order.all <- label.order.all[c(1,2,3,8,17,18,19,4,10,13,16,20,5,9,11,21,6,7,12,14,15,22,23)]
prev.pareto.all.nat$Name <- factor(prev.pareto.all.nat$ShortName, levels = label.order.all)
label.order.ind <- prev.pareto.all.nat.ind[with(prev.pareto.all.nat.ind, order(Prevalence, decreasing = TRUE)), 'ShortName']
prev.pareto.all.nat.ind$Name <- factor(prev.pareto.all.nat.ind$ShortName, levels = label.order.ind)
label.order.fam <- prev.pareto.all.nat.fam[with(prev.pareto.all.nat.fam, order(Prevalence, decreasing = TRUE)), 'ShortName']
prev.pareto.all.nat.fam$Name <- factor(prev.pareto.all.nat.fam$ShortName, levels = label.order.fam)
ggplot(prev.pareto.all.nat, aes(x=Name, y=Prevalence, fill='Key')) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(data.frame(Key='Key'), 'Key'), guide=FALSE) + scale_y_continuous(label=percent) + labs(title='', x='', y='Detection (%)')
label.order.all
unqiue(prev.pareto.all.nat$ShortName)
unique(prev.pareto.all.nat$ShortName)
prev.pareto.all.nat[with(prev.pareto.all.nat, order(Prevalence, decreasing = TRUE)), 'ShortName']
label.order.all[c(1,2,3,8,17,18,19,4,10,13,16,20,5,9,11,21,6,7,12,14,15,22,23)]
label.order.all <- prev.pareto.all.nat[with(prev.pareto.all.nat, order(Prevalence, decreasing = TRUE)), 'ShortName']
label.order.all
label.order.all[c(1,2,3,8,17,18,19,4,10,13,16,20,5,9,11,21,6,7,12,14,15,22,23)]
label.order.all <- label.order.all[c(1,2,3,8,17,18,19,4,10,13,16,20,5,9,11,21,23,6,7,12,14,15,22,23)]
prev.pareto.all.nat$Name <- factor(prev.pareto.all.nat$ShortName, levels = label.order.all)
label.order.ind <- prev.pareto.all.nat.ind[with(prev.pareto.all.nat.ind, order(Prevalence, decreasing = TRUE)), 'ShortName']
prev.pareto.all.nat.ind$Name <- factor(prev.pareto.all.nat.ind$ShortName, levels = label.order.ind)
label.order.fam <- prev.pareto.all.nat.fam[with(prev.pareto.all.nat.fam, order(Prevalence, decreasing = TRUE)), 'ShortName']
prev.pareto.all.nat.fam$Name <- factor(prev.pareto.all.nat.fam$ShortName, levels = label.order.fam)
ggplot(prev.pareto.all.nat, aes(x=Name, y=Prevalence, fill='Key')) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(data.frame(Key='Key'), 'Key'), guide=FALSE) + scale_y_continuous(label=percent) + labs(title='', x='', y='Detection (%)')
label.order.all
prev.pareto.all.nat
factor(prev.pareto.all.nat$ShortName, levels = label.order.all)
label.order.all
prev.pareto.all.nat
prev.pareto.all.nat <- with(prev.pareto.all, aggregate(cbind(Runs, Positives)~ShortName+Code+CustomerSiteId, FUN=sum))
prev.pareto.all.nat$Prevalence <- with(prev.pareto.all.nat, Positives/Runs)
prev.pareto.all.nat <- with(prev.pareto.all.nat, aggregate(Prevalence~ShortName+Code, FUN=mean))
prev.pareto.all.nat.ind <- prev.pareto.all.nat[!(prev.pareto.all.nat$Code %in% c('v','w','x','y')), ]
prev.pareto.all.nat[!(prev.pareto.all.nat$Code %in% c('b','c','d','e','f','g','j','k','l','m','o','p','q','r','s')), ]
prev.pareto.all.nat.fam <- prev.pareto.all.nat[!(prev.pareto.all.nat$Code %in% c('b','c','d','e','f','g','j','k','l','m','o','p','q','r','s')), ]
prev.pareto.all.nat[with(prev.pareto.all.nat, order(Prevalence, decreasing = TRUE)), 'ShortName']
label.order.all <- prev.pareto.all.nat[with(prev.pareto.all.nat, order(Prevalence, decreasing = TRUE)), 'ShortName']
label.order.all <- label.order.all[c(1,2,3,8,17,18,19,4,10,13,16,20,5,9,11,21,23,6,7,12,14,15,22,23)]
prev.pareto.all.nat$Name <- factor(prev.pareto.all.nat$ShortName, levels = label.order.all)
label.order.ind <- prev.pareto.all.nat.ind[with(prev.pareto.all.nat.ind, order(Prevalence, decreasing = TRUE)), 'ShortName']
prev.pareto.all.nat.ind$Name <- factor(prev.pareto.all.nat.ind$ShortName, levels = label.order.ind)
label.order.fam <- prev.pareto.all.nat.fam[with(prev.pareto.all.nat.fam, order(Prevalence, decreasing = TRUE)), 'ShortName']
prev.pareto.all.nat.fam$Name <- factor(prev.pareto.all.nat.fam$ShortName, levels = label.order.fam)
ggplot(prev.pareto.all.nat, aes(x=Name, y=Prevalence, fill='Key')) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(data.frame(Key='Key'), 'Key'), guide=FALSE) + scale_y_continuous(label=percent) + labs(title='', x='', y='Detection (%)')
prev.pareto.all.nat <- with(prev.pareto.all, aggregate(cbind(Runs, Positives)~ShortName+Code+CustomerSiteId, FUN=sum))
prev.pareto.all.nat$Prevalence <- with(prev.pareto.all.nat, Positives/Runs)
prev.pareto.all.nat <- with(prev.pareto.all.nat, aggregate(Prevalence~ShortName+Code, FUN=mean))
prev.pareto.all.nat
prev.pareto.all.nat.ind <- prev.pareto.all.nat[!(prev.pareto.all.nat$Code %in% c('v','w','x','y')), ]
prev.pareto.all.nat.fam <- prev.pareto.all.nat[!(prev.pareto.all.nat$Code %in% c('b','c','d','e','f','g','j','k','l','m','o','p','q','r','s')), ]
prev.pareto.all.nat.ind
prev.pareto.all.nat
prev.pareto.all.nat.ind <- prev.pareto.all.nat[!(prev.pareto.all.nat$Code %in% c('v','w','x','y')), ]
prev.pareto.all.nat.fam <- prev.pareto.all.nat[!(prev.pareto.all.nat$Code %in% c('b','c','d','e','f','g','j','k','l','m','o','p','q','r','s')), ]
prev.pareto.all.nat[with(prev.pareto.all.nat, order(Prevalence, decreasing = TRUE)), 'ShortName']
label.order.all <- prev.pareto.all.nat[with(prev.pareto.all.nat, order(Prevalence, decreasing = TRUE)), 'ShortName']
label.order.all <- label.order.all[c(1,2,3,8,17,18,19,4,10,13,16,20,5,9,11,21,23,6,7,12,14,15,22,23)]
factor(prev.pareto.all.nat$ShortName, levels = label.order.all)
prev.pareto.all.nat$ShortName
label.order.all
prev.pareto.all.nat[with(prev.pareto.all.nat, order(Prevalence, decreasing = TRUE)), 'ShortName']
label.order.all[c(1,2,3,8,17,18,19,4,10,13,16,20,5,9,11,21,23,6,7,12,14,15,22,23)]
label.order.all <- label.order.all[c(1,2,3,8,17,18,19,4,10,13,16,20,5,9,11,21,23,6,7,12,14,15,22,24)]
prev.pareto.all.nat$Name <- factor(prev.pareto.all.nat$ShortName, levels = label.order.all)
label.order.ind <- prev.pareto.all.nat.ind[with(prev.pareto.all.nat.ind, order(Prevalence, decreasing = TRUE)), 'ShortName']
prev.pareto.all.nat.ind$Name <- factor(prev.pareto.all.nat.ind$ShortName, levels = label.order.ind)
label.order.fam <- prev.pareto.all.nat.fam[with(prev.pareto.all.nat.fam, order(Prevalence, decreasing = TRUE)), 'ShortName']
prev.pareto.all.nat.fam$Name <- factor(prev.pareto.all.nat.fam$ShortName, levels = label.order.fam)
ggplot(prev.pareto.all.nat, aes(x=Name, y=Prevalence, fill='Key')) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(data.frame(Key='Key'), 'Key'), guide=FALSE) + scale_y_continuous(label=percent) + labs(title='', x='', y='Detection (%)')
lable.order.all
label.order.all <- prev.pareto.all.nat[with(prev.pareto.all.nat, order(Prevalence, decreasing = TRUE)), 'ShortName']
label.order.all
label.order.all[c(1,2,3,8,17,18,19,4,10,13,16,20,5,9,11,21,23,6,7,12,14,15,22,24)]
label.order.all[c(1,2,3,8,17,18,19,4,10,13,16,20,5,9,11,21,24,6,7,12,14,15,22,23)]
label.order.all <- label.order.all[c(1,2,3,8,17,18,19,4,10,13,16,20,5,9,11,21,24,6,7,12,14,15,22,23)]
prev.pareto.all.nat$Name <- factor(prev.pareto.all.nat$ShortName, levels = label.order.all)
label.order.ind <- prev.pareto.all.nat.ind[with(prev.pareto.all.nat.ind, order(Prevalence, decreasing = TRUE)), 'ShortName']
prev.pareto.all.nat.ind$Name <- factor(prev.pareto.all.nat.ind$ShortName, levels = label.order.ind)
label.order.fam <- prev.pareto.all.nat.fam[with(prev.pareto.all.nat.fam, order(Prevalence, decreasing = TRUE)), 'ShortName']
prev.pareto.all.nat.fam$Name <- factor(prev.pareto.all.nat.fam$ShortName, levels = label.order.fam)
ggplot(prev.pareto.all.nat, aes(x=Name, y=Prevalence, fill='Key')) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(data.frame(Key='Key'), 'Key'), guide=FALSE) + scale_y_continuous(label=percent) + labs(title='', x='', y='Detection (%)')
p.PercentDetectionPareto <- ggplot(prev.pareto.all.nat, aes(x=Name, y=Prevalence, fill='Key')) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(data.frame(Key='Key'), 'Key'), guide=FALSE) + scale_y_continuous(label=percent) + labs(title='', x='', y='Detection (%)')
p.PercentDetectionPareto_Individual <- ggplot(prev.pareto.all.nat.ind, aes(x=Name, y=Prevalence, fill='Key')) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(data.frame(Key='Key'), 'Key'), guide=FALSE) + scale_y_continuous(label=percent) + labs(title='', x='', y='Detection (%)')
p.PercentDetectionPareto_Family <- ggplot(prev.pareto.all.nat.fam, aes(x=Name, y=Prevalence, fill='Key')) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(data.frame(Key='Key'), 'Key'), guide=FALSE) + scale_y_continuous(label=percent) + labs(title='', x='', y='Detection (%)')
sites.mixed <- unique(runs.reg.date[!(runs.reg.date$Name %in% as.character(unique(runs.reg.date$Name)[grep('Children', unique(runs.reg.date$Name))])),'CustomerSiteId'])
sites.child <- unique(runs.reg.date[runs.reg.date$Name %in% as.character(unique(runs.reg.date$Name))[grep('Children', unique(runs.reg.date$Name))],'CustomerSiteId'])
prev.pareto.all.pop <- prev.pareto.all
prev.pareto.all.pop$Key <- with(prev.pareto.all.pop, ifelse(CustomerSiteId %in% sites.mixed, 'Mixed', 'Pediatric'))
head(prev.pareto.all.pop)
prev.pareto.all.nat.pop <- with(prev.pareto.all.pop, aggregate(cbind(Runs, Positives)~ShortName+Code+Key+CustomerSiteId, FUN=sum))
head(prev.pareto.all.nat.pop)
prev.pareto.all.nat.pop$Prevalence <- with(prev.pareto.all.nat.pop, Positives/Runs)
prev.pareto.all.nat.pop <- with(prev.pareto.all.nat.pop, aggregate(Prevalence~ShortName+Code+Key, FUN=mean))
prev.pareto.all.nat.pop$Name <- factor(prev.pareto.all.nat.pop$ShortName, levels=label.order.all)
prev.pareto.all.nat.pop.ind <- prev.pareto.all.nat.pop[!(prev.pareto.all.nat.pop$Code %in% c('v','w','x','y')), ]
prev.pareto.all.nat.pop.fam <- prev.pareto.all.nat.pop[!(prev.pareto.all.nat.pop$Code %in% c('b','c','d','e','f','g','j','k','l','m','n','p','q','r','s','t')), ]
prev.pareto.all.nat.pop.ind$Name <- factor(prev.pareto.all.nat.pop.ind$ShortName, levels=label.order.ind)
prev.pareto.all.nat.pop.fam$Name <- factor(prev.pareto.all.nat.pop.fam$ShortName, levels=label.order.fam)
prev.pareto.all.nat.pop[!(prev.pareto.all.nat.pop$Code %in% c('b','c','d','e','f','g','j','k','l','m','n','p','q','r','s','t')), ]
prev.pareto.all.nat.pop[!(prev.pareto.all.nat.pop$Code %in% c('b','c','d','e','f','g','j','k','l','m','o','p','q','r','s','t')), ]
prev.pareto.all.nat.pop[!(prev.pareto.all.nat.pop$Code %in% c('b','c','d','e','f','g','j','k','l','m','o','p','q','r','s')), ]
prev.pareto.all.nat.pop.ind <- prev.pareto.all.nat.pop[!(prev.pareto.all.nat.pop$Code %in% c('v','w','x','y')), ]
prev.pareto.all.nat.pop.fam <- prev.pareto.all.nat.pop[!(prev.pareto.all.nat.pop$Code %in% c('b','c','d','e','f','g','j','k','l','m','o','p','q','r','s')), ]
prev.pareto.all.nat.pop.ind$Name <- factor(prev.pareto.all.nat.pop.ind$ShortName, levels=label.order.ind)
prev.pareto.all.nat.pop.fam$Name <- factor(prev.pareto.all.nat.pop.fam$ShortName, levels=label.order.fam)
ggplot(prev.pareto.all.nat.pop, aes(x=Name, y=Prevalence, fill=Key)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.all.pop, 'Key'), name='') + scale_y_continuous(label=percent) + labs(title='', x='', y='Detection (%)')
ggplot(prev.pareto.all.nat.pop.ind, aes(x=Name, y=Prevalence, fill=Key)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.all.pop, 'Key'), name='') + scale_y_continuous(label=percent) + labs(title='', x='', y='Detection (%)')
ggplot(prev.pareto.all.nat.pop.fam, aes(x=Name, y=Prevalence, fill=Key)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.all.pop, 'Key'), name='') + scale_y_continuous(label=percent) + labs(title='', x='', y='Detection (%)')
p.PercentDetectionParetoByPopulation <- ggplot(prev.pareto.all.nat.pop, aes(x=Name, y=Prevalence, fill=Key)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.all.pop, 'Key'), name='') + scale_y_continuous(label=percent) + labs(title='', x='', y='Detection (%)')
p.PercentDetectionParetoByPopulation_Individual <- ggplot(prev.pareto.all.nat.pop.ind, aes(x=Name, y=Prevalence, fill=Key)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.all.pop, 'Key'), name='') + scale_y_continuous(label=percent) + labs(title='', x='', y='Detection (%)')
p.PercentDetectionParetoByPopulation_Family <- ggplot(prev.pareto.all.nat.pop.fam, aes(x=Name, y=Prevalence, fill=Key)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.all.pop, 'Key'), name='') + scale_y_continuous(label=percent) + labs(title='', x='', y='Detection (%)')
start.yearweek <- '2013-26'
# use data from all time and show a pareto of prevalence (collapsing fluA, coronas, pivs, and bacterias)
positives.count.seasonal.trim <- merge(positives.count.all[as.character(positives.count.all$YearWeek) >= start.yearweek, ], unique(runs.reg.date[,c('YearWeek','Year','Week')]), by='YearWeek', all.x=TRUE)
positives.count.seasonal.trim$SeasonWeek <- with(positives.count.seasonal.trim, ifelse(Week <= 26, Week + 26, Week - 26))
positives.count.seasonal.trim$SeasonYear <- with(positives.count.seasonal.trim, ifelse(Week <= 26, paste(Year-1,Year,sep='-'), paste(Year,Year+1, sep='-')))
positives.count.seasonal.trim <- positives.count.seasonal.trim[positives.count.seasonal.trim$SeasonYear >= '2013-2014', ]
positives.count.seasonal.trim$YearWeek <- with(positives.count.seasonal.trim, ifelse(SeasonWeek < 10, paste(substring(SeasonYear, 6, 10), SeasonWeek, sep='-0'), paste(substring(SeasonYear, 6, 10), SeasonWeek, sep='-')))
# need to sum up flu As, CoVs, PIVs, and Bacterias by customer site Id... then join these onto the positives.count.trim data frame
decoder.agg <- rbind(decoder, data.frame(Bug='Influenza A (all)', Code='v'), data.frame(Bug='Coronavirus (all)', Code='w'), data.frame(Bug='Parainfluenza (all)', Code='x'), data.frame(Bug='Bacteria (all)', Code='y'))
positives.count.seasonal.fluas <- merge(do.call(rbind, lapply(1:length(unique(positives.count.seasonal.trim$CustomerSiteId)), function(x) do.call(rbind, lapply(1:length(unique(positives.count.seasonal.trim[positives.count.seasonal.trim$CustomerSiteId==unique(positives.count.seasonal.trim$CustomerSiteId)[x],'YearWeek'])), function(y) data.frame(YearWeek = unique(positives.count.seasonal.trim[positives.count.seasonal.trim$CustomerSiteId==unique(positives.count.seasonal.trim$CustomerSiteId)[x],'YearWeek'])[y], CustomerSiteId = unique(positives.count.seasonal.trim$CustomerSiteId)[x], Code = 'v', Positives = sum(positives.count.seasonal.trim[positives.count.seasonal.trim$CustomerSiteId==unique(positives.count.seasonal.trim$CustomerSiteId)[x] & positives.count.seasonal.trim$Code %in% as.character(decoder[decoder$Bug %in% fluAs,'Code']) & positives.count.seasonal.trim$YearWeek == unique(positives.count.seasonal.trim[positives.count.seasonal.trim$CustomerSiteId==unique(positives.count.seasonal.trim$CustomerSiteId)[x],'YearWeek'])[y], 'Positives'])))))), unique(positives.count.seasonal.trim[,c('YearWeek','CustomerSiteId','SeasonYear','Runs')]), by=c('YearWeek','CustomerSiteId'))
positives.count.seasonal.covs <- merge(do.call(rbind, lapply(1:length(unique(positives.count.seasonal.trim$CustomerSiteId)), function(x) do.call(rbind, lapply(1:length(unique(positives.count.seasonal.trim[positives.count.seasonal.trim$CustomerSiteId==unique(positives.count.seasonal.trim$CustomerSiteId)[x],'YearWeek'])), function(y) data.frame(YearWeek = unique(positives.count.seasonal.trim[positives.count.seasonal.trim$CustomerSiteId==unique(positives.count.seasonal.trim$CustomerSiteId)[x],'YearWeek'])[y], CustomerSiteId = unique(positives.count.seasonal.trim$CustomerSiteId)[x], Code = 'w', Positives = sum(positives.count.seasonal.trim[positives.count.seasonal.trim$CustomerSiteId==unique(positives.count.seasonal.trim$CustomerSiteId)[x] & positives.count.seasonal.trim$Code %in% as.character(decoder[decoder$Bug %in% corona,'Code']) & positives.count.seasonal.trim$YearWeek == unique(positives.count.seasonal.trim[positives.count.seasonal.trim$CustomerSiteId==unique(positives.count.seasonal.trim$CustomerSiteId)[x],'YearWeek'])[y], 'Positives'])))))), unique(positives.count.seasonal.trim[,c('YearWeek','CustomerSiteId','SeasonYear','Runs')]), by=c('YearWeek','CustomerSiteId'))
positives.count.seasonal.pivs <- merge(do.call(rbind, lapply(1:length(unique(positives.count.seasonal.trim$CustomerSiteId)), function(x) do.call(rbind, lapply(1:length(unique(positives.count.seasonal.trim[positives.count.seasonal.trim$CustomerSiteId==unique(positives.count.seasonal.trim$CustomerSiteId)[x],'YearWeek'])), function(y) data.frame(YearWeek = unique(positives.count.seasonal.trim[positives.count.seasonal.trim$CustomerSiteId==unique(positives.count.seasonal.trim$CustomerSiteId)[x],'YearWeek'])[y], CustomerSiteId = unique(positives.count.seasonal.trim$CustomerSiteId)[x], Code = 'x', Positives = sum(positives.count.seasonal.trim[positives.count.seasonal.trim$CustomerSiteId==unique(positives.count.seasonal.trim$CustomerSiteId)[x] & positives.count.seasonal.trim$Code %in% as.character(decoder[decoder$Bug %in% pivs,'Code']) & positives.count.seasonal.trim$YearWeek == unique(positives.count.seasonal.trim[positives.count.seasonal.trim$CustomerSiteId==unique(positives.count.seasonal.trim$CustomerSiteId)[x],'YearWeek'])[y], 'Positives'])))))), unique(positives.count.seasonal.trim[,c('YearWeek','CustomerSiteId','SeasonYear','Runs')]), by=c('YearWeek','CustomerSiteId'))
positives.count.seasonal.bacteria <- merge(do.call(rbind, lapply(1:length(unique(positives.count.seasonal.trim$CustomerSiteId)), function(x) do.call(rbind, lapply(1:length(unique(positives.count.seasonal.trim[positives.count.seasonal.trim$CustomerSiteId==unique(positives.count.seasonal.trim$CustomerSiteId)[x],'YearWeek'])), function(y) data.frame(YearWeek = unique(positives.count.seasonal.trim[positives.count.seasonal.trim$CustomerSiteId==unique(positives.count.seasonal.trim$CustomerSiteId)[x],'YearWeek'])[y], CustomerSiteId = unique(positives.count.seasonal.trim$CustomerSiteId)[x], Code = 'y', Positives = sum(positives.count.seasonal.trim[positives.count.seasonal.trim$CustomerSiteId==unique(positives.count.seasonal.trim$CustomerSiteId)[x] & positives.count.seasonal.trim$Code %in% as.character(decoder[decoder$Bug %in% bacterias,'Code']) & positives.count.seasonal.trim$YearWeek == unique(positives.count.seasonal.trim[positives.count.seasonal.trim$CustomerSiteId==unique(positives.count.seasonal.trim$CustomerSiteId)[x],'YearWeek'])[y], 'Positives'])))))), unique(positives.count.seasonal.trim[,c('YearWeek','CustomerSiteId','SeasonYear','Runs')]), by=c('YearWeek','CustomerSiteId'))
positives.count.seasonal.agg <- rbind(positives.count.seasonal.trim[,c('YearWeek','CustomerSiteId','Code','Positives','SeasonYear','Runs')], positives.count.seasonal.fluas, positives.count.seasonal.covs, positives.count.seasonal.pivs, positives.count.seasonal.bacteria)
positives.count.seasonal.agg <- merge(positives.count.seasonal.agg, decoder.agg, by='Code')
positives.count.seasonal.agg <- merge(positives.count.seasonal.agg, shortnames.df, by.x='Bug', by.y='Organism', all.x=TRUE)
positives.count.seasonal.agg$ShortName <- as.character(positives.count.seasonal.agg$ShortName)
positives.count.seasonal.agg[as.character(positives.count.seasonal.agg$Code)=='v', 'ShortName'] <- 'Flu A (all)'
positives.count.seasonal.agg[as.character(positives.count.seasonal.agg$Code)=='w', 'ShortName'] <- 'CoV (all)'
positives.count.seasonal.agg[as.character(positives.count.seasonal.agg$Code)=='x', 'ShortName'] <- 'PIV (all)'
positives.count.seasonal.agg[as.character(positives.count.seasonal.agg$Code)=='y', 'ShortName'] <- 'Bacteria (all)'
prev.pareto.seasonal.all <- positives.count.seasonal.agg
head(prev.pareto.seasonal.all)
View(prev.pareto.seasonal.all)
prev.pareto.seasonal.all.nat <- with(prev.pareto.seasonal.all, aggregate(cbind(Runs, Positives)~ShortName+Code+CustomerSiteId, FUN=sum))
prev.pareto.seasonal.all.nat$Prevalence <- with(prev.pareto.seasonal.all.nat, Positives/Runs)
prev.pareto.seasonal.all.nat <- with(prev.pareto.seasonal.all.nat, aggregate(Prevalence~ShortName+Code, FUN=mean))
prev.pareto.seasonal.all.nat.ind <- prev.pareto.seasonal.all.nat[!(prev.pareto.seasonal.all.nat$Code %in% c('v','w','x','y')), ]
prev.pareto.seasonal.all.nat.fam <- prev.pareto.seasonal.all.nat[!(prev.pareto.seasonal.all.nat$Code %in% c('b','c','d','e','f','g','j','k','l','m','n','p','q','r','s')), ]
prec.pareto.seasonal.all.fa
prev.pareto.seasonal.all.fam
prev.pareto.seasonal.all.nat.fam
prev.pareto.seasonal.all.nat.ind <- prev.pareto.seasonal.all.nat[!(prev.pareto.seasonal.all.nat$Code %in% c('v','w','x','y')), ]
prev.pareto.seasonal.all.nat.fam <- prev.pareto.seasonal.all.nat[!(prev.pareto.seasonal.all.nat$Code %in% c('b','c','d','e','f','g','j','k','l','m','n','p','q','r','s')), ]
prev.pareto.seasonal.all.nat
prev.pareto.seasonal.all.nat.ind
prev.pareto.seasonal.all.nat.fam
decoder
prev.pareto.seasonal.all.nat.fam <- prev.pareto.seasonal.all.nat[!(prev.pareto.seasonal.all.nat$Code %in% c('b','c','d','e','f','g','j','k','l','m','o','p','q','r','s')), ]
prev.pareto.seasonal.all.nat[with(prev.pareto.seasonal.all.nat, order(Prevalence, decreasing = TRUE)), 'ShortName']
label.order.seasonal.all <- prev.pareto.seasonal.all.nat[with(prev.pareto.seasonal.all.nat, order(Prevalence, decreasing = TRUE)), 'ShortName']
label.order.seasonal.all <- label.order.seasonal.all[c(1,2,3,8,16,18,19,4,9,11,21,24,5,10,14,17,20,6,7,12,13,15,22,23)]
prev.pareto.seasonal.all.nat$Name <- factor(prev.pareto.seasonal.all.nat$ShortName, levels = label.order.seasonal.all)
label.order.season.ind <- prev.pareto.seasonal.all.nat.ind[with(prev.pareto.seasonal.all.nat.ind, order(Prevalence, decreasing = TRUE)), 'ShortName']
prev.pareto.seasonal.all.nat.ind$Name <- factor(prev.pareto.seasonal.all.nat.ind$ShortName, levels = label.order.season.ind)
label.order.seasonal.fam <- prev.pareto.seasonal.all.nat.fam[with(prev.pareto.seasonal.all.nat.fam, order(Prevalence, decreasing = TRUE)), 'ShortName']
prev.pareto.seasonal.all.nat.fam$Name <- factor(prev.pareto.seasonal.all.nat.fam$ShortName, levels = label.order.seasonal.fam)
ggplot(prev.pareto.seasonal.all.nat, aes(x=Name, y=Prevalence, fill='Key')) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(data.frame(Key='Key'), 'Key'), guide=FALSE) + scale_y_continuous(limits=c(0,0.3), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
p.PercentDetectionParetoSeasonal <- ggplot(prev.pareto.seasonal.all.nat, aes(x=Name, y=Prevalence, fill='Key')) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(data.frame(Key='Key'), 'Key'), guide=FALSE) + scale_y_continuous(limits=c(0,0.3), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
p.PercentDetectionParetoSeasonal_Individual <- ggplot(prev.pareto.seasonal.all.nat.ind, aes(x=Name, y=Prevalence, fill='Key')) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(data.frame(Key='Key'), 'Key'), guide=FALSE) + scale_y_continuous(limits=c(0,0.3), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
p.PercentDetectionParetoSeasonal_Family <- ggplot(prev.pareto.seasonal.all.nat.fam, aes(x=Name, y=Prevalence, fill='Key')) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(data.frame(Key='Key'), 'Key'), guide=FALSE) + scale_y_continuous(limits=c(0,0.3), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
sites.mixed <- unique(runs.reg.date[!(runs.reg.date$Name %in% as.character(unique(runs.reg.date$Name)[grep('Children', unique(runs.reg.date$Name))])),'CustomerSiteId'])
sites.child <- unique(runs.reg.date[runs.reg.date$Name %in% as.character(unique(runs.reg.date$Name))[grep('Children', unique(runs.reg.date$Name))],'CustomerSiteId'])
prev.pareto.seasonal.all.pop <- prev.pareto.seasonal.all
prev.pareto.seasonal.all.pop$Key <- with(prev.pareto.seasonal.all.pop, ifelse(CustomerSiteId %in% sites.mixed, 'Mixed', 'Pediatric'))
head(prev.pareto.seasonal.all.pop)
prev.pareto.seasonal.all.pop <- with(prev.pareto.seasonal.all.pop, aggregate(cbind(Runs, Positives)~ShortName+Code+CustomerSiteId, FUN=sum))
prev.pareto.seasonal.all.pop$Prevalence <- with(prev.pareto.seasonal.all.pop, Positives/Runs)
prev.pareto.seasonal.all.pop <- prev.pareto.seasonal.all
prev.pareto.seasonal.all.pop$Key <- with(prev.pareto.seasonal.all.pop, ifelse(CustomerSiteId %in% sites.mixed, 'Mixed', 'Pediatric'))
prev.pareto.seasonal.all.pop <- with(prev.pareto.seasonal.all.pop, aggregate(cbind(Runs, Positives)~ShortName+Code+Key+CustomerSiteId, FUN=sum))
prev.pareto.seasonal.all.pop$Prevalence <- with(prev.pareto.seasonal.all.pop, Positives/Runs)
prev.pareto.seasonal.all.nat.pop <- with(prev.pareto.seasonal.all.pop, aggregate(Prevalence~ShortName+Code+Key, FUN=mean))
prev.pareto.seasonal.all.nat.pop$Name <- factor(prev.pareto.seasonal.all.nat.pop$ShortName, levels=label.order.seasonal.all)
prev.pareto.seasonal.all.nat.pop.ind <- prev.pareto.seasonal.all.nat.pop[!(prev.pareto.seasonal.all.nat.pop$Code %in% c('v','w','x','y')), ]
prev.pareto.seasonal.all.nat.pop.fam <- prev.pareto.seasonal.all.nat.pop[!(prev.pareto.seasonal.all.nat.pop$Code %in% c('b','c','d','e','f','g','j','k','l','m','o','p','q','r','s')), ]
prev.pareto.seasonal.all.nat.pop.ind$Name <- factor(prev.pareto.seasonal.all.nat.pop.ind$ShortName, levels=label.order.season.ind)
prev.pareto.seasonal.all.nat.pop.fam$Name <- factor(prev.pareto.seasonal.all.nat.pop.fam$ShortName, levels=label.order.seasonal.fam)
ggplot(prev.pareto.seasonal.all.nat.pop, aes(x=Name, y=Prevalence, fill=Key)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.seasonal.all.pop, 'Key'), name='') + scale_y_continuous(limits=c(0,0.35), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3,0.35), labels=c('0','5','10','15','20','25','30','35')) + labs(x='', y='Detection')
p.PercentDetectionParetoByPopulationSeasonal <- ggplot(prev.pareto.seasonal.all.nat.pop, aes(x=Name, y=Prevalence, fill=Key)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.seasonal.all.pop, 'Key'), name='') + scale_y_continuous(limits=c(0,0.35), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3,0.35), labels=c('0','5','10','15','20','25','30','35')) + labs(x='', y='Detection')
p.PercentDetectionParetoByPopulationSeasonal_Individual <- ggplot(prev.pareto.seasonal.all.nat.pop.ind, aes(x=Name, y=Prevalence, fill=Key)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.seasonal.all.pop, 'Key'), name='') + scale_y_continuous(limits=c(0,0.35), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3,0.35), labels=c('0','5','10','15','20','25','30','35')) + labs(x='', y='Detection (%)')
p.PercentDetectionParetoByPopulationSeasonal_Family <- ggplot(prev.pareto.seasonal.all.nat.pop.fam, aes(x=Name, y=Prevalence, fill=Key)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.seasonal.all.pop, 'Key'), name='') + scale_y_continuous(limits=c(0,0.35), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3,0.35), labels=c('0','5','10','15','20','25','30','35')) + labs(x='', y='Detection (%)')
head(prev.pareto.seasonal.all)
prev.pareto.seasonal.all.year <- with(prev.pareto.seasonal.all, aggregate(cbind(Runs, Positives)~SeasonYear+ShortName+Code+CustomerSiteId, FUN=sum))
prev.pareto.seasonal.all.year <- with(prev.pareto.seasonal.all.year, aggregate(Prevalence~SeasonYear+ShortName+Code, FUN=mean))
prev.pareto.seasonal.all.year$Name <- factor(prev.pareto.seasonal.all.year$ShortName, levels = label.order.seasonal.all)
prev.pareto.seasonal.all.year.ind <- prev.pareto.seasonal.all.year[!(prev.pareto.seasonal.all.year$Code %in% c('v','w','x','y')), ]
prev.pareto.seasonal.all.year$Prevalence <- with(prev.pareto.seasonal.all.year, Positives/Runs)
prev.pareto.seasonal.all.year <- with(prev.pareto.seasonal.all.year, aggregate(Prevalence~SeasonYear+ShortName+Code, FUN=mean))
prev.pareto.seasonal.all.year$Name <- factor(prev.pareto.seasonal.all.year$ShortName, levels = label.order.seasonal.all)
prev.pareto.seasonal.all.year.fam <- prev.pareto.seasonal.all.year[!(prev.pareto.seasonal.all.year$Code %in% c('b','c','d','e','f','g','j','k','l','m','o','p','q','r','s')), ]
prev.pareto.seasonal.all.year.ind$Name <- factor(prev.pareto.seasonal.all.year.ind$ShortName, levels = label.order.season.ind)
prev.pareto.seasonal.all.year.fam$Name <- factor(prev.pareto.seasonal.all.year.fam$ShortName, levels = label.order.seasonal.fam)
ggplot(subset(prev.pareto.seasonal.all.year, SeasonYear!='2016-2017'), aes(x=Name, y=Prevalence, fill=SeasonYear)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.seasonal.all.year, 'SeasonYear'), name='') + scale_y_continuous(limits=c(0,0.3), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
p.PercentDetectionParetoAnnualSeasonal <- ggplot(subset(prev.pareto.seasonal.all.year, SeasonYear!='2016-2017'), aes(x=Name, y=Prevalence, fill=SeasonYear)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.seasonal.all.year, 'SeasonYear'), name='') + scale_y_continuous(limits=c(0,0.3), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
p.PercentDetectionParetoAnnualSeasonal_Individual <- ggplot(subset(prev.pareto.seasonal.all.year.ind, SeasonYear!='2016-2017'), aes(x=Name, y=Prevalence, fill=SeasonYear)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.seasonal.all.year, 'SeasonYear'), name='') + scale_y_continuous(limits=c(0,0.3), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
p.PercentDetectionParetoAnnualSeasonal_Family <- ggplot(subset(prev.pareto.seasonal.all.year.fam, SeasonYear!='2016-2017'), aes(x=Name, y=Prevalence, fill=SeasonYear)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.seasonal.all.year, 'SeasonYear'), name='') + scale_y_continuous(limits=c(0,0.3), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
prev.table.seasonal.all <- do.call(cbind, lapply(1:length(unique(prev.pareto.seasonal.all.year$SeasonYear)), function(x) data.frame(ShortName = prev.pareto.seasonal.all.year[prev.pareto.seasonal.all.year$SeasonYear==unique(prev.pareto.seasonal.all.year$SeasonYear)[x],'ShortName'], Prevalence = prev.pareto.seasonal.all.year[prev.pareto.seasonal.all.year$SeasonYear==unique(prev.pareto.seasonal.all.year$SeasonYear)[x],'Prevalence'])))
prev.table.seasonal.all.pop <- do.call(cbind, lapply(1:length(unique(prev.pareto.seasonal.all.nat.pop$Key)), function(x) data.frame(Key = unique(prev.pareto.seasonal.all.nat.pop$Key)[x], ShortName = prev.pareto.seasonal.all.nat.pop[prev.pareto.seasonal.all.nat.pop$Key == unique(prev.pareto.seasonal.all.nat.pop$Key)[x], 'ShortName'], Prevalence = prev.pareto.seasonal.all.nat.pop[prev.pareto.seasonal.all.nat.pop$Key == unique(prev.pareto.seasonal.all.nat.pop$Key)[x],'Prevalence'])))
head(prev.pareto.seasonal.all.nat)
with(prev.pareto.seasonal.all, aggregate(cbind(Runs, Positives)~ShortName+Code+CustomerSiteId, FUN=sum))
prev.pareto.side.by.side <- with(prev.pareto.seasonal.all, aggregate(cbind(Runs, Positives)~ShortName+Code+CustomerSiteId, FUN=sum))
heaD(prev.pareto.side.by.side)
head(prev.pareto.side.by.side)
head(sitesByCensusRegions.etc)
prev.pareto.side.by.side <- merge(merge(prev.pareto.side.by.side, sitesByCensusRegions.etc[,c('CustomerSiteId','CensusRegionNational')], by='CustomerSiteId'), population.dist.2016, by='CensusRegionNational')
head(prev.pareto.side.by.side)
prev.pareto.side.by.side <- with(prev.pareto.seasonal.all, aggregate(cbind(Runs, Positives)~ShortName+Code+CustomerSiteId, FUN=sum))
head(prev.pareto.side.by.side)
prev.pareto.side.by.side <- merge(prev.pareto.side.by.side, sitesByCensusRegions.etc[,c('CustomerSiteId','CensusRegionNational')], by='CustomerSiteId')
head(prev.pareto.side.by.side)
prev.pareto.side.by.side <- with(prev.pareto.side.by.side, aggregate(cbind(Runs, Positives)~CensusRegionNational+ShortName+Code, FUN=sum))
prev.pareto.side.by.side$Prevalence <- with( prev.pareto.side.by.side, Positives/Runs)
head(prev.pareto.side.by.side)
prev.pareto.side.by.side <- merge(prev.pareto.side.by.side, population.dist.2016, by='CensusRegionNational')
head(prev.pareto.side.by.side)
prev.pareto.side.by.side$WeightedPrevalence <- with(prev.pareto.side.by.side, Prevalence*PopulationPercent)
head(prev.pareto.side.by.side)
prev.pareto.side.by.side <- with(prev.pareto.side.by.side, aggregate(WeightedPrevalence~ShortName+Code, FUN=sum))
head(prev.pareto.side.by.side)
head(prev.pareto.seasonal.all.nat)
colnames(prev.pareto.side.by.side) <- c('ShortName','Code','Prevalence')
library(RODBC)
library(lubridate)
library(EpiWeek)
library(ggplot2)
library(grid)
library(gridExtra)
library(scales)
library(gtable)
library(RColorBrewer)
library(devtools)
library(RCurl)
library(binom)
library(caret)
library(rpart)
library(party)
library(partykit)
library(randomForest)
require(dateManip)
head(prevalence.reg.census.wrap)
prevalence.reg.census.agg <- with(prevalence.reg.census.wrap, aggregate(cbind(Runs, Positives)~YearWeek+CensusRegionNational+CustomerSiteId+ShortName, FUN=sum))
prevalence.reg.census.agg$Prevalence <- with(prevalence.reg.census.agg, Positives/Runs)
prevalence.nat.census.individual <- merge(prevalence.reg.census.agg, population.dist.2016, by='CensusRegionNational')
head(prevalence.nat.census.individual)
head(prevalence.reg.census.agg)
prevalence.reg.census.agg <- with(prevalence.reg.census.agg, aggregate(Prevalence~YearWeek+CensusRegionNational+ShortName, FUN=mean))
head(prevalence.reg.census.agg)
prevalence.nat.census.individual <- merge(prevalence.reg.census.agg, population.dist.2016, by='CensusRegionNational')
prevalence.nat.census.individual$WeightedPrevalence <- with(prevalence.nat.census.individual, Prevalence*PopulationPercent)
prevalence.nat.census.individual <- with(prevalence.nat.census.individual, aggregate(WeightedPrevalence~YearWeek+ShortName, FUN=sum))
ggplot(prevalence.nat.census.individual[with(prevalence.nat.census.individual, order(ShortName, decreasing=TRUE)),], aes(x=YearWeek)) + geom_area(aes(y=WeightedPrevalence, fill=ShortName, group=ShortName, order=ShortName), stat='identity', position='stack') + scale_fill_manual(values=bug.individual.Pal, name='') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,0.8), labels=c(0, 10, 20, 30, 40, 50, 60, 70, 80), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8)) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='Detection (%)', x='Date')
p.PercentDetectionTrend
p.PercentDetectionTrend_Weighted <- ggplot(prevalence.nat.census.individual[with(prevalence.nat.census.individual, order(ShortName, decreasing=TRUE)),], aes(x=YearWeek)) + geom_area(aes(y=WeightedPrevalence, fill=ShortName, group=ShortName, order=ShortName), stat='identity', position='stack') + scale_fill_manual(values=bug.individual.Pal, name='') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,0.8), labels=c(0, 10, 20, 30, 40, 50, 60, 70, 80), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8)) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='Detection (%)', x='Date')
head(prevalence.census.families)
prevalence.census.families <- rbind(prevalence.census.fluA, prevalence.census.corona, prevalence.census.pivs, prevalence.census.bacteria, prevalence.census.other)
head(prevalence.reg.census.agg)
head(prevalence.reg.census.agg)
head(prevalence.reg.census.wrap)
head(prevalence.reg.census.wrap)
prevalence.reg.census.agg.fam <- with(prevalence.reg.census.wrap, aggregate(cbind(Runs, Positives)~YearWeek+CensusRegionNational+CustomerSiteId+ShortName, FUN=sum))
with(prevalence.reg.census.agg.fam[grep('Flu A|FluA', prevalence.reg.census.agg.fam$ShortName), ], aggregate(cbind(Runs, Positives)~YearWeek+CensusRegionNational, FUN=sum))
prevalence.census.fluA <- with(prevalence.reg.census.agg.fam[grep('Flu A|FluA', prevalence.reg.census.agg.fam$ShortName), ], aggregate(cbind(Runs, Positives)~YearWeek+CensusRegionNational+CustomerSiteId, FUN=sum))
head(prevalence.census.fluA)
prevalence.census.fluA$ShortName <- 'Influenza A'
prevalence.reg.census.agg.fam <- with(prevalence.reg.census.wrap, aggregate(cbind(Runs, Positives)~YearWeek+CensusRegionNational+CustomerSiteId+ShortName, FUN=sum))
prevalence.census.fluA <- with(prevalence.reg.census.agg.fam[grep('Flu A|FluA', prevalence.reg.census.agg.fam$ShortName), ], aggregate(cbind(Runs, Positives)~YearWeek+CensusRegionNational+CustomerSiteId, FUN=sum))
prevalence.census.fluA$ShortName <- 'Influenza A'
prevalence.census.corona <- with(prevalence.reg.census.agg.fam[grep('CoV', prevalence.reg.census.agg.fam$ShortName), ], aggregate(cbind(Runs, Positives)~YearWeek+CensusRegionNational+CustomerSiteId, FUN=sum))
prevalence.census.corona$ShortName <- 'Coronavirus'
prevalence.census.pivs <- with(prevalence.reg.census.agg.fam[grep('PIV', prevalence.reg.census.agg.fam$ShortName), ], aggregate(cbind(Runs, Positives)~YearWeek+CensusRegionNational+CustomerSiteId, FUN=sum))
prevalence.census.pivs$ShortName <- 'Parainfluenza'
prevalence.census.bacteria <- with(prevalence.reg.census.agg.fam[grep('B. per|C. pne|M. pne', prevalence.reg.census.agg.fam$ShortName), ], aggregate(cbind(Runs, Positives)~YearWeek+CensusRegionNational+CustomerSiteId, FUN=sum))
prevalence.census.bacteria$ShortName <- 'Bacteria'
prevalence.census.other <- with(prevalence.reg.census.agg.fam[grep('Adeno|FluB|hMPV|HRV/EV|RSV', prevalence.reg.census.agg.fam$ShortName), ], aggregate(cbind(Runs, Positives)~YearWeek+CensusRegionNational+CustomerSiteId+ShortName, FUN=sum))[,c('YearWeek','CensusRegionNational','CustomerSiteId','Runs','Positives','ShortName')]
prevalence.census.families <- rbind(prevalence.census.fluA, prevalence.census.corona, prevalence.census.pivs, prevalence.census.bacteria, prevalence.census.other)
head(prevalence.census.families)
prevalence.census.families$Prevalence <- with(prevalence.census.families, Positives/Runs)
prevalence.census.families <- with(prevalence.census.families, aggregate(Prevalence~YearWeek+CensusRegionNational+ShortName, FUN=mean))
prevalence.census.families <- merge(prevalence.census.families, population.dist.2016, by='CensusRegionNational')
prevalence.census.families$WeightedPrevalence <- with(prevalence.census.families, Prevalence*PopulationPercent)
prevalence.census.nat.families <- with(prevalence.census.families, aggregate(WeightedPrevalence~YearWeek+ShortName, FUN=sum))
prevalence.census.nat.families[grep('FluB', prevalence.census.nat.families$ShortName), 'ShortName'] <- 'Influenza B'
ggplot(prevalence.census.nat.families[with(prevalence.census.nat.families, order(ShortName, decreasing=TRUE)),], aes(x=YearWeek)) + geom_area(aes(y=WeightedPrevalence, fill=ShortName, group=ShortName, order=ShortName), stat='identity', position='stack') + scale_fill_manual(values=bug.family.Pal, name='') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,0.8), breaks=c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8), labels=c(0, 10, 20, 30, 40, 50, 60, 70, 80)) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + labs(title='', y='Detection (%)', x='Date')
p.PercentDetectionTrend_Grouped_Weighted <- ggplot(prevalence.census.nat.families[with(prevalence.census.nat.families, order(ShortName, decreasing=TRUE)),], aes(x=YearWeek)) + geom_area(aes(y=WeightedPrevalence, fill=ShortName, group=ShortName, order=ShortName), stat='identity', position='stack') + scale_fill_manual(values=bug.family.Pal, name='') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,0.8), breaks=c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8), labels=c(0, 10, 20, 30, 40, 50, 60, 70, 80)) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + labs(title='', y='Detection (%)', x='Date')
head(prev.pareto.seasonal.all.nat)
head(prevalence.reg.agg)
head(prevalence.reg.census.agg)
head(prev.pareto.seasonal.all)
head(prev.pareto.seasonal.all)
head(prev.pareto.seasonal.all.nat)
unique(prev.pareto.seasonal.all.nat$ShortName)
factor(prev.pareto.seasonal.all.nat$ShortName, levels = label.order.seasonal.all)
head(prev.pareto.seasonal.all)
unique(prev.pareto.seasonal.all)
unique(prev.pareto.seasonal.all$ShortName)
head(prev.pareto.seasonal.all)
prev.pareto.seasonal.all.census <- with(prev.pareto.seasonal.all, aggregate(cbind(Runs, Positives)~CustomerSiteId+Code+ShortName))
prev.pareto.seasonal.all.census <- with(prev.pareto.seasonal.all, aggregate(cbind(Runs, Positives)~CustomerSiteId+Code+ShortName, FUN=sum))
prev.pareto.seasonal.all.census$Prevalence <- with(prev.pareto.seasonal.all.census, Positives/Runs)
head(prev.pareto.seasonal.all.census)
head(sitesByCensusRegions.etc)
prev.pareto.seasonal.all.census <- merge(prev.pareto.seasonal.all.census, sitesByCensusRegions.etc[,c('CustomerSiteId','CensusRegionNational')], by='CustomerSiteId')
head(prev.pareto.seasonal.all.census)
prev.pareto.seasonal.all.census <- with(prev.pareto.seasonal.all.census, aggregate(Prevalence~CensusRegionNational+Code+ShortName, FUN=mean))
head(prev.pareto.seasonal.all.census)
head(population.dist.2016)
merge(prev.pareto.seasonal.all.census, population.dist.2016, by='CensusRegionNational')
prev.pareto.seasonal.all.census <- merge(prev.pareto.seasonal.all.census, population.dist.2016, by='CensusRegionNational')
head(prev.pareto.seasonal.all.census)
prev.pareto.seasonal.all.census$WeightedPrevalence <- with(prev.pareto.seasonal.all.census, Prevalence*PopulationPercent)
head(prev.pareto.seasonal.all.census)
prev.pareto.seasonal.all.census <- with(prev.pareto.seasonal.all.census, aggregate(WeightedPrevalence~Code+ShortName, FUN=sum))
head(prev.pareto.seasonal.all.census)
prev.pareto.seasonal.all.census[with(prev.pareto.seasonal.all, order(WeightedPrevalence, decreasing = TRUE)), ]
prev.pareto.seasonal.all.census[with(prev.pareto.seasonal.all.census, order(WeightedPrevalence, decreasing = TRUE)), ]
prev.pareto.seasonal.all.census[with(prev.pareto.seasonal.all.census, order(WeightedPrevalence, decreasing = TRUE)), ]
head(prev.pareto.seasonal.all.nat)
prev.pareto.seasonal.all.nat[with(prev.pareto.seasonal.all.nat, order(Prevalence, decreasing = TRUE)), ]
head(prev.pareto.seasonal.all.census)
head(prev.pareto.seasonal.all.nat)
lavels(prev.pareto.seasonal.all.nat$Name)
levels(prev.pareto.seasonal.all.nat$Name)
prev.pareto.seasonal.all.census.ind <- prev.pareto.seasonal.all.census[!(prev.pareto.seasonal.all.census$Code %in% c('v','w','x','y')), ]
prev.pareto.seasonal.all.census.fam <- prev.pareto.seasonal.all.census[!(prev.pareto.seasonal.all.census$Code %in% c('b','c','d','e','f','g','j','k','l','m','o','p','q','r','s')), ]
label.order.sesonal.all
label.order.seasonal.all
factor(prev.pareto.seasonal.all.census$ShortName, levels = label.order.seasonal.all)
head(prev.pareto.seasonal.all.census)
label.order.seasonal.all
prev.pareto.seasonal.all.census$ShortName
factor(prev.pareto.seasonal.all.census$ShortName, levels = label.order.seasonal.all)
prev.pareto.seasonal.all.census$Name <- factor(prev.pareto.seasonal.all.census$ShortName, levels = label.order.seasonal.all)
head(prev.pareto.seasonal.all.nat)
head(prev.pareto.seasonal.all.census)
prev.pareto.seasonal.all.census <- with(prev.pareto.seasonal.all.census, aggregate(WeightedPrevalence~Code+ShortName, FUN=sum))
head(prev.pareto.seasonal.all.census)
colnames(prev.pareto.seasonal.all.census)[3] <- 'Prevalence'
prev.pareto.seasonal.all.census.ind <- prev.pareto.seasonal.all.census[!(prev.pareto.seasonal.all.census$Code %in% c('v','w','x','y')), ]
prev.pareto.seasonal.all.census.fam <- prev.pareto.seasonal.all.census[!(prev.pareto.seasonal.all.census$Code %in% c('b','c','d','e','f','g','j','k','l','m','o','p','q','r','s')), ]
prev.pareto.seasonal.all.census$Name <- factor(prev.pareto.seasonal.all.census$ShortName, levels = label.order.seasonal.all)
rbind(data.frame(prev.pareto.seasonal.all.nat, Key = 'No Weighting'), data.frame(prev.pareto.seasonal.all.census, Key = 'Weighted by Population'))
prev.pareto.seasonal.all.sbys <- rbind(data.frame(prev.pareto.seasonal.all.nat, Key = 'No Weighting'), data.frame(prev.pareto.seasonal.all.census, Key = 'Weighted by Population'))
ggplot(prev.pareto.seasonal.all.sbys, aes(x=Name, y=Prevalence, fill='Key')) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(data.frame(Key='Key'), 'Key'), guide=FALSE) + scale_y_continuous(limits=c(0,0.3), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
ggplot(prev.pareto.seasonal.all.sbys, aes(x=Name, y=Prevalence, fill=Key)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.seasonal.all.sbys, 'Key'), guide=FALSE) + scale_y_continuous(limits=c(0,0.3), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
ggplot(prev.pareto.seasonal.all.sbys, aes(x=Name, y=Prevalence, fill=Key)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.seasonal.all.sbys, 'Key'), name='') + scale_y_continuous(limits=c(0,0.3), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
p.PercentDetectionParetoSeasonal_SideBySide <- ggplot(prev.pareto.seasonal.all.sbys, aes(x=Name, y=Prevalence, fill=Key)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.seasonal.all.sbys, 'Key'), name='') + scale_y_continuous(limits=c(0,0.3), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
prev.pareto.seasonal.all.census.ind$Name <- factor(prev.pareto.seasonal.all.census.ind$ShortName, levels = label.order.season.ind)
prev.pareto.seasonal.all.census.ind$Name <- factor(prev.pareto.seasonal.all.census.ind$ShortName, levels = label.order.season.ind)
prev.pareto.seasonal.all.census.fam$Name <- factor(prev.pareto.seasonal.all.census.fam$ShortName, levels = label.order.seasonal.fam)
head(prev.pareto.seasonal.all.census.ind)
head(prev.pareto.seasonal.all.census.fam)
prev.pareto.seasonal.all.sbys.ind <- rbind(data.frame(prev.pareto.seasonal.all.nat.ind, Key = 'No Weighting'), data.frame(prev.pareto.seasonal.all.census.ind, Key = 'Population Weighted'))
prev.pareto.seasonal.all.sbys.fam <- rbind(data.frame(prev.pareto.seasonal.all.nat.fam, Key = 'No Weighting'), data.frame(prev.pareto.seasonal.all.census.fam, Key = 'Population Weighted'))
ggplot(prev.pareto.seasonal.all.sbys.ind, aes(x=Name, y=Prevalence, fill=Key)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.seasonal.all.sbys.ind, 'Key'), name='') + scale_y_continuous(limits=c(0,0.3), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
ggplot(prev.pareto.seasonal.all.sbys.fam, aes(x=Name, y=Prevalence, fill=Key)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.seasonal.all.sbys.fam, 'Key'), name='') + scale_y_continuous(limits=c(0,0.3), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
p.PercentDetectionParetoSeasonal_SideBySide <- ggplot(prev.pareto.seasonal.all.sbys, aes(x=Name, y=Prevalence, fill=Key)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.seasonal.all.sbys, 'Key'), name='') + scale_y_continuous(limits=c(0,0.3), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
p.PercentDetectionParetoSeasonal_Individual_SideBySide <- ggplot(prev.pareto.seasonal.all.sbys.ind, aes(x=Name, y=Prevalence, fill=Key)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.seasonal.all.sbys.ind, 'Key'), name='') + scale_y_continuous(limits=c(0,0.3), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
p.PercentDetectionParetoSeasonal_Family_SideBySide <- ggplot(prev.pareto.seasonal.all.sbys.fam, aes(x=Name, y=Prevalence, fill=Key)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.seasonal.all.sbys.fam, 'Key'), name='') + scale_y_continuous(limits=c(0,0.3), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
plots <- ls()[grep('^p\\.',ls())]
for(i in 1:length(plots)) {
imgName <- paste(substring(plots[i],3),'.png',sep='')
png(file=paste('Figures', imgName, sep='/'), width=1200, height=800, units='px')
print(eval(parse(text = plots[i])))
dev.off()
}
plots
rm(p.a.cdc)
plots <- ls()[grep('^p\\.',ls())]
for(i in 1:length(plots)) {
print(plots[i])
imgName <- paste(substring(plots[i],3),'.png',sep='')
png(file=paste('Figures', imgName, sep='/'), width=1200, height=800, units='px')
print(eval(parse(text = plots[i])))
dev.off()
}
ggplot(subset(prev.pareto.seasonal.all.year.fam, SeasonYear!='2016-2017'), aes(x=Name, y=Prevalence, fill=SeasonYear)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.seasonal.all.year, 'SeasonYear'), name='') + scale_y_continuous(limits=c(0,0.3), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
dev.off()
ggplot(subset(prev.pareto.seasonal.all.year.ind, SeasonYear!='2016-2017'), aes(x=Name, y=Prevalence, fill=SeasonYear)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.seasonal.all.year, 'SeasonYear'), name='') + scale_y_continuous(limits=c(0,0.3), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
head(prev.pareto.seasonal.all.year)
head(prev.pareto.seasonal.all.year.ind)
head(prev.pareto.seasonal.all.year.fam)
heaD(prev.pareto.seasonal.all.year)
head(prev.pareto.seasonal.all.year)
prev.pareto.seasonal.all.year <- with(prev.pareto.seasonal.all, aggregate(cbind(Runs, Positives)~SeasonYear+ShortName+Code+CustomerSiteId, FUN=sum))
prev.pareto.seasonal.all.year$Prevalence <- with(prev.pareto.seasonal.all.year, Positives/Runs)
prev.pareto.seasonal.all.year <- with(prev.pareto.seasonal.all.year, aggregate(Prevalence~SeasonYear+ShortName+Code, FUN=mean))
prev.pareto.seasonal.all.year$Name <- factor(prev.pareto.seasonal.all.year$ShortName, levels = label.order.seasonal.all)
prev.pareto.seasonal.all.year.ind <- prev.pareto.seasonal.all.year[!(prev.pareto.seasonal.all.year$Code %in% c('v','w','x','y')), ]
prev.pareto.seasonal.all.year.fam <- prev.pareto.seasonal.all.year[!(prev.pareto.seasonal.all.year$Code %in% c('b','c','d','e','f','g','j','k','l','m','o','p','q','r','s')), ]
prev.pareto.seasonal.all.year.ind$Name <- factor(prev.pareto.seasonal.all.year.ind$ShortName, levels = label.order.season.ind)
prev.pareto.seasonal.all.year.fam$Name <- factor(prev.pareto.seasonal.all.year.fam$ShortName, levels = label.order.seasonal.fam)
ggplot(subset(prev.pareto.seasonal.all.year, SeasonYear!='2016-2017'), aes(x=Name, y=Prevalence, fill=SeasonYear)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.seasonal.all.year, 'SeasonYear'), name='') + scale_y_continuous(limits=c(0,0.3), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
ggplot(subset(prev.pareto.seasonal.all.year.ind, SeasonYear!='2016-2017'), aes(x=Name, y=Prevalence, fill=SeasonYear)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.seasonal.all.year, 'SeasonYear'), name='') + scale_y_continuous(limits=c(0,0.3), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
ggplot(subset(prev.pareto.seasonal.all.year.fam, SeasonYear!='2016-2017'), aes(x=Name, y=Prevalence, fill=SeasonYear)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.seasonal.all.year, 'SeasonYear'), name='') + scale_y_continuous(limits=c(0,0.3), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
p.PercentDetectionParetoAnnualSeasonal <- ggplot(subset(prev.pareto.seasonal.all.year, SeasonYear!='2016-2017'), aes(x=Name, y=Prevalence, fill=SeasonYear)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.seasonal.all.year, 'SeasonYear'), name='') + scale_y_continuous(limits=c(0,0.3), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
p.PercentDetectionParetoAnnualSeasonal_Individual <- ggplot(subset(prev.pareto.seasonal.all.year.ind, SeasonYear!='2016-2017'), aes(x=Name, y=Prevalence, fill=SeasonYear)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.seasonal.all.year, 'SeasonYear'), name='') + scale_y_continuous(limits=c(0,0.3), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
p.PercentDetectionParetoAnnualSeasonal_Family <- ggplot(subset(prev.pareto.seasonal.all.year.fam, SeasonYear!='2016-2017'), aes(x=Name, y=Prevalence, fill=SeasonYear)) + geom_bar(stat='identity', position='dodge') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.seasonal.all.year, 'SeasonYear'), name='') + scale_y_continuous(limits=c(0,0.3), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
plots <- ls()[grep('^p\\.',ls())]
for(i in 1:length(plots)) {
imgName <- paste(substring(plots[i],3),'.png',sep='')
png(file=paste('Figures', imgName, sep='/'), width=1200, height=800, units='px')
print(eval(parse(text = plots[i])))
dev.off()
}
