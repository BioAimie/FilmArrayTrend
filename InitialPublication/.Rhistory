cor.vars
head(multiple.var.cor)
cor.prev.noFluA <- prevalence.nat.individual.wrap[!(prevalence.nat.individual.wrap$ShortName %in% as.character(unique(prevalence.nat.individual.wrap[grep('Influenza A', prevalence.nat.individual.wrap$Bug), 'ShortName']))), c('YearWeek','ShortName','Prevalence')]
cor.prev.FluA <- prevalence.nat.families[prevalence.nat.families$Key=='Influenza A', c('YearWeek','Name','Prevalence')]
colnames(cor.prev.noFluA) <-  c('YearWeek','Name','Prevalence')
cor.prev <- rbind(cor.prev.noFluA, cor.prev.FluA)
cor.prev$YearWeek <- as.character(cor.prev$YearWeek)
cor.prev$Name <- as.character(cor.prev$Name)
cor.prev <- merge(cor.prev[cor.prev$YearWeek >= '2013-26', ], ili.burn.nat, by='YearWeek')
cor.prev[grep('Influenza A', cor.prev$Name), 'Name'] <- 'FluA'
weeks.in.cor <- unique(cor.prev$YearWeek)
weeks.in.cor <- weeks.in.cor[sapply(1:length(weeks.in.cor), function(x) length(cor.prev[cor.prev$YearWeek==weeks.in.cor[x], 'Name']))==17]
cor.prev <- cor.prev[cor.prev$YearWeek %in% weeks.in.cor, ]
cor.vars <- unique(cor.prev$Name)
cor.vars <- cor.vars[order(cor.vars)]
single.var.cor <- data.frame(Name = cor.vars, CorILI = sapply(1:length(cor.vars), function(x) cor(cor.prev[cor.prev$Name==cor.vars[x], 'Prevalence'], cor.prev[cor.prev$Name==cor.vars[x], 'Rate'])), CorTURN = sapply(1:length(cor.vars), function(x) cor(cor.prev[cor.prev$Name==cor.vars[x], 'Prevalence'], cor.prev[cor.prev$Name==cor.vars[x], 'NormalizedBurn'])), R2ILI = sapply(1:length(cor.vars), function(x) summary(lm(Rate~Prevalence, cor.prev[cor.prev$Name==cor.vars[x], ]))$adj.r.squared), R2TURN = sapply(1:length(cor.vars), function(x) summary(lm(NormalizedBurn~Prevalence, cor.prev[cor.prev$Name==cor.vars[x], ]))$adj.r.squared))
multiple.var.cor <- data.frame(VariableCount = 1,
BestCorComboILI = as.character(single.var.cor[single.var.cor$CorILI==max(single.var.cor$CorILI), 'Name']),
BestCorILI  = max(single.var.cor$CorILI),
BestCorComboTURN = as.character(single.var.cor[single.var.cor$CorTURN==max(single.var.cor$CorTURN), 'Name']),
BestCorTURN  = max(single.var.cor$CorTURN),
BestR2ComboILI = as.character(single.var.cor[single.var.cor$R2ILI==max(single.var.cor$R2ILI), 'Name']),
BestR2ILI  = max(single.var.cor$R2ILI),
BestR2ComboTURN = as.character(single.var.cor[single.var.cor$R2TURN==max(single.var.cor$R2TURN), 'Name']),
BestR2TURN  = max(single.var.cor$R2TURN)
)
library(RODBC)
library(lubridate)
library(EpiWeek)
library(ggplot2)
library(grid)
library(gridExtra)
library(scales)
library(gtable)
library(RColorBrewer)
library(devtools)
library(RCurl)
library(binom)
library(caret)
library(rpart)
library(party)
library(partykit)
library(randomForest)
library(dplyr)
require(dateManip)
grid.draw(fluTriple)
ggplot(cdc.bfdx.flu.nat, aes(x=YearWeek, y=FluPercentDetection, group='FilmArrary Detection', color='FilmArray Detection')) + geom_line(size=2) + geom_line(aes(x=YearWeek, y=FluPrevalence, group='CDC Flu Prevalence', color='CDC Flu Prevalence'), cdc.bfdx.flu.nat, lwd=1.5)  + geom_line(aes(x=YearWeek, y=8*Rate, group='CDC ILI Rate', color='CDC ILI Rate'), cdc.bfdx.flu.nat, lwd=1.5) + scale_color_manual(values=c('black','blue','red','darkgreen'), name='') + scale_y_continuous(breaks=c(0,.07,0.14,0.21,0.28,0.35), limits=c(0,0.35), labels=c(0, 7, 14, 21, 28, 35)) + scale_x_discrete(breaks = dateBreaksAlt2, labels = dateLabelsAlt2) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank(), axis.ticks.x=element_blank()) + labs(y='FilmArray Detection (%), Flu Prevalence (%)', x='Date')
ggplot(cdc.bfdx.flu.nat, aes(x=YearWeek, y=FluPercentDetection, group='FilmArrary Detection', color='FilmArray Detection')) + geom_line(size=2) + geom_line(aes(x=YearWeek, y=FluPrevalence, group='CDC Flu Prevalence', color='CDC Flu Prevalence'), cdc.bfdx.flu.nat, lwd=1.5) + scale_color_manual(values=c('black','blue','red','darkgreen'), name='') + scale_y_continuous(breaks=c(0,.07,0.14,0.21,0.28,0.35), limits=c(0,0.35), labels=c(0, 7, 14, 21, 28, 35)) + scale_x_discrete(breaks = dateBreaksAlt2, labels = dateLabelsAlt2) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank(), axis.ticks.x=element_blank()) + labs(y='FilmArray Detection (%), Flu Prevalence (%)', x='Date')
p.InfluezaPrevalencePercentDetectionNoILI <- ggplot(cdc.bfdx.flu.nat, aes(x=YearWeek, y=FluPercentDetection, group='FilmArrary Detection', color='FilmArray Detection')) + geom_line(size=2) + geom_line(aes(x=YearWeek, y=FluPrevalence, group='CDC Flu Prevalence', color='CDC Flu Prevalence'), cdc.bfdx.flu.nat, lwd=1.5) + scale_color_manual(values=c('black','blue','red','darkgreen'), name='') + scale_y_continuous(breaks=c(0,.07,0.14,0.21,0.28,0.35), limits=c(0,0.35), labels=c(0, 7, 14, 21, 28, 35)) + scale_x_discrete(breaks = dateBreaksAlt2, labels = dateLabelsAlt2) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank(), axis.ticks.x=element_blank()) + labs(y='FilmArray Detection (%), Flu Prevalence (%)', x='Date')
head(run.positive.count)
head(dual.detection.agg)
head(coParticipation.DetectionCount)
nrow(bugs.df[bugs.df$BugPositive=='Adenovirus', ])
head(dual.detection.runs)
nrow(dual.detection.runs[dual.detection.runs$BugPositive=='Adenovirus', ])
nrow(bugs.df[bugs.df$BugPositive=='Adenovirus' & bugs.df$RunDataId %in% run.positive.count$RunDataId, ])
head(coParticipation.DetectionCount)
grid.draw(paretoCoDets2)
data.frame(BugPositive = coParticipation.DetectionCount$BugPositive, SingleDetections = coParticipation.DetectionCount$Positives - coParticipation.DetectionCount$CoDetections)
rbind(data.frame(BugPositive = coParticipation.DetectionCount$BugPositive, SingleDetections = coParticipation.DetectionCount$Positives - coParticipation.DetectionCount$CoDetections),
data.frame(BugPositive = coParticipation.DetectionCount$BugPositive, CoDetections = coParticipation.DetectionCount$CoDetections))
rbind(data.frame(BugPositive = coParticipation.DetectionCount$BugPositive, Key = 'Tests with a Single Detection', Detections = coParticipation.DetectionCount$Positives - coParticipation.DetectionCount$CoDetections),
data.frame(BugPositive = coParticipation.DetectionCount$BugPositive, Key = 'Tests with a Co-Detection', Detections = coParticipation.DetectionCount$CoDetections))
coParticipation.DetectionCount.fillByCount <- rbind(data.frame(BugPositive = coParticipation.DetectionCount$BugPositive, Key = 'Tests with a Single Detection', Detections = coParticipation.DetectionCount$Positives - coParticipation.DetectionCount$CoDetections), data.frame(BugPositive = coParticipation.DetectionCount$BugPositive, Key = 'Tests with a Co-Detection', Detections = coParticipation.DetectionCount$CoDetections))
ggplot(coParticipation.DetectionCount.fillByCount, aes(x=BugPositive, y=Detections, fill=Key)) + geom_bar(stat='identity')
head(coParticipation.DetectionCount.fillByCount)
merge(coParticipation.DetectionCount.fillByCount, shortnames.df, by.x='BugPositive', by.y='Interpretation')
head(shortnames.df)
merge(coParticipation.DetectionCount.fillByCount, shortnames.df, by.x='BugPositive', by.y='Organism')
coParticipation.DetectionCount.fillByCount <- data.frame(BugPositive = coParticipation.DetectionCount$BugPositive, Key = 'Tests with a Single Detection', Positives = coParticipation.DetectionCount$Positives, Detections = coParticipation.DetectionCount$Positives - coParticipation.DetectionCount$CoDetections)
coParticipation.DetectionCount.fillByCount <- merge(coParticipation.DetectionCount.fillByCount, shortnames.df, by.x='BugPositive', by.y='Organism')
coParticipation.DetectionCount.fillByCount$Name <- factor(coParticipation.DetectionCount.fillByCount$ShortName, levels=coParticipation.DetectionCount.fillByCount[with(coParticipation.DetectionCount.fillByCount, order(Positives, decreasing = TRUE)), 'ShortName'])
coParticipation.DetectionCount.fillByCount
levels(coParticipation.DetectionCount.fillByCount$Name)
data.frame(BugPositive = coParticipation.DetectionCount$BugPositive, Key = 'Tests with a Co-Detection', Positives = coParticipation.DetectionCount$Positives, Detections = coParticipation.DetectionCount$CoDetections)
merge(data.frame(BugPositive = coParticipation.DetectionCount$BugPositive, Key = 'Tests with a Co-Detection', Positives = coParticipation.DetectionCount$Positives, Detections = coParticipation.DetectionCount$CoDetections), shortnames.df, by.x='BugPositive', by.y='Organism')
coParticipation.DetectionCount.fillByCount.2 <- merge(data.frame(BugPositive = coParticipation.DetectionCount$BugPositive, Key = 'Tests with a Co-Detection', Positives = coParticipation.DetectionCount$Positives, Detections = coParticipation.DetectionCount$CoDetections), shortnames.df, by.x='BugPositive', by.y='Organism')
factor(coParticipation.DetectionCount.fillByCount.2$ShortName, levels = levels(coParticipation.DetectionCount.fillByCount$Name))
coParticipation.DetectionCount.fillByCount.2$Name <- factor(coParticipation.DetectionCount.fillByCount.2$ShortName, levels = levels(coParticipation.DetectionCount.fillByCount$Name))
coParticipation.DetectionCount.fillByCount <- rbind(coParticipation.DetectionCount.fillByCount, coParticipation.DetectionCount.fillByCount.2)
rm(coParticipation.DetectionCount.fillByCount.2)
ggplot(coParticipation.DetectionCount.fillByCount, aes(x=BugPositive, y=Detections, fill=Key)) + geom_bar(stat='identity')
ggplot(coParticipation.DetectionCount.fillByCount, aes(x=Name, y=Detections, fill=Key)) + geom_bar(stat='identity')
head(coParticipation.DetectionCount.fillByCount)
coParticipation.DetectionCount.fillByCount$Percentage <- with(coParticipation.DetectionCount.fillByCount, Detections/Positives)
ggplot(coParticipation.DetectionCount.fillByCount, aes(x=Name, y=Detections, fill=Key)) + geom_bar(stat='identity')
ggplot(coParticipation.DetectionCount.fillByCount, aes(x=Name, y=Percentage, fill=Key)) + geom_bar(stat='identity')
head(coParticipation.DetectionCount.fillByCount)
coParticipation.DetectionCount.fillByCount$Percentage <- coParticipation.DetectionCount.fillByCount$Detections/total.runs
ggplot(coParticipation.DetectionCount.fillByCount, aes(x=Name, y=Percentage, fill=Key)) + geom_bar(stat='identity')
ggplot(coParticipation.DetectionCount.fillByCount, aes(x=Name, y=Percentage, fill=Key)) + geom_bar(stat='identity') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(data.frame(coParticipation.DetectionCount.fillByCount, 'Key'), guide=FALSE) + scale_y_continuous(limits=c(0,0.3), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
ggplot(coParticipation.DetectionCount.fillByCount, aes(x=Name, y=Percentage, fill=Key)) + geom_bar(stat='identity') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(coParticipation.DetectionCount.fillByCount, 'Key'), guide=FALSE) + scale_y_continuous(limits=c(0,0.3), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
ggplot(coParticipation.DetectionCount.fillByCount, aes(x=Name, y=Percentage, fill=Key)) + geom_bar(stat='identity') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(coParticipation.DetectionCount.fillByCount, 'Key'), guide=FALSE) + scale_y_continuous(limits=c(0,0.25), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
ggplot(coParticipation.DetectionCount.fillByCount, aes(x=Name, y=Percentage, fill=Key)) + geom_bar(stat='identity') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(coParticipation.DetectionCount.fillByCount, 'Key'), name='FALSE') + scale_y_continuous(limits=c(0,0.25), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
ggplot(coParticipation.DetectionCount.fillByCount, aes(x=Name, y=Percentage, fill=Key)) + geom_bar(stat='identity') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(coParticipation.DetectionCount.fillByCount, 'Key'), name='') + scale_y_continuous(limits=c(0,0.25), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
coParticipation.DetectionCount.fillByCount <- data.frame(BugPositive = coParticipation.DetectionCount$BugPositive, Key = 'Single Detection', Positives = coParticipation.DetectionCount$Positives, Detections = coParticipation.DetectionCount$Positives - coParticipation.DetectionCount$CoDetections)
coParticipation.DetectionCount.fillByCount <- merge(coParticipation.DetectionCount.fillByCount, shortnames.df, by.x='BugPositive', by.y='Organism')
coParticipation.DetectionCount.fillByCount$Name <- factor(coParticipation.DetectionCount.fillByCount$ShortName, levels=coParticipation.DetectionCount.fillByCount[with(coParticipation.DetectionCount.fillByCount, order(Positives, decreasing = TRUE)), 'ShortName'])
coParticipation.DetectionCount.fillByCount.2 <- merge(data.frame(BugPositive = coParticipation.DetectionCount$BugPositive, Key = 'Co-Detection', Positives = coParticipation.DetectionCount$Positives, Detections = coParticipation.DetectionCount$CoDetections), shortnames.df, by.x='BugPositive', by.y='Organism')
coParticipation.DetectionCount.fillByCount.2$Name <- factor(coParticipation.DetectionCount.fillByCount.2$ShortName, levels = levels(coParticipation.DetectionCount.fillByCount$Name))
coParticipation.DetectionCount.fillByCount <- rbind(coParticipation.DetectionCount.fillByCount, coParticipation.DetectionCount.fillByCount.2)
rm(coParticipation.DetectionCount.fillByCount.2)
coParticipation.DetectionCount.fillByCount$Percentage <- coParticipation.DetectionCount.fillByCount$Detections/total.runs
ggplot(coParticipation.DetectionCount.fillByCount, aes(x=Name, y=Percentage, fill=Key)) + geom_bar(stat='identity') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(data.frame(coParticipation.DetectionCount.fillByCount, 'Key'), guide=FALSE) + scale_y_continuous(limits=c(0,0.3), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
ggplot(coParticipation.DetectionCount.fillByCount, aes(x=Name, y=Percentage, fill=Key)) + geom_bar(stat='identity') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(coParticipation.DetectionCount.fillByCount, 'Key'), name='') + scale_y_continuous(limits=c(0,0.25), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
ggplot(subset(coParticipation.DetectionCount.fillByCount, ShortName!='HRV/EV'), aes(x=Name, y=Percentage, fill=Key)) + geom_bar(stat='identity') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(coParticipation.DetectionCount.fillByCount, 'Key'), name='') + scale_y_continuous(limits=c(0,0.25), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
ggplot(subset(coParticipation.DetectionCount.fillByCount, ShortName!='HRV/EV'), aes(x=Name, y=Percentage, fill=Key)) + geom_bar(stat='identity') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(coParticipation.DetectionCount.fillByCount, 'Key'), name='') + scale_y_continuous(limits=c(0,0.10), breaks=c(0,0.025,0.05,0.075,0.10), labels=c('0.0','2.5','5.0','7.5','10','25','30')) + labs(x='', y='Detection (%)')
ggplot(subset(coParticipation.DetectionCount.fillByCount, ShortName!='HRV/EV'), aes(x=Name, y=Percentage, fill=Key)) + geom_bar(stat='identity') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(coParticipation.DetectionCount.fillByCount, 'Key'), name='') + scale_y_continuous(limits=c(0,0.10), breaks=c(0,0.025,0.05,0.075,0.10), labels=c('0.0','2.5','5.0','7.5','10')) + labs(x='', y='Detection (%)')
p.SingleAndCoDetectionPercentOfRuns <- ggplot(coParticipation.DetectionCount.fillByCount, aes(x=Name, y=Percentage, fill=Key)) + geom_bar(stat='identity') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(coParticipation.DetectionCount.fillByCount, 'Key'), name='') + scale_y_continuous(limits=c(0,0.25), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30')) + labs(x='', y='Detection (%)')
p.SingleAndCoDetectionPercentOfRuns_NoHRV <- ggplot(subset(coParticipation.DetectionCount.fillByCount, ShortName!='HRV/EV'), aes(x=Name, y=Percentage, fill=Key)) + geom_bar(stat='identity') + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(coParticipation.DetectionCount.fillByCount, 'Key'), name='') + scale_y_continuous(limits=c(0,0.10), breaks=c(0,0.025,0.05,0.075,0.10), labels=c('0.0','2.5','5.0','7.5','10.0')) + labs(x='', y='Detection (%)')
head(runs.reg.date)
head(positives.count.all)
head(positives.count.seasonal.agg)
ggplot(positives.count.all, aes(x=YearWeek, y=Runs)) + geom_bar(stat='identity')
ggplot(positives.count.all, aes(x=YearWeek, y=Runs, group='Test Utilization')) + geom_line(size=1.5)
ggplot(positives.count.all, aes(x=YearWeek, y=mean(Runs), group='Test Utilization')) + geom_line(size=1.5)
head(positives.count.all)
with(positives.count.all, aggregate(Runs~YearWeek+CustomerSiteId, FUN=mean))
with(with(positives.count.all, aggregate(Runs~YearWeek+CustomerSiteId, FUN=mean)), aggregate(Runs~YearWeek, FUN=sum))
head(positives.count.all)
with(positives.count.all, aggregate(Positives~YearWeek+Bug, FUN=sum))
with(positives.count.all, aggregate(Positives~YearWeek+Bug, FUN=sum))
a <- with(positives.count.all, aggregate(Positives~YearWeek+Bug, FUN=sum))
library(dplyr)
library(dplyr)
library(tdyr)
library(tidyr)
head(a)
spread(a, Bug, Positives)
b <- spread(a, Bug, Positives)
head(b)
rm(a, b)
tur.nat <- with(with(positives.count.all, aggregate(Runs~YearWeek+CustomerSiteId, FUN=mean)), aggregate(Runs~YearWeek, FUN=sum))
tur.positives.nat <- with(positives.count.all, aggregate(Positives~YearWeek+Bug, FUN=sum))
heaD(tur.nat)
head(tur.nat)
head(tur.positives.nat)
ggplot(tur.positives.nat, aes(x=YearWeek, y=Positives, fill=Bug)) + geom_bar(stat='identity') + geom_line(aes(x=YearWeek, y=Runs, group='TUR'), data=tur.nat)
ggplot(tur.positives.nat, aes(x=YearWeek, y=Positives, fill=Bug)) + geom_bar(stat='identity')
ggplot(tur.positives.nat, aes(x=YearWeek, y=Positives, fill=Bug)) + geom_bar(stat='identity') + geom_line(aes(x=YearWeek, y=Runs, group='TUR'), data=tur.nat)
ggplot(tur.positives.nat, aes(x=YearWeek, y=Positives, fill=Bug)) + geom_bar(stat='identity', data=tur.positives.nat) + geom_line(aes(x=YearWeek, y=Runs, group='TUR'), data=tur.nat)
ggplot(tur.positives.nat, aes(x=YearWeek, y=Positives, fill=Bug)) + geom_bar(stat='identity', data=tur.positives.nat) + geom_line(aes(x=YearWeek, y=Positives, group=Bug), data=tur.positives.nat)
tur.positives.nat <- merge(turn.nat, with(positives.count.all, aggregate(Positives~YearWeek+Bug, FUN=sum)), by='YearWeek')
tur.nat <- with(with(positives.count.all, aggregate(Runs~YearWeek+CustomerSiteId, FUN=mean)), aggregate(Runs~YearWeek, FUN=sum))
tur.positives.nat <- merge(tur.nat, with(positives.count.all, aggregate(Positives~YearWeek+Bug, FUN=sum)), by='YearWeek')
head(tur.positives.nat)
ggplot(tur.positives.nat, aes(x=YearWeek, y=Positives, fill=Bug)) + geom_bar(stat='identity', data=tur.positives.nat) + geom_line(aes(x=YearWeek, y=Positives, group=1), data=tur.positives.nat)
ggplot(tur.positives.nat, aes(x=YearWeek, y=Positives, fill=Bug)) + geom_bar(stat='identity') + geom_line(aes(x=YearWeek, y=Positives, group=1), data=tur.positives.nat)
ggplot(tur.positives.nat, aes(x=YearWeek, y=Positives, fill=Bug)) + geom_bar(stat='identity') + geom_line(aes(x=YearWeek, y=Runs, group=1), data=tur.positives.nat)
ggplot(tur.positives.nat, aes(x=YearWeek, y=Positives, fill=Bug)) + geom_bar(stat='identity') + geom_line(aes(x=YearWeek, y=Runs, group=1), data=tur.positives.nat, size=1.5)
ggplot(tur.positives.nat, aes(x=YearWeek, y=Positives, fill=Bug)) + geom_bar(stat='identity') + geom_line(aes(x=YearWeek, y=Runs, group=1), data=tur.positives.nat, size=1.5) + scale_fill_manual(values=bug.individual.Pal, name='') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,0.8), labels=c(0, 10, 20, 30, 40, 50, 60, 70, 80), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8)) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='Detection (%)', x='Date')
ggplot(tur.positives.nat, aes(x=YearWeek, y=Positives, fill=Bug)) + geom_bar(stat='identity') + geom_line(aes(x=YearWeek, y=Runs, group=1), data=tur.positives.nat, size=1.5) + scale_fill_manual(values=bug.individual.Pal, name='') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='Detection (%)', x='Date')
ggplot(tur.positives.nat, aes(x=YearWeek, y=Positives, fill=Bug)) + geom_bar(stat='identity') + geom_line(aes(x=YearWeek, y=Runs, group=1), data=tur.positives.nat, size=1.5) + scale_fill_manual(values=bug.individual.Pal, name='') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='', x='Date')
bug.individual.Pal
merge(tur.positives.nat, shortnames.df, by.x='Bug', by.y='Organism')
tur.positives.nat <- merge(tur.positives.nat, shortnames.df, by.x='Bug', by.y='Organism')
ggplot(tur.positives.nat, aes(x=YearWeek, y=Positives, fill=ShortName)) + geom_bar(stat='identity') + geom_line(aes(x=YearWeek, y=Runs, group=1), data=tur.positives.nat, size=1.5) + scale_fill_manual(values=bug.individual.Pal, name='') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='', x='Date')
ggplot(tur.positives.nat[with(tur.positives.nat, order(ShortName, decreasing=TRUE)),], aes(x=YearWeek)) + geom_area(aes(y=Positives, fill=ShortName, group=ShortName, order=ShortName), stat='identity', position='stack') + scale_fill_manual(values=bug.individual.Pal, name='') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='Detection (%)', x='Date')
ggplot(subset(tur.positives.nat[with(tur.positives.nat, order(ShortName, decreasing=TRUE)),], YearWeek >= '2013-26'), aes(x=YearWeek)) + geom_area(aes(y=Positives, fill=ShortName, group=ShortName, order=ShortName), stat='identity', position='stack') + scale_fill_manual(values=bug.individual.Pal, name='') + geom_line(aes(x=YearWeek, y=Runs, group='TUR'), data=subset(tur.positives.nat[with(tur.positives.nat, order(ShortName, decreasing=TRUE)),], YearWeek >= '2013-26'), size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='Detection (%)', x='Date')
ggplot(subset(tur.positives.nat[with(tur.positives.nat, order(ShortName, decreasing=TRUE)),], YearWeek >= '2013-26'), aes(x=YearWeek)) + geom_area(aes(y=Positives, fill=ShortName, group=ShortName, order=ShortName), stat='identity', position='stack') + scale_fill_manual(values=bug.individual.Pal, name='') + geom_line(aes(x=YearWeek, y=Runs, group='TUR'), data=subset(tur.positives.nat[with(tur.positives.nat, order(ShortName, decreasing=TRUE)),], YearWeek >= '2013-26'), size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), axis.text.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='Test Utilization, Detections', x='Date')
p.DetectionsWithTUR_NoYAxis <- ggplot(subset(tur.positives.nat[with(tur.positives.nat, order(ShortName, decreasing=TRUE)),], YearWeek >= '2013-26'), aes(x=YearWeek)) + geom_area(aes(y=Positives, fill=ShortName, group=ShortName, order=ShortName), stat='identity', position='stack') + scale_fill_manual(values=bug.individual.Pal, name='') + geom_line(aes(x=YearWeek, y=Runs, group='TUR'), data=subset(tur.positives.nat[with(tur.positives.nat, order(ShortName, decreasing=TRUE)),], YearWeek >= '2013-26'), size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), axis.text.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='Test Utilization, Detections', x='Date')
data.frame(VariableCount = 1,
BestCorCombo = as.character(single.var.cor.count[single.var.cor.count$CorTUR==max(single.var.cor.count$CorTUR), 'ShortName']),
BestCor = max(single.var.cor.count$CorTUR),
BestR2Combo = as.character(single.var.cor.count[single.var.cor.count$R2TUR==max(single.var.cor.count$R2TUR), 'ShortName']),
BestR2 = max(single.var.cor.count$R2TUR)
)
multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), c('VariableCount','BestCorComboILI','BestCorILI')]
multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), c('VariableCount','BestCorComboILI','BestCorILI')]
multiple.var.cor
multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), c('VariableCount','BestCorComboILI','BestCorILI')]
multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), c('VariableCount','BestCorCombo','BestCor')]
multiple.var.cor <- data.frame(VariableCount = 1,
BestCorComboILI = as.character(single.var.cor[single.var.cor$CorILI==max(single.var.cor$CorILI), 'Name']),
BestCorILI  = max(single.var.cor$CorILI),
BestCorComboTURN = as.character(single.var.cor[single.var.cor$CorTURN==max(single.var.cor$CorTURN), 'Name']),
BestCorTURN  = max(single.var.cor$CorTURN),
BestR2ComboILI = as.character(single.var.cor[single.var.cor$R2ILI==max(single.var.cor$R2ILI), 'Name']),
BestR2ILI  = max(single.var.cor$R2ILI),
BestR2ComboTURN = as.character(single.var.cor[single.var.cor$R2TURN==max(single.var.cor$R2TURN), 'Name']),
BestR2TURN  = max(single.var.cor$R2TURN)
)
length(cor.vars)
for(i in 2:4) { # } length(cor.vars)) {
combos <- generateCombos(cor.vars, i, FALSE)
var.cor <- c()
for(j in 1:length(combos)) {
temp <- cor.prev[cor.prev$Name %in% combos[[j]], ]
temp.summed <- data.frame(YearWeek = unique(temp$YearWeek), SummedPrev = with(temp, aggregate(Prevalence~YearWeek, FUN=sum))$Prevalence, ILI = with(temp, aggregate(Rate~YearWeek, FUN=mean))$Rate, TURN = with(temp, aggregate(NormalizedBurn~YearWeek, FUN=mean))$NormalizedBurn)
temp.var.cor <- data.frame(Name = paste(combos[[j]], collapse=', '), CorILI = cor(temp.summed$SummedPrev, temp.summed$ILI), CorTURN = cor(temp.summed$SummedPrev, temp.summed$TURN), R2ILI = summary(lm(ILI~SummedPrev, data=temp.summed))$adj.r.squared, R2TURN = summary(lm(TURN~SummedPrev, data=temp.summed))$adj.r.squared)
var.cor <- rbind(var.cor, temp.var.cor)
}
multiple.var.cor <- rbind(multiple.var.cor, data.frame(VariableCount = i,
BestCorComboILI = as.character(var.cor[var.cor$CorILI==max(var.cor$CorILI), 'Name']),
BestCorILI  = max(var.cor$CorILI),
BestCorComboTURN = as.character(var.cor[var.cor$CorTURN==max(var.cor$CorTURN), 'Name']),
BestCorTURN  = max(var.cor$CorTURN),
BestR2ComboILI = as.character(var.cor[var.cor$R2ILI==max(var.cor$R2ILI), 'Name']),
BestR2ILI  = max(var.cor$R2ILI),
BestR2ComboTURN = as.character(var.cor[var.cor$R2TURN==max(var.cor$R2TURN), 'Name']),
BestR2TURN  = max(var.cor$R2TURN)
)
)
}
# THE BEST COMBINATION OF N ORGANISMS IN TERMS OF CORRELATION AND R2 HAVE BEEN DETERMINED, NOW FIGURE OUT WHICH N-COMBO PROVIDES THE BEST OVERALL
multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), c('VariableCount','BestCorComboILI','BestCorILI')]
multiple.var.cor
multiple.var.cor <- data.frame(VariableCount = 1,
BestCorComboILI = as.character(single.var.cor[single.var.cor$CorILI==max(single.var.cor$CorILI), 'Name']),
BestCorILI  = max(single.var.cor$CorILI),
BestCorComboTURN = as.character(single.var.cor[single.var.cor$CorTURN==max(single.var.cor$CorTURN), 'Name']),
BestCorTURN  = max(single.var.cor$CorTURN),
BestR2ComboILI = as.character(single.var.cor[single.var.cor$R2ILI==max(single.var.cor$R2ILI), 'Name']),
BestR2ILI  = max(single.var.cor$R2ILI),
BestR2ComboTURN = as.character(single.var.cor[single.var.cor$R2TURN==max(single.var.cor$R2TURN), 'Name']),
BestR2TURN  = max(single.var.cor$R2TURN)
)
# STOPPED HERE... SO I NEED TO RESTART HERE SO THAT I CAN MAKE THE CHARTS ASSOCIATED WITH ITEM 5 ON THE TRELLO CARD
for(i in 2:length(cor.vars)) { # somehow I had blanked out the multiple.var.cor so it isn't showing anything more than 1... so I will run with up to 4 since I think that at that point the correlation stops improving...
combos <- generateCombos(cor.vars, i, FALSE)
var.cor <- c()
for(j in 1:length(combos)) {
temp <- cor.prev[cor.prev$Name %in% combos[[j]], ]
temp.summed <- data.frame(YearWeek = unique(temp$YearWeek), SummedPrev = with(temp, aggregate(Prevalence~YearWeek, FUN=sum))$Prevalence, ILI = with(temp, aggregate(Rate~YearWeek, FUN=mean))$Rate, TURN = with(temp, aggregate(NormalizedBurn~YearWeek, FUN=mean))$NormalizedBurn)
temp.var.cor <- data.frame(Name = paste(combos[[j]], collapse=', '), CorILI = cor(temp.summed$SummedPrev, temp.summed$ILI), CorTURN = cor(temp.summed$SummedPrev, temp.summed$TURN), R2ILI = summary(lm(ILI~SummedPrev, data=temp.summed))$adj.r.squared, R2TURN = summary(lm(TURN~SummedPrev, data=temp.summed))$adj.r.squared)
var.cor <- rbind(var.cor, temp.var.cor)
}
multiple.var.cor <- rbind(multiple.var.cor, data.frame(VariableCount = i,
BestCorComboILI = as.character(var.cor[var.cor$CorILI==max(var.cor$CorILI), 'Name']),
BestCorILI  = max(var.cor$CorILI),
BestCorComboTURN = as.character(var.cor[var.cor$CorTURN==max(var.cor$CorTURN), 'Name']),
BestCorTURN  = max(var.cor$CorTURN),
BestR2ComboILI = as.character(var.cor[var.cor$R2ILI==max(var.cor$R2ILI), 'Name']),
BestR2ILI  = max(var.cor$R2ILI),
BestR2ComboTURN = as.character(var.cor[var.cor$R2TURN==max(var.cor$R2TURN), 'Name']),
BestR2TURN  = max(var.cor$R2TURN)
)
)
}
# THE BEST COMBINATION OF N ORGANISMS IN TERMS OF CORRELATION AND R2 HAVE BEEN DETERMINED, NOW FIGURE OUT WHICH N-COMBO PROVIDES THE BEST OVERALL
multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), c('VariableCount','BestCorComboILI','BestCorILI')]
ggplot(aes(x=YearWeek, y=Runs, group='TUR'), data=subset(tur.positives.nat[with(tur.positives.nat, order(ShortName, decreasing=TRUE)),], YearWeek >= '2013-26')) geom_line(size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), axis.text.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='Test Utilization', x='Date')
p.DetectionsWithTUR_NoYAxis <- ggplot(subset(tur.positives.nat[with(tur.positives.nat, order(ShortName, decreasing=TRUE)),], YearWeek >= '2013-26'), aes(x=YearWeek)) + geom_area(aes(y=Positives, fill=ShortName, group=ShortName, order=ShortName), stat='identity', position='stack') + scale_fill_manual(values=bug.individual.Pal, name='') + geom_line(aes(x=YearWeek, y=Runs, group='TUR'), data=subset(tur.positives.nat[with(tur.positives.nat, order(ShortName, decreasing=TRUE)),], YearWeek >= '2013-26'), size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), axis.text.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='Test Utilization, Detections', x='Date')
p.TUR_NoYAxis <- ggplot(aes(x=YearWeek, y=Runs, group='TUR'), data=subset(tur.positives.nat[with(tur.positives.nat, order(ShortName, decreasing=TRUE)),], YearWeek >= '2013-26')) geom_line(size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), axis.text.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='Test Utilization', x='Date')
ggplot(aes(x=YearWeek, y=Runs, group='TUR'), data=subset(tur.positives.nat[with(tur.positives.nat, order(ShortName, decreasing=TRUE)),], YearWeek >= '2013-26')) geom_line(size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), axis.text.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='Test Utilization', x='Date')
ggplot(aes(x=YearWeek, y=Runs, group='TUR'), data=subset(tur.positives.nat[with(tur.positives.nat, order(ShortName, decreasing=TRUE)),], YearWeek >= '2013-26')) + geom_line(size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), axis.text.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='Test Utilization', x='Date')
p.TUR_NoYAxis <- ggplot(aes(x=YearWeek, y=Runs, group='TUR'), data=subset(tur.positives.nat[with(tur.positives.nat, order(ShortName, decreasing=TRUE)),], YearWeek >= '2013-26')) + geom_line(size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), axis.text.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='Test Utilization', x='Date')
multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), c('VariableCount','BestCorComboILI','BestCorILI')]
multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), c('VariableCount','BestCorComboILI','BestCorILI')]
multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), c('VariableCount','BestCorCombo','BestCor')]
head(cor.prev)
multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), 'BestCorComboILI']
as.character(multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), 'BestCorComboILI'])
strsplit(as.character(multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), 'BestCorComboILI']), split = ', ')
strsplit(as.character(multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), 'BestCorComboILI']), split = ', ')[[1]]
cor.prev[cor.prev$Name %in% strsplit(as.character(multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), 'BestCorComboILI']), split = ', ')[[1]], ]
head(cor.prev[cor.prev$Name %in% strsplit(as.character(multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), 'BestCorComboILI']), split = ', ')[[1]], ])
ggplot(cor.prev[cor.prev$Name %in% strsplit(as.character(multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), 'BestCorComboILI']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=Name))
ggplot(cor.prev[cor.prev$Name %in% strsplit(as.character(multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), 'BestCorComboILI']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=Name, group=Name))
ggplot(cor.prev[cor.prev$Name %in% strsplit(as.character(multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), 'BestCorComboILI']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=Name, group=Name), stat='identity', position='stack')
ggplot(cor.prev[cor.prev$Name %in% strsplit(as.character(multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), 'BestCorComboILI']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=bug.individual.Pal, name='') + geom_line(aes(x=YearWeek, y=Runs, group='TUR'), data=subset(tur.positives.nat[with(tur.positives.nat, order(ShortName, decreasing=TRUE)),], YearWeek >= '2013-26'), size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), axis.text.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='', x='Date')
head(cor.prev[cor.prev$Name %in% strsplit(as.character(multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), 'BestCorComboILI']), split = ', ')[[1]], ])
ggplot(cor.prev[cor.prev$Name %in% strsplit(as.character(multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), 'BestCorComboILI']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=bug.individual.Pal, name='') + geom_line(aes(x=YearWeek, y=Rate, group='ILI'), data=cor.prev, size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), axis.text.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='', x='Date')
ggplot(cor.prev[cor.prev$Name %in% strsplit(as.character(multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), 'BestCorComboILI']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=bug.individual.Pal, name='') + geom_line(aes(x=YearWeek, y=Rate, group='ILI', color='ILI'), data=cor.prev, size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), axis.text.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='', x='Date')
ggplot(cor.prev[cor.prev$Name %in% strsplit(as.character(multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), 'BestCorComboILI']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=bug.family.Pal, name='') + geom_line(aes(x=YearWeek, y=Rate, group='ILI', color='ILI'), data=cor.prev, size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), axis.text.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='', x='Date')
ggplot(cor.prev[cor.prev$Name %in% strsplit(as.character(multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), 'BestCorComboILI']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=createPaletteOfVariableLength(cor.prev, 'Name'), name='') + geom_line(aes(x=YearWeek, y=Rate, group='ILI', color='ILI'), data=cor.prev, size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), axis.text.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='', x='Date')
ggplot(cor.prev[cor.prev$Name %in% strsplit(as.character(multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), 'BestCorComboILI']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=createPaletteOfVariableLength(cor.prev, 'Name'), name='') + geom_line(aes(x=YearWeek, y=Rate, group='ILI', color='ILI'), data=cor.prev, size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='', x='Date')
ggplot(cor.prev[cor.prev$Name %in% strsplit(as.character(multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), 'BestCorComboILI']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=createPaletteOfVariableLength(cor.prev, 'Name'), name='') + geom_line(aes(x=YearWeek, y=10*Rate, group='ILI', color='ILI'), data=cor.prev, size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='', x='Date')
ggplot(cor.prev[cor.prev$Name %in% strsplit(as.character(multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), 'BestCorComboILI']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=createPaletteOfVariableLength(cor.prev, 'Name'), name='') + geom_line(aes(x=YearWeek, y=8*Rate, group='ILI', color='ILI'), data=cor.prev, size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='', x='Date')
ggplot(cor.prev[cor.prev$Name %in% strsplit(as.character(multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), 'BestCorComboILI']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=createPaletteOfVariableLength(cor.prev, 'Name'), name='') + geom_line(aes(x=YearWeek, y=7*Rate, group='ILI', color='ILI'), data=cor.prev, size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='', x='Date')
ggplot(cor.prev[cor.prev$Name %in% strsplit(as.character(multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), 'BestCorComboILI']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=createPaletteOfVariableLength(cor.prev, 'Name'), name='') + geom_line(aes(x=YearWeek, y=6*Rate, group='ILI', color='ILI'), data=cor.prev, size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='', x='Date')
ggplot(cor.prev[cor.prev$Name %in% strsplit(as.character(multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), 'BestCorComboILI']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=createPaletteOfVariableLength(cor.prev, 'Name'), name='') + geom_line(aes(x=YearWeek, y=6*Rate, group='ILI', color='ILI'), data=cor.prev, size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='FilmArray Percent Detection (%)', x='Date') + scale_y_continuous(limits=c(0, 0.3), breaks=c(0.0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30'))
head(cor.prev)
max(cor.prev$Rate)
max(cor.prev$Rate)*6
p1 <- ggplot(cor.prev[cor.prev$Name %in% strsplit(as.character(multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), 'BestCorComboILI']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=createPaletteOfVariableLength(cor.prev, 'Name'), name='') + geom_line(aes(x=YearWeek, y=6*Rate, group='ILI', color='ILI'), data=cor.prev, size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='FilmArray Percent Detection (%)', x='Date') + scale_y_continuous(limits=c(0, 0.3), breaks=c(0.0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30'))
p2 <- ggplot(cor.prev) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='transparent', fill='transparent'), axis.ticks.x=element_blank()) + labs(title='', y='ILI (%)', x='Date') + scale_y_continuous(limits=c(0, 0.3), breaks=c(0.0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0.00','0.83','1.67','2.50','3.33','4.17','5.00'))
# Get the ggplot grobs
g1 <- ggplotGrob(p1)
g2 <- ggplotGrob(p2)
# Get the location of the plot panel in g1.
# These are used later when transformed elements of g2 are put back into g1
pp <- c(subset(g1$layout, name == "panel", se = t:r))
# Overlap panel for second plot on that of the first plot
g1 <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t, pp$l, pp$b, pp$l)
# Get the y axis title from g2
index <- which(g2$layout$name == "ylab-l") # Which grob contains the y axis title?
ylab <- g2$grobs[[index]]                # Extract that grob
ylab <- hinvert_title_grob(ylab)         # Swap margins and fix justifications
# Put the transformed label on the right side of g1
g1 <- gtable_add_cols(g1, g2$widths[g2$layout[index, ]$l], pp$r)
g1 <- gtable_add_grob(g1, ylab, pp$t, pp$r + 1, pp$b, pp$r + 1, clip = "off", name = "ylab-r")
# Get the y axis from g2 (axis line, tick marks, and tick mark labels)
index <- which(g2$layout$name == "axis-l")  # Which grob
yaxis <- g2$grobs[[index]]                  # Extract the grob
# First, move the axis line to the left
yaxis$children[[1]]$x <- unit.c(unit(0, "npc"), unit(0, "npc"))
# Second, swap tick marks and tick mark labels
ticks <- yaxis$children[[2]]
ticks$widths <- rev(ticks$widths)
ticks$grobs <- rev(ticks$grobs)
# Third, move the tick marks
ticks$grobs[[1]]$x <- ticks$grobs[[1]]$x - unit(1, "npc") + unit(3, "pt")
# Fourth, swap margins and fix justifications for the tick mark labels
ticks$grobs[[2]] <- hinvert_title_grob(ticks$grobs[[2]])
# Fifth, put ticks back into yaxis
yaxis$children[[2]] <- ticks
# Put the transformed yaxis on the right side of g1
g1 <- gtable_add_cols(g1, g2$widths[g2$layout[index, ]$l], pp$r)
iliBestCor <- gtable_add_grob(g1, yaxis, pp$t, pp$r + 1, pp$b, pp$r + 1, clip = "off", name = "axis-r")
grid.newpage()
grid.draw(iliBestCor)
p1 <- ggplot(cor.prev[cor.prev$Name %in% strsplit(as.character(multiple.var.cor[multiple.var.cor$BestCorILI==max(multiple.var.cor$BestCorILI), 'BestCorComboILI']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=Name, group=Name), stat='identity', position='stack') + scale_fill_manual(values=createPaletteOfVariableLength(cor.prev, 'Name'), name='') + geom_line(aes(x=YearWeek, y=6*Rate, group='ILI', color='ILI'), data=cor.prev, size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='FilmArray Percent Detection (%)', x='Date') + scale_y_continuous(limits=c(0, 0.3), breaks=c(0.0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0','5','10','15','20','25','30'))
p2 <- ggplot(cor.prev) + theme(panel.grid=element_blank(), plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='transparent', fill='transparent'), axis.ticks.x=element_blank()) + labs(title='', y='ILI (%)', x='Date') + scale_y_continuous(limits=c(0, 0.3), breaks=c(0.0,0.05,0.1,0.15,0.2,0.25,0.3), labels=c('0.00','0.83','1.67','2.50','3.33','4.17','5.00'))
# Get the ggplot grobs
g1 <- ggplotGrob(p1)
g2 <- ggplotGrob(p2)
# Get the location of the plot panel in g1.
# These are used later when transformed elements of g2 are put back into g1
pp <- c(subset(g1$layout, name == "panel", se = t:r))
# Overlap panel for second plot on that of the first plot
g1 <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t, pp$l, pp$b, pp$l)
# Get the y axis title from g2
index <- which(g2$layout$name == "ylab-l") # Which grob contains the y axis title?
ylab <- g2$grobs[[index]]                # Extract that grob
ylab <- hinvert_title_grob(ylab)         # Swap margins and fix justifications
# Put the transformed label on the right side of g1
g1 <- gtable_add_cols(g1, g2$widths[g2$layout[index, ]$l], pp$r)
g1 <- gtable_add_grob(g1, ylab, pp$t, pp$r + 1, pp$b, pp$r + 1, clip = "off", name = "ylab-r")
# Get the y axis from g2 (axis line, tick marks, and tick mark labels)
index <- which(g2$layout$name == "axis-l")  # Which grob
yaxis <- g2$grobs[[index]]                  # Extract the grob
# First, move the axis line to the left
yaxis$children[[1]]$x <- unit.c(unit(0, "npc"), unit(0, "npc"))
# Second, swap tick marks and tick mark labels
ticks <- yaxis$children[[2]]
ticks$widths <- rev(ticks$widths)
ticks$grobs <- rev(ticks$grobs)
# Third, move the tick marks
ticks$grobs[[1]]$x <- ticks$grobs[[1]]$x - unit(1, "npc") + unit(3, "pt")
# Fourth, swap margins and fix justifications for the tick mark labels
ticks$grobs[[2]] <- hinvert_title_grob(ticks$grobs[[2]])
# Fifth, put ticks back into yaxis
yaxis$children[[2]] <- ticks
# Put the transformed yaxis on the right side of g1
g1 <- gtable_add_cols(g1, g2$widths[g2$layout[index, ]$l], pp$r)
iliBestCor <- gtable_add_grob(g1, yaxis, pp$t, pp$r + 1, pp$b, pp$r + 1, clip = "off", name = "axis-r")
# Draw it
grid.newpage()
grid.draw(iliBestCor)
grid.newpage()
png('Figures/BestCorrelatedSummedPrevalenceWithILI.png', height=800, width=1400)
grid.draw(iliBestCor)
dev.off()
head(cor.prev)
head(cor.count)
ggplot(cor.count[cor.count$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCorCombo==max(multiple.var.cor.count$BestCorCombo), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Positives, fill=ShortName, group=ShortName), stat='identity', position='stack') + scale_fill_manual(values=createPaletteOfVariableLength(cor.count, 'ShortName'), name='') + geom_line(aes(x=YearWeek, y=Runs, group='TUR', color='TUR'), data=cor.count, size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='', x='Date')
ggplot(cor.count[cor.count$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCorCombo==max(multiple.var.cor.count$BestCorCombo), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Positives, fill=ShortName, group=ShortName), stat='identity', position='stack') + scale_fill_manual(values=createPaletteOfVariableLength(cor.count, 'ShortName'), name='') + geom_line(aes(x=YearWeek, y=Runs, group='TUR', color='TUR'), data=cor.count, size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='', x='Date')
multiple.var.cor.count[multiple.var.cor.count$BestCorCombo==max(multiple.var.cor.count$BestCorCombo), 'BestCorCombo']
multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']
ggplot(cor.count[cor.count$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Positives, fill=ShortName, group=ShortName), stat='identity', position='stack') + scale_fill_manual(values=createPaletteOfVariableLength(cor.count, 'ShortName'), name='') + geom_line(aes(x=YearWeek, y=Runs, group='TUR', color='TUR'), data=cor.count, size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='', x='Date')
ggplot(cor.count[cor.count$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Positives, fill=ShortName, group=ShortName), stat='identity', position='stack') + scale_fill_manual(values=createPaletteOfVariableLength(cor.count, 'ShortName'), name='') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='', x='Date')
ggplot(cor.count[cor.count$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Positives, fill=ShortName, group=ShortName), stat='identity', position='stack') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='', x='Date')
ggplot(cor.count[cor.count$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Positives, fill=ShortName, group=ShortName), stat='identity', position='stack') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels)
ggplot(cor.count[cor.count$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Positives, fill=ShortName, group=ShortName, order=ShortName), stat='identity', position='stack') + scale_fill_manual(values=createPaletteOfVariableLength(cor.count, 'ShortName'), name='') + geom_line(aes(x=YearWeek, y=Runs, group='TUR', color='TUR'), data=cor.count, size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='', x='Date')
ggplot(cor.count[cor.count$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Positives, fill=ShortName, group=ShortName, order=ShortName), stat='identity', position='stack') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', y='', x='Date')
ggplot(cor.count[cor.count$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Positives, fill=ShortName, group=ShortName, order=ShortName), stat='identity', position='stack')
head(cor.count)
cor.count[cor.count$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ]
head(cor.count[cor.count$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ])
ggplot(cor.count[cor.count$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek, y=Positives, fill=ShortName)) + geom_bar(stat='identity')
ggplot(cor.count[cor.count$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek, y=Positives, fill=ShortName)) + geom_area(stat='identity', position='stack')
ggplot(cor.count[cor.count$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek, y=Positives, fill=ShortName)) + geom_area(aes(x=YearWeek, y=Positives, fill=ShortName), stat='identity', position='stack')
ggplot(cor.count[cor.count$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(x=YearWeek, y=Positives, fill=ShortName), stat='identity', position='stack')
a <- cor.count[cor.count$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ]
head(a)
ggplot(a, aes(x=YearWeek)) + geom_area(aes(y=Positives, fill=ShortName, group=ShortName), data=a)
ggplot(a, aes(x=YearWeek)) + geom_area(aes(y=Positives, fill=ShortName, group=ShortName))
ggplot(cor.count[cor.count$Name %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=ShortName, group=ShortName), stat='identity', position='stack')
ggplot(cor.count[cor.count$Name %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Positives, fill=ShortName, group=ShortName), stat='identity', position='stack')
ggplot(cor.count[cor.count$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Positives, fill=ShortName, group=ShortName), stat='identity', position='stack')
ggplot(cor.count[cor.count$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_bar(aes(y=Positives, fill=ShortName, group=ShortName), stat='identity', position='stack')
ggplot(cor.count[cor.count$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Positives, fill=ShortName, group=ShortName), stat='identity')
ggplot(cor.count[cor.count$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_bar(aes(y=Positives, fill=ShortName, group=ShortName), stat='identity', position='stack')
ggplot(cor.count[cor.count$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_bar(aes(y=Positives, fill=ShortName, group=ShortName), stat='identity', position='stack') + scale_fill_manual(values=createPaletteOfVariableLength(cor.count, 'ShortName'), name='') + geom_line(aes(x=YearWeek, y=Runs, group='TUR', color='TUR'), data=aggregate(cor.count$Runs~cor.count$YearWeek, FUN=mean), size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE))
ggplot(cor.count[cor.count$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_bar(aes(y=Positives, fill=ShortName, group=ShortName), stat='identity', position='stack') + scale_fill_manual(values=createPaletteOfVariableLength(cor.count, 'ShortName'), name='') + geom_line(aes(x=YearWeek, y=Runs, group='TUR', color='TUR'), data=aggregate(cor.count$Runs~cor.count$YearWeek, FUN=mean), size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE))
ggplot(cor.count[cor.count$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_bar(aes(y=Positives, fill=ShortName, group=ShortName), stat='identity', position='stack') + scale_fill_manual(values=createPaletteOfVariableLength(cor.count, 'ShortName'), name='') + geom_line(aes(x=YearWeek, y=Runs, group='TUR', color='TUR'), data=cor.count, size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE))
ggplot(cor.count[cor.count$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_bar(aes(y=Positives, fill=ShortName, group=ShortName), stat='identity', position='stack') + scale_fill_manual(values=createPaletteOfVariableLength(cor.count, 'ShortName'), name='') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE))
head(cor.count)
head(cor.count.agg)
head(cor.count.agg)
ggplot(cor.count.agg[cor.count.agg$ShortName %in% strsplit(as.character(multiple.var.cor.count.agg[multiple.var.cor.count.agg$BestCor==max(multiple.var.cor.count.agg$BestCor), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_bar(aes(y=Positives, fill=ShortName, group=ShortName), stat='identity', position='stack')
ggplot(cor.count.agg[cor.count.agg$ShortName %in% strsplit(as.character(multiple.var.cor.count.agg[multiple.var.cor.count.agg$BestCor==max(multiple.var.cor.count.agg$BestCor), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_bar(aes(y=Positives, fill=ShortName, group=ShortName), stat='identity', position='stack') + scale_fill_manual(values=createPaletteOfVariableLength(cor.count.agg, 'ShortName'), name='') + geom_line(aes(x=YearWeek, y=Runs, group='TUR', color='TUR'), data=cor.count.agg, size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE))
ggplot(cor.count.agg[cor.count.agg$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_bar(aes(y=Positives, fill=ShortName, group=ShortName), stat='identity', position='stack') + scale_fill_manual(values=createPaletteOfVariableLength(cor.count.agg, 'ShortName'), name='') + geom_line(aes(x=YearWeek, y=Runs, group='TUR', color='TUR'), data=cor.count.agg, size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE))
ggplot(cor.count.agg[cor.count.agg$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Positives, fill=ShortName, group=ShortName), stat='identity', position='stack') + scale_fill_manual(values=createPaletteOfVariableLength(cor.count.agg, 'ShortName'), name='') + geom_line(aes(x=YearWeek, y=Runs, group='TUR', color='TUR'), data=cor.count.agg, size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE))
ggplot(cor.count.agg[cor.count.agg$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Positives, fill=ShortName, group=ShortName), stat='identity', position='stack') + scale_fill_manual(values=createPaletteOfVariableLength(cor.count.agg, 'ShortName'), name='') + geom_line(aes(x=YearWeek, y=Runs, group='TUR', color='TUR'), data=cor.count.agg, size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.tick.y=element_blank(), axis.text.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', x='Date', y='')
ggplot(cor.count.agg[cor.count.agg$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Positives, fill=ShortName, group=ShortName), stat='identity', position='stack') + scale_fill_manual(values=createPaletteOfVariableLength(cor.count.agg, 'ShortName'), name='') + geom_line(aes(x=YearWeek, y=Runs, group='TUR', color='TUR'), data=cor.count.agg, size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), axis.text.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', x='Date', y='')
p.BestCorrelatedSummedPrevalenceWithTUR <- ggplot(cor.count.agg[cor.count.agg$ShortName %in% strsplit(as.character(multiple.var.cor.count[multiple.var.cor.count$BestCor==max(multiple.var.cor.count$BestCor), 'BestCorCombo']), split = ', ')[[1]], ], aes(x=YearWeek)) + geom_area(aes(y=Positives, fill=ShortName, group=ShortName), stat='identity', position='stack') + scale_fill_manual(values=createPaletteOfVariableLength(cor.count.agg, 'ShortName'), name='') + geom_line(aes(x=YearWeek, y=Runs, group='TUR', color='TUR'), data=cor.count.agg, size=1.5, color='black') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), legend.position='bottom', panel.background=element_rect(color='white', fill='white'), axis.ticks.x=element_blank(), axis.ticks.y=element_blank(), axis.text.y=element_blank()) + guides(fill=guide_legend(ncol=7, bycol=TRUE)) + labs(title='', x='Date', y='')
p.TUR_NoYAxis
grid.newpage()
png('Figures/BestCorrelatedSummedPrevalenceWithILI.png', height=800, width=1400)
grid.draw(iliBestCor)
dev.off()
plots <- ls()[grep('^p\\.',ls())]
for(i in 1:length(plots)) {
imgName <- paste(substring(plots[i],3),'.png',sep='')
png(file=paste('Figures', imgName, sep='/'), width=1200, height=800, units='px')
print(eval(parse(text = plots[i])))
dev.off()
}
library(RODBC)
library(lubridate)
library(EpiWeek)
library(ggplot2)
library(grid)
library(gridExtra)
library(scales)
library(gtable)
library(RColorBrewer)
library(devtools)
library(RCurl)
library(binom)
library(caret)
library(rpart)
library(party)
library(partykit)
library(randomForest)
library(dplyr)
library(tidyr)
require(dateManip)
p.InfluezaPrevalencePercentDetectionNoILI
plots
head(public.health.flu)
head(prev.reg.ph.flu)
head(prev.nat.ph.flu)
max(prev.nat.ph.flu$FlAH3)
max(prev.nat.ph.flu$FluAH109)
max(prev.nat.ph.flu$FluB)
head(public.health.flu)
public.health.flu <- read.csv('../DataSources/RegionalInfluenzaBySubType_PublicHealthLabs.csv', header=TRUE, sep=',')
public.health.flu <- data.frame(Region = public.health.flu$REGION, YearWeek = ifelse(public.health.flu$WEEK < 10, paste(public.health.flu$YEAR, public.health.flu$WEEK, sep='-0'), paste(public.health.flu$YEAR, public.health.flu$WEEK, sep='-')), TotalPatients = public.health.flu$TOTAL.SPECIMENS, FluAH109 = public.health.flu$A..2009.H1N1., FlAH3 = public.health.flu$A..H3., FluANoSubtype = public.health.flu$A..Subtyping.not.Performed., FluB = public.health.flu$B)
prev.reg.wrap <- merge(prevalence.reg.wrap, unique(runs.reg[,c('CustomerSiteId','Region')]), by='CustomerSiteId')
public.health.flu <- public.health.flu[public.health.flu$Region %in% unique(prev.reg.wrap$Region), ]
regions <- as.character(unique(public.health.flu$Region))
yearweeks <- as.character(unique(public.health.flu$YearWeek))
public.health.flu <- do.call(rbind, lapply(1:length(regions), function(x) do.call(rbind, lapply(2:(length(yearweeks)-1), function(y) data.frame(YearWeek = yearweeks[y], Region = regions[x], TotalPatients = sum(filter(public.health.flu, Region==regions[x])[, 'TotalPatients'][(y-1):(y+1)]), FluAH109 = sum(filter(public.health.flu, Region==regions[x])[, 'FluAH109'][(y-1):(y+1)]), FlAH3 = sum(filter(public.health.flu, Region==regions[x])[, 'FlAH3'][(y-1):(y+1)]), FluANoSubtype = sum(filter(public.health.flu, Region==regions[x])[, 'FluANoSubtype'][(y-1):(y+1)]), FluB = sum(filter(public.health.flu, Region==regions[x])[, 'FluB'][(y-1):(y+1)]))))))
head(public.health.flu)
head(prev.reg.wrap)
prev.reg.ph.flu <- merge(prev.reg.wrap, public.health.flu, by=c('YearWeek','Region'))
prev.reg.ph.flu$FluAH109 <- with(prev.reg.ph.flu, FluAH109/TotalPatients)
prev.reg.ph.flu$FlAH3 <- with(prev.reg.ph.flu, FlAH3/TotalPatients)
prev.reg.ph.flu$FluANoSubtype <- with(prev.reg.ph.flu, FluANoSubtype/TotalPatients)
prev.reg.ph.flu$FluB <- with(prev.reg.ph.flu, FluB/TotalPatients)
head(prev.reg.ph.flu)
max(prev.reg.ph.flu$FluAH109)
max(prev.reg.ph.flu$FluB)
max(prev.reg.ph.flu$FlAH3)
hist(prev.reg.ph.flu$FlAH3)
hist(prev.reg.ph.flu$FluAH109)
prev.reg.ph.flu <- merge(prev.reg.wrap, public.health.flu, by=c('YearWeek','Region'))
prev.reg.ph.flu$FluAH109 <- with(prev.reg.ph.flu, FluAH109/TotalPatients)
prev.reg.ph.flu$FlAH3 <- with(prev.reg.ph.flu, FlAH3/TotalPatients)
prev.reg.ph.flu$FluANoSubtype <- with(prev.reg.ph.flu, FluANoSubtype/TotalPatients)
prev.reg.ph.flu$FluB <- with(prev.reg.ph.flu, FluB/TotalPatients)
prev.nat.ph.flu <- with(prev.reg.ph.flu, aggregate(cbind(Prevalence, Rate, FluAH109, FlAH3, FluANoSubtype, FluB)~YearWeek+ShortName, FUN=mean))
ggplot(subset(prev.nat.ph.flu, ShortName=='FluA H1-09'), aes(x=YearWeek, y=4*Prevalence, group='FilmArray Percent Detection of FluA H1-09', color='FilmArray Percent Detection of FluA H1-09')) + geom_line(lwd=2) + geom_line(aes(x=YearWeek, y=FluAH109, group='CDC Reported Rate of FluA H1-09', color='CDC Reported Rate of FluA H1-09'), data=prev.nat.ph.flu, lwd=2) + scale_color_manual(values=c('black','blue','red','darkgreen'), name='') + scale_y_continuous(limits=c(0,0.6), breaks=c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6), labels=c('10','20','30','40','50','60')) + scale_x_discrete(breaks = dateBreaksAlt2, labels = dateLabelsAlt2) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank(), axis.ticks.x=element_blank()) + labs(y='CDC Reported Detection (%)', x='Date')
head(public.health.flu)
ggplot(public.health.flu, aes(x=YearWeek, y=TotalPatients, fill=Region)) + geom_bar(stat='identity')
head(prev.reg.ph.flu)
head(public.health.flu)
public.health.flu[public.health.flu$TotalPatients < 10, ]
public.health.flu[public.health.flu$TotalPatients < 30, ]
unique(public.health.flu$Region)
as.character(unique(public.health.flu$Region))
hist(public.health.flu$TotalPatients)
hist(public.health.flu$TotalPatients, breaks = seq(1, 4000, 10))
hist(public.health.flu$TotalPatients, breaks = seq(1, 4000, 30))
overlay.fluAH109
grid.newpage()
grid.draw(overlay.fluAH109)
ggplot(subset(prev.nat.ph.flu, ShortName=='FluA H3'), aes(x=YearWeek, y=Prevalence, group='FilmArray Percent Detection of FluA H3', color='FilmArray Percent Detection of FluA H3')) + geom_line(lwd=2) + geom_line(aes(x=YearWeek, y=FlAH3, group='CDC Reported Rate of FluA H3', color='CDC Reported Rate of FluA H3'), data=prev.nat.ph.flu, lwd=2) + scale_color_manual(values=c('black','blue','red','darkgreen'), name='') + scale_y_continuous(limits=c(0,0.6), breaks=c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6), labels=c('10','20','30','40','50','60')) + scale_x_discrete(breaks = dateBreaksAlt2, labels = dateLabelsAlt2) + theme(plot.title=element_text(hjust=0.5),text=element_text(size=22, face='bold'), axis.text=element_text(size=22, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='transparent', fill='white'), panel.grid=element_blank(), axis.ticks.x=element_blank()) + labs(y='CDC Reported Detection (%)', x='Date')
head(cdc.bfdx.flu.nat)
grid.newpage()
png('Figures/FluAH109PercentDetectionWithOverlay.png', height=800, width=1400)
grid.draw(overlay.fluAH109)
dev.off()
grid.newpage()
png('Figures/FluAH3PercentDetectionWithOverlay.png', height=800, width=1400)
grid.draw(overlay.fluAH3)
dev.off()
grid.newpage()
png('Figures/FluBPercentDetectionWithOverlay.png', height=800, width=1400)
grid.draw(overlay.fluB)
dev.off()
head(cdc.bfdx.flu.nat)
ccf(cdc.bfdx.flu.nat$FluPrevalence, cdc.bfdx.flu.nat$FluPercentDetection)
attributes(ccf(cdc.bfdx.flu.nat$FluPrevalence, cdc.bfdx.flu.nat$FluPercentDetection))
ccf(cdc.bfdx.flu.nat$FluPrevalence, cdc.bfdx.flu.nat$FluPercentDetection)$lag
ccf(cdc.bfdx.flu.nat$FluPrevalence, cdc.bfdx.flu.nat$FluPercentDetection)$acf
decoder
ccf(cdc.bfdx.flu.nat$FluPrevalence, cdc.bfdx.flu.nat$FluPercentDetection)
acf(cdc.bfdx.flu.nat$FluPrevalence, cdc.bfdx.flu.nat$FluPercentDetection)
ccf(cdc.bfdx.flu.nat$FluPrevalence, cdc.bfdx.flu.nat$FluPercentDetection)$acf
attributes(ccf(cdc.bfdx.flu.nat$FluPrevalence, cdc.bfdx.flu.nat$FluPercentDetection))
ccf(cdc.bfdx.flu.nat$FluPrevalence, cdc.bfdx.flu.nat$FluPercentDetection)$n.used
ccf(cdc.bfdx.flu.nat$FluPrevalence, cdc.bfdx.flu.nat$FluPercentDetection)$n.lag
ccf(cdc.bfdx.flu.nat$FluPrevalence, cdc.bfdx.flu.nat$FluPercentDetection)$lag
data.frame(Lag = ccf(cdc.bfdx.flu.nat$FluPrevalence, cdc.bfdx.flu.nat$FluPercentDetection)$lag, CCF = ccf(cdc.bfdx.flu.nat$FluPrevalence, cdc.bfdx.flu.nat$FluPercentDetection)$acf)
ccf.frame <- data.frame(Lag = ccf(cdc.bfdx.flu.nat$FluPrevalence, cdc.bfdx.flu.nat$FluPercentDetection)$lag, CCF = ccf(cdc.bfdx.flu.nat$FluPrevalence, cdc.bfdx.flu.nat$FluPercentDetection)$acf)
ccf.chart <- ccf(cdc.bfdx.flu.nat$FluPrevalence, cdc.bfdx.flu.nat$FluPercentDetection)
ccf.frame <- data.frame(Lag = ccf(cdc.bfdx.flu.nat$FluPrevalence, cdc.bfdx.flu.nat$FluPercentDetection)$lag, CCF = ccf(cdc.bfdx.flu.nat$FluPrevalence, cdc.bfdx.flu.nat$FluPercentDetection)$acf)
ccf.frame
