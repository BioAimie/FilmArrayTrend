}
site.bug.count
head(site.bug.count)
site.bug.count[with(site.bug.count, order(YearWeek)), ]
head(site.bug.count)
lapply(1:21, function(x) site.bug.count[,letters[x]]/site.bug.count$Runs)
do.call(cbind, lapply(1:21, function(x) site.bug.count[,letters[x]]/site.bug.count$Runs))
cbind(YearWeek = site.bug.count$YearWeek, data.frame(do.call(cbind, lapply(1:21, function(x) site.bug.count[,letters[x]]/site.bug.count$Runs))))
site.bug.rate <- cbind(YearWeek = site.bug.count$YearWeek, data.frame(do.call(cbind, lapply(1:21, function(x) site.bug.count[,letters[x]]/site.bug.count$Runs))))
colnames(site.bug.rate)[2:22]
colnames(site.bug.rate)[2:22] <- letters[1:21]
head(site.bug.rate)
head(site.but.count)
head(site.bug.count)
head(site.bug.rate)
head(site.bug.count)
site.bug.rate <- cbind(YearWeek = site.bug.count$YearWeek, CustomerSiteId = sites.good[i], data.frame(do.call(cbind, lapply(1:21, function(x) site.bug.count[,letters[x]]/site.bug.count$Runs))))
colnames(site.bug.rate)[3:23] <- letters[1:21]
head(site.bug.rate)
head(site.bug.count)
site.bug.rate <- cbind(YearWeek = site.bug.count$YearWeek, Region = unique(site.bug.count$Region), CustomerSiteId = sites.good[i], data.frame(do.call(cbind, lapply(1:21, function(x) site.bug.count[,letters[x]]/site.bug.count$Runs))))
colnames(site.bug.rate)[4:24] <- letters[1:21]
head(site.bug.rate)
head(cdc.reg.df)
prev.ili.site <- merge(site.bug.rate, cdc.reg.df, by=c('YearWeek','Region'))
head(prev.ili.site)
lm(Rate~., prev.ili.site[4:25])
summary(lm(Rate~., prev.ili.site[4:25]))
all.site.models <- c()
for(i in 1:length(sites.good)) {
site.bug.count <- prevalence.good.reg.count[prevalence.good.reg.count$CustomerSiteId == sites.good[i], ]
site.bug.rate <- cbind(YearWeek = site.bug.count$YearWeek, Region = unique(site.bug.count$Region), CustomerSiteId = sites.good[i], data.frame(do.call(cbind, lapply(1:21, function(x) site.bug.count[,letters[x]]/site.bug.count$Runs))))
colnames(site.bug.rate)[4:24] <- letters[1:21]
prev.ili.site <- merge(site.bug.rate, cdc.reg.df, by=c('YearWeek','Region'))
fit.site.all <- lm(Rate~., prev.ili.site[4:25])
site.models <- do.call(rbind, lapply(1:length(combos.six[,'Combo']), function(x) data.frame(CustomerSiteId = sites.good[i], Model = combos.six[x,'Combo'], adjR2 = summary(lm(as.formula(paste('Rate', as.character(combos.six[x,]), sep='~')), prev.ili.site))$adj.r.squared, corr = cor(fitted(lm(as.formula(paste('Rate', as.character(combos.six[x,]), sep='~')), prev.ili.site)), prev.ili.site$Rate), alpha.0 = sum(summary(lm(as.formula(paste('Rate', as.character(combos.six[x,]), sep='~')), prev.ili.site))$coeff[2:7,4] < 0.0001), alpha.001 = sum(summary(lm(as.formula(paste('Rate', as.character(combos.six[x,]), sep='~')), prev.ili.site))$coeff[2:7,4] <= 0.001), alpha.01 = sum(summary(lm(as.formula(paste('Rate', as.character(combos.six[x,]), sep='~')), prev.ili.site))$coeff[2:7,4] <= 0.01), alpha.05 = sum(summary(lm(as.formula(paste('Rate', as.character(combos.six[x,]), sep='~')), prev.ili.site))$coeff[2:7,4] <= 0.05), alpha1 = 6, anova.all = anova(lm(as.formula(paste('Rate', as.character(combos.six[x,]), sep='~')), prev.ili.site), fit.site.all)[,'Pr(>F)'][2])))
all.site.models <- rbind(all.site.models, site.models)
}
head(all.site.models)
all.site.models[all.site.models$CustomerSiteId==2 & all.site.models$anova.all==max(all.site.models$anova.all), ]
all.site.models[all.site.models$CustomerSiteId==2 & all.site.models$anova.all==max(all.site.models[all.site.models$CustomerSiteId==2,'anova.all']), ]
all.site.models[all.site.models$CustomerSiteId==2 & all.site.models$anova.all==max(all.site.models[all.site.models$CustomerSiteId==2,'anova.all']), ]
all.site.models[all.site.models$CustomerSiteId==5 & all.site.models$anova.all==max(all.site.models[all.site.models$CustomerSiteId==5,'anova.all']), ]
all.site.models[all.site.models$CustomerSiteId==7 & all.site.models$anova.all==max(all.site.models[all.site.models$CustomerSiteId==7,'anova.all']), ]
all.site.models[all.site.models$CustomerSiteId==2 & all.site.models$anova.all==max(all.site.models[all.site.models$CustomerSiteId==2,'anova.all']), ]
all.site.models[all.site.models$CustomerSiteId==5 & all.site.models$anova.all==max(all.site.models[all.site.models$CustomerSiteId==5,'anova.all']), ]
all.site.models[all.site.models$CustomerSiteId==7 & all.site.models$anova.all==max(all.site.models[all.site.models$CustomerSiteId==7,'anova.all']), ]
all.site.models[all.site.models$CustomerSiteId==10 & all.site.models$anova.all==max(all.site.models[all.site.models$CustomerSiteId==10,'anova.all']), ]
all.site.models[all.site.models$CustomerSiteId==13 & all.site.models$anova.all==max(all.site.models[all.site.models$CustomerSiteId==13,'anova.all']), ]
all.site.models[all.site.models$CustomerSiteId==26 & all.site.models$anova.all==max(all.site.models[all.site.models$CustomerSiteId==26,'anova.all']), ]
all.site.models[all.site.models$CustomerSiteId==29 & all.site.models$anova.all==max(all.site.models[all.site.models$CustomerSiteId==29,'anova.all']), ]
all.site.models[all.site.models$CustomerSiteId==36 & all.site.models$anova.all==max(all.site.models[all.site.models$CustomerSiteId==36,'anova.all']), ]
decoder
head(prevalence.goo.dreg.count)
head(prevalence.good.reg.count)
min(prevalence.good.reg.count[prevalence.good.reg.count$CustomerSiteId==10, 'YearWeek'])
min(prevalence.good.reg.count[prevalence.good.reg.count$CustomerSiteId==13, 'YearWeek'])
min(prevalence.good.reg.count[prevalence.good.reg.count$CustomerSiteId==26, 'YearWeek'])
min(prevalence.good.reg.count[prevalence.good.reg.count$CustomerSiteId==29, 'YearWeek'])
min(prevalence.good.reg.count[prevalence.good.reg.count$CustomerSiteId==36, 'YearWeek'])
min(prevalence.good.reg.count[prevalence.good.reg.count$CustomerSiteId==2, 'YearWeek'])
min(prevalence.good.reg.count[prevalence.good.reg.count$CustomerSiteId==5, 'YearWeek'])
min(prevalence.good.reg.count[prevalence.good.reg.count$CustomerSiteId==7, 'YearWeek'])
head(prevalence.reg.count)
decoder
summary(lm(Rate~j+k+l+m+n+o, prevalence.cdc.nat))
summary(lm(Rate~j+l+m+n+o, prevalence.cdc.nat)) # remove FluA no subtype detected
summary(fit.all)
anova(lm(Rate~j+l+m+n+o, prevalence.cdc.nat), lm(Rate~j+k+l+m+n+o, prevalence.cdc.nat), fit.all)
decoder
anova(lm(Rate~j+l+m+n, prevalence.cdc.nat), lm(Rate~j+k+l+m+n, prevalence.cdc.nat), lm(Rate~j+k+l+m+n+o, prevalence.cdc.nat), lm(Rate~j+k+l+m+n+o+u, prevalence.cdc.nat), fit.all)
cor(prevalence.cdc.nat$Rate, fitted(lm(Rate~j+l+m+n, prevalence.cdc.nat)))
cor(prevalence.cdc.nat$Rate, fitted(lm(Rate~j+l+m+n+k, prevalence.cdc.nat)))
cor(prevalence.cdc.nat$Rate, fitted(lm(Rate~j+l+m+n+k+o, prevalence.cdc.nat)))
cor(prevalence.cdc.nat$Rate, fitted(lm(Rate~j+l+m+n+k+o+u, prevalence.cdc.nat)))
if(TRUE) {
workDir <-'G:/Departments/PostMarket/DataScienceGroup/Data Science Products/InProcess/Aimie/20160721_TrendExternal2016/IDWeek/'
setwd(workDir)
# load libraries
library(RODBC)
library(lubridate)
library(ggplot2)
library(grid)
library(scales)
library(GGally)
library(RColorBrewer)
library(car)
library(caret)
library(rpart)
library(party)
library(randomForest)
library(nnet)
library(devtools)
library(RCurl)
# load user-defined functions
source('../ArchivedFunctions/makeEvenWeeks.R')
source('../NewFunctions/normalizeBurnRate.R')
source('../NewFunctions/rollPositivesBySite.R')
source('../NewFunctions/generateCombos.R')
source('../NewFunctions/createPaletteOfVariableLength.R')
# source_url('https://gist.githubusercontent.com/fawda123/7471137/raw/466c1474d0a505ff044412703516c34f1a4684a5/nnet_plot_update.r')
# source_url('https://gist.githubusercontent.com/fawda123/6206737/raw/d6f365c283a8cae23fb20892dc223bc5764d50c7/gar_fun.r')
# root.url<-'https://gist.githubusercontent.com/fawda123'
# raw.fun<-paste(
#   root.url,
#   '5086859/raw/cc1544804d5027d82b70e74b83b3941cd2184354/nnet_plot_fun.r',
#   sep='/'
# )
# script<-getURL(raw.fun, ssl.verifypeer = FALSE)
# eval(parse(text = script))
# rm('script','raw.fun')
}
# GET DATA ---------------------------------------------------------------------------------------------------------------
if(TRUE) {
# read in the data from FilmArray Data Warehouse DB (ODBC object in Windows "FA_DW" with Lindsay's credentials)
FADWcxn <- odbcConnect(dsn = 'FA_DW', uid = 'lmeyers', pwd = 'Idaho1Tech')
queryVector <- scan('../DataSources/AllSitesRespiratoryTrendableRuns.txt',what=character(),quote="")
query <- paste(queryVector,collapse=" ")
runs.df <- sqlQuery(FADWcxn,query)
queryVector <- scan('../DataSources/PositiveBugsRP.txt',what=character(),quote="")
query <- paste(queryVector,collapse=" ")
bugs.df <- sqlQuery(FADWcxn,query)
bugs.df <- bugs.df[bugs.df$BugPositive != 'Bocavirus',]
queryVector <- scan('../DataSources/ShortNames.txt',what=character(),quote="")
query <- paste(queryVector,collapse=" ")
shortnames.df <- sqlQuery(FADWcxn,query)
queryVector <- scan('../DataSources/NationalDataILI.txt',what=character(),quote="")
query <- paste(queryVector,collapse=" ")
cdc.nat.df <- sqlQuery(FADWcxn,query)
odbcClose(FADWcxn)
# read in data from PMS PROD server
PMScxn <- odbcConnect('PMS_PROD')
queryVector <- scan('../DataSources/AllSitesRegionKey.txt',what=character(),quote="")
query <- paste(queryVector,collapse=" ")
regions.df <- sqlQuery(PMScxn,query)
queryVector <- scan('../DataSources/calendarDates.txt',what=character(),quote="")
query <- paste(queryVector,collapse=" ")
calendar.df <- sqlQuery(PMScxn,query)
odbcClose(PMScxn)
# read in data from Excel files
cdc.reg.df <- read.csv('../DataSources/RegionalILI.csv', header=TRUE, sep=',')
# ------------------------------------------------------------------------------------------------------------------------
}
# add regions to the runs.df data frame as well as "even" weeks and years
calendar.df <- makeEvenWeeks(calendar.df)
runs.reg <- merge(runs.df, data.frame(Province = regions.df$StateAbv, Region = regions.df$CensusRegionLocal), by='Province')
runs.reg$Record <- 1
runs.reg.date <- merge(runs.reg[,c('RunDataId','Instrument','Date','Name','CustomerSiteId','Region','Record')], calendar.df[,c('Date','Year','Week','YearWeek')], by='Date')
# create a data frame that will show site name and id with its region and census region
sitesByCensusRegions.etc <- unique(merge(unique(runs.reg.date[,c('CustomerSiteId','Name','Region')]), regions.df, by.x='Region', by.y='CensusRegionLocal')[,c('CustomerSiteId','Name','Region','CensusRegionNational')])
# midwest: southbend (2), detroit (29), nationwide (13), children's mercy (26)
# northeast: albany (10), winthrop (5), northshore (36, 39), stony brook (9)
# issues with data: Stony Brook (9) only has data starting in April of 2016... so this is potentially problematic...
# clean up the data frame that holds the cdc regional data
cdc.reg.df <- data.frame(Year = cdc.reg.df$YEAR, Week = cdc.reg.df$WEEK, Region = cdc.reg.df$REGION, ILITotal = cdc.reg.df$ILITOTAL, TotalPatients = cdc.reg.df$TOTAL.PATIENTS)
cdc.reg.df$YearWeek <- with(cdc.reg.df, ifelse(Week < 10, paste(Year, Week, sep='-0'), paste(Year, Week, sep='-')))
cdc.reg.count.df <- cdc.reg.count.df <- do.call(rbind, lapply(1:length(unique(cdc.reg.df$Region)), function(x)  data.frame(YearWeek =  cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x], 'YearWeek'][2:(length(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x], 'YearWeek'])-1)], Region = unique(cdc.reg.df$Region)[x], TotalPatients = sapply(2:(length(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],'YearWeek'])-1), function(y) sum(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],][(y-1):(y+1), 'TotalPatients'])), ILITotal = sapply(2:(length(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],'YearWeek'])-1), function(y) sum(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],][(y-1):(y+1), 'ILITotal'])))))
sites
sites <- unique(runs.reg.date$CustomerSiteId)
sites
head(runs.reg.date)
ggplot(runs.reg.date, aes(x=YearWeek, y=Record)) + geom_bar(stat='identity') + facet_wrap(~CustomerSiteId, scales='free_y')
ggplot(runs.reg.date, aes(x=YearWeek, y=Record)) + geom_bar(stat='identity') + facet_wrap(~CustomerSiteId, scales='free_y')
ggplot(runs.reg.date, aes(x=YearWeek, y=Record)) + geom_bar(stat='identity') + facet_wrap(~CustomerSiteId, scales='free_y')
var <- 'CustomerSiteId'
runs.reg.norm <- c()
for(i in 1:length(sites)) {
site.norm <- normalizeBurnRate(runs.reg.date, var, sites[i])
runs.reg.norm <- rbind(runs.reg.norm, site.norm)
}
head(runs.reg.norm)
unique(runs.reg.norm$CustomerSiteId)
min(runs.reg.norm[runs.reg.norm$CustomerSiteId==2, 'YearWeek'])
min(runs.reg.norm[runs.reg.norm$CustomerSiteId==25, 'YearWeek'])
site.starts <- c()
for(i in 1:length(sites)) {
site <- sites[i]
first.date <- min(runs.reg.norm[runs.reg.norm$CustomerSiteId == site,'YearWeek'])
temp <- data.frame(SiteId = site, StartDate = first.date)
site.starts <- rbind(site.starts, temp)
}
site.starts
site.starts[!(is.na(site.starts$StartDate))]
site.starts[!(is.na(site.starts$StartDate)), ]
site.starts[!(is.na(site.starts$StartDate))  & substring(site.starts$StartDate, 1, 4) < 2016, ]
site.starts[!(is.na(site.starts$StartDate))  & substring(site.starts$StartDate, 1, 4) < 2016, 'SiteID']
site.starts[!(is.na(site.starts$StartDate))  & substring(site.starts$StartDate, 1, 4) < 2016, 'SiteId']
sites <- site.starts[!(is.na(site.starts$StartDate))  & substring(site.starts$StartDate, 1, 4) < 2016, 'SiteId']
site.starts[!(is.na(site.starts$StartDate))  & substring(site.starts$StartDate, 1, 4) < 2016, 'SiteId']sites
sites
sites
sites <- site.starts[!(is.na(site.starts$StartDate))  & substring(site.starts$StartDate, 1, 4) < 2016, 'SiteId']
bugs.reg <- c()
for(i in 1:length(sites)) {
site <- sites[i]
temp <- runs.reg.date[runs.reg.date$CustomerSiteId == site, ]
bugs.site <- merge(temp, bugs.df, by='RunDataId')
bugs.reg <- rbind(bugs.reg, bugs.site)
}
bugs.reg[bugs.reg$BugPositive == 'Bocavirus',]
colsToCat <- c('Region','Name','CustomerSiteId','BugPositive')
bugs.reg.trim <- bugs.reg[,c('YearWeek',colsToCat)]
bugs.reg.trim$combocat <- do.call(paste, c(bugs.reg.trim[,colsToCat], sep=','))
bugs.reg.trim$Record <- 1
bugs.reg.combo <- do.call(rbind, lapply(1:length(unique(bugs.reg.trim$combocat)), function(x) cbind(merge(unique(calendar.df[,c('YearWeek','Year')]), bugs.reg.trim[bugs.reg.trim$combocat == unique(bugs.reg.trim$combocat)[x], c('YearWeek','Record')], by='YearWeek', all.x=TRUE), ComboCat = unique(bugs.reg.trim$combocat)[x])))
head(bugs.reg.combo)
deCombo <- as.data.frame(sapply(1:length(colsToCat), function(x) do.call(rbind, strsplit(as.character(bugs.reg.combo$ComboCat), split=','))[,x]))
colnames(deCombo) <- colsToCat
bugs.reg.fill <- cbind(bugs.reg.combo[,c('YearWeek','Record')], deCombo)
bugs.reg.fill[is.na(bugs.reg.fill$Record),'Record'] <- 0
head(bugs.reg.fill)
bugs.reg.agg <- with(bugs.reg.fill, aggregate(Record~YearWeek+Region+Name+CustomerSiteId+BugPositive, FUN=sum))
runs.reg.agg <- with(subset(runs.reg.date, CustomerSiteId %in% sites), aggregate(Record~YearWeek+Region+Name+CustomerSiteId, FUN=sum))
colnames(runs.reg.agg)[grep('Record', colnames(runs.reg.agg))] <- 'Runs'
bugs <- as.character(unique(bugs.reg.agg$BugPositive))[order(as.character(unique(bugs.reg.agg$BugPositive)))]
prevalence.reg.count <- c()
for(i in 1:length(sites)) {
site <- sites[i]
temp <- rollPositivesBySite(bugs.reg.agg, runs.reg.agg, 'BugPositive', 'Record', site, bugs)
prevalence.reg.count <- rbind(prevalence.reg.count, temp)
}
decoder <- data.frame(Bug = bugs, Code = letters[1:length(bugs)])
head(prevalence.reg.count)
bacterias <- as.character(decoder[decoder$Code %in% c('b','c','p'), 'Bug'])
viruses <- as.character(decoder[!(as.character(decoder$Bug) %in% c('Human Rhinovirus/Enterovirus', bacterias)), 'Bug'])
rhino <- 'Human Rhinovirus/Enterovirus'
fluAs <- as.character(decoder[grep('Influenza A', decoder$Bug),'Bug'])
fluBs <- as.character(decoder[grep('Influenza B', decoder$Bug),'Bug'])
rsv <- 'Respiratory Syncytial Virus'
flus <- as.character(decoder[grep('Influenza', decoder$Bug),'Bug'])
flusRSV <- c(flus, 'Respiratory Syncytial Virus')
pivs <- as.character(decoder[grep('Parainfluenza', decoder$Bug),'Bug'])
corona <- as.character(decoder[grep('Corona', decoder$Bug),'Bug'])
adeno <- 'Adenovirus'
hmp <- 'Human Metapneumovirus'
head(prevalence.reg.count)
prevalence.nat.individual.count <- with(prevalence.reg.count, aggregate(cbind(Runs, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u)~YearWeek, FUN=sum))
prevalence.nat.individual.bugs <- do.call(rbind, lapply(1:length(grep(paste('^', paste(letters, collapse='|^'), sep=''), colnames(prevalence.nat.individual.count))), function(x) data.frame(YearWeek = prevalence.nat.individual.count$YearWeek, Code = letters[x], Prevalence = prevalence.nat.individual.count[,letters[x]]/prevalence.nat.individual.count$Runs)))
prevalence.nat.individual.wrap <- merge(prevalence.nat.individual.bugs, decoder, by='Code', all.x=TRUE)
head(cdc.reg.count.df)
head(cdc.reg.count.df)
cdc.reg.count.df[cdc.reg.count.df$Region %in% prevalence.reg.count$Region, ]
sitesByCensusRegions.etc
cdc.reg.count.df[cdc.reg.count.df$Region %in% prevalence.reg.count$Region, ]
heaD(prevalence.nat.individual.count)
head(prevalence.nat.individual.count)
unique(prevalence.reg.count$Region)
sitesByCensusRegions.etc
head(cdc.reg.count.df[cdc.reg.count.df$Region %in% prevalence.reg.count$Region, ])
with(cdc.reg.count.df[cdc.reg.count.df$Region %in% prevalence.reg.count$Region, ], aggregate(cbind(TotalPatients, ILITotal)~YearWeek, FUN=sum))
with(cdc.reg.count.df[cdc.reg.count.df$Region %in% prevalence.reg.count$Region, ], aggregate(cbind(TotalPatients, ILITotal)~YearWeek, FUN=sum))
cdc.reg.count.agg <- with(cdc.reg.count.df[cdc.reg.count.df$Region %in% prevalence.reg.count$Region, ], aggregate(cbind(TotalPatients, ILITotal)~YearWeek, FUN=sum))
cdc.reg.count.agg$Rate <- with(cdc.reg.count.agg, ILITotal/TotalPatients)
prevalence.nat.individual.wrap <- merge(prevalence.nat.individual.wrap, cdc.reg.count.agg[,c('YearWeek','Rate')], by='YearWeek')
prevalence.nat.individual.wrap$Bug <- as.character(prevalence.nat.individual.wrap$Bug)
prevalence.nat.individual.wrap <- merge(prevalence.nat.individual.wrap, shortnames.df, by.x='Bug', by.y='Organism')
prevalence.nat.individual.wrap <- prevalence.nat.individual.wrap[as.character(prevalence.nat.individual.wrap$YearWeek) >= '2014-01', ]
bug.individual.Pal <- createPaletteOfVariableLength(prevalence.nat.individual.wrap, 'ShortName')
p.bugs.individual.area <- ggplot(prevalence.nat.individual.wrap[with(prevalence.nat.individual.wrap, order(ShortName, decreasing=TRUE)),], aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=ShortName, group=ShortName, order=ShortName), stat='identity', position='stack') + scale_fill_manual(values=bug.individual.Pal, name='') + scale_x_discrete(breaks = as.character(unique(prevalence.nat.individual.wrap$YearWeek))[order(as.character(unique(prevalence.nat.individual.wrap$YearWeek)))][seq(1, length(as.character(unique(prevalence.nat.individual.wrap$YearWeek))), 8)]) + scale_y_continuous(label=percent) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=14, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='white', fill='white')) + labs(title='Prevalence of Organisms in Trend Population', y='Prevalence of Organism', x='Year-Week') # + geom_line(aes(x=YearWeek, y=Rate*10, group=1), color='black', lwd=2)
p.bacteria.area <- ggplot(subset(prevalence.nat.individual.wrap[with(prevalence.nat.individual.wrap, order(ShortName, decreasing=TRUE)),], Bug %in% bacterias), aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=ShortName, group=ShortName, order=ShortName), stat='identity', position='stack') + scale_fill_manual(values=bug.individual.Pal, name='') + scale_x_discrete(breaks = as.character(unique(prevalence.nat.individual.wrap$YearWeek))[order(as.character(unique(prevalence.nat.individual.wrap$YearWeek)))][seq(1, length(as.character(unique(prevalence.nat.individual.wrap$YearWeek))), 8)]) + scale_y_continuous(label=percent) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=14, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='white', fill='white'))  + labs(title='Prevalence of Bacterial Organisms in Trend Population with ILI Overlay', y='Prevalence of Organism', x='Year-Week') + geom_line(aes(x=YearWeek, y=2.5*Rate, group=1), color='black', lwd=2)
p.viruses.area <- ggplot(subset(prevalence.nat.individual.wrap[with(prevalence.nat.individual.wrap, order(ShortName, decreasing=TRUE)),], Bug %in% viruses), aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=ShortName, group=ShortName, order=ShortName), stat='identity', position='stack') + scale_fill_manual(values=bug.individual.Pal, name='') + scale_x_discrete(breaks = as.character(unique(prevalence.nat.individual.wrap$YearWeek))[order(as.character(unique(prevalence.nat.individual.wrap$YearWeek)))][seq(1, length(as.character(unique(prevalence.nat.individual.wrap$YearWeek))), 8)]) + scale_y_continuous(label=percent) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=14, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='white', fill='white'))  + labs(title='Prevalence of Viral Organisms in Tested Population with ILI Trend Overlay', y='Prevalence of Organism', x='Year-Week') + geom_line(aes(x=YearWeek, y=10*Rate, group=1), color='black', lwd=2)
p.fluAs.area <- ggplot(subset(prevalence.nat.individual.wrap[with(prevalence.nat.individual.wrap, order(ShortName, decreasing=TRUE)),], Bug %in% fluAs), aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=ShortName, group=ShortName, order=ShortName), stat='identity', position='stack') + scale_fill_manual(values=bug.individual.Pal, name='') + scale_x_discrete(breaks = as.character(unique(prevalence.nat.individual.wrap$YearWeek))[order(as.character(unique(prevalence.nat.individual.wrap$YearWeek)))][seq(1, length(as.character(unique(prevalence.nat.individual.wrap$YearWeek))), 8)]) + scale_y_continuous(label=percent) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=14, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='white', fill='white'))  + labs(title='Prevalence of Influenza A in Trend Population with ILI Overlay', y='Prevalence of Organism', x='Year-Week') + geom_line(aes(x=YearWeek, y=5*Rate, group=1), color='black', lwd=2)
p.fluBs.area <- ggplot(subset(prevalence.nat.individual.wrap[with(prevalence.nat.individual.wrap, order(ShortName, decreasing=TRUE)),], Bug %in% fluBs), aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=ShortName, group=ShortName, order=ShortName), stat='identity', position='stack') + scale_fill_manual(values=bug.individual.Pal, name='') + scale_x_discrete(breaks = as.character(unique(prevalence.nat.individual.wrap$YearWeek))[order(as.character(unique(prevalence.nat.individual.wrap$YearWeek)))][seq(1, length(as.character(unique(prevalence.nat.individual.wrap$YearWeek))), 8)]) + scale_y_continuous(label=percent) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=14, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='white', fill='white'))  + labs(title='Prevalence of Influenza B in Trend Population with ILI Overlay', y='Prevalence of Organism', x='Year-Week') + geom_line(aes(x=YearWeek, y=2.5*Rate, group=1), color='black', lwd=2)
p.rsv.area <- ggplot(subset(prevalence.nat.individual.wrap[with(prevalence.nat.individual.wrap, order(ShortName, decreasing=TRUE)),], Bug %in% rsv), aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=ShortName, group=ShortName, order=ShortName), stat='identity', position='stack') + scale_fill_manual(values=bug.individual.Pal, name='') + scale_x_discrete(breaks = as.character(unique(prevalence.nat.individual.wrap$YearWeek))[order(as.character(unique(prevalence.nat.individual.wrap$YearWeek)))][seq(1, length(as.character(unique(prevalence.nat.individual.wrap$YearWeek))), 8)]) + scale_y_continuous(label=percent) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=14, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='white', fill='white'))  + labs(title='Prevalence of RSV in Trend Population with ILI Overlay', y='Prevalence of Organism', x='Year-Week') + geom_line(aes(x=YearWeek, y=6*Rate, group=1), color='black', lwd=2)
p.flusRSV.area <- ggplot(subset(prevalence.nat.individual.wrap[with(prevalence.nat.individual.wrap, order(ShortName, decreasing=TRUE)),], Bug %in% flusRSV), aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=ShortName, group=ShortName, order=ShortName), stat='identity', position='stack') + scale_fill_manual(values=bug.individual.Pal, name='') + scale_x_discrete(breaks = as.character(unique(prevalence.nat.individual.wrap$YearWeek))[order(as.character(unique(prevalence.nat.individual.wrap$YearWeek)))][seq(1, length(as.character(unique(prevalence.nat.individual.wrap$YearWeek))), 8)]) + scale_y_continuous(label=percent) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=14, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='white', fill='white'))  + labs(title='Prevalence of Influenza and RSV in Trend Population with ILI Overlay', y='Prevalence of Organism', x='Year-Week') + geom_line(aes(x=YearWeek, y=10*Rate, group=1), color='black', lwd=2)
p.pivs.area <- ggplot(subset(prevalence.nat.individual.wrap[with(prevalence.nat.individual.wrap, order(ShortName, decreasing=TRUE)),], Bug %in% pivs), aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=ShortName, group=ShortName, order=ShortName), stat='identity', position='stack') + scale_fill_manual(values=bug.individual.Pal, name='') + scale_x_discrete(breaks = as.character(unique(prevalence.nat.individual.wrap$YearWeek))[order(as.character(unique(prevalence.nat.individual.wrap$YearWeek)))][seq(1, length(as.character(unique(prevalence.nat.individual.wrap$YearWeek))), 8)]) + scale_y_continuous(label=percent) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=14, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='white', fill='white'))  + labs(title='Prevalence of Parainfluenza in Trend Population with ILI Overlay', y='Prevalence of Organism', x='Year-Week') + geom_line(aes(x=YearWeek, y=3*Rate, group=1), color='black', lwd=2)
p.corona.area <- ggplot(subset(prevalence.nat.individual.wrap[with(prevalence.nat.individual.wrap, order(ShortName, decreasing=TRUE)),], Bug %in% corona), aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=ShortName, group=ShortName, order=ShortName), stat='identity', position='stack') + scale_fill_manual(values=bug.individual.Pal, name='') + scale_x_discrete(breaks = as.character(unique(prevalence.nat.individual.wrap$YearWeek))[order(as.character(unique(prevalence.nat.individual.wrap$YearWeek)))][seq(1, length(as.character(unique(prevalence.nat.individual.wrap$YearWeek))), 8)]) + scale_y_continuous(label=percent) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=14, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='white', fill='white'))  + labs(title='Prevalence of Coronavirus in Trend Population with ILI Overlay', y='Prevalence of Organism', x='Year-Week') + geom_line(aes(x=YearWeek, y=3*Rate, group=1), color='black', lwd=2)
p.rhino.area <- ggplot(subset(prevalence.nat.individual.wrap[with(prevalence.nat.individual.wrap, order(ShortName, decreasing=TRUE)),], Bug %in% rhino), aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=ShortName, group=ShortName, order=ShortName), stat='identity', position='stack') + scale_fill_manual(values=bug.individual.Pal, name='') + scale_x_discrete(breaks = as.character(unique(prevalence.nat.individual.wrap$YearWeek))[order(as.character(unique(prevalence.nat.individual.wrap$YearWeek)))][seq(1, length(as.character(unique(prevalence.nat.individual.wrap$YearWeek))), 8)]) + scale_y_continuous(label=percent) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=14, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='white', fill='white')) + labs(title='Prevalence of Human Rhino/Enterovirus in Trend Population with ILI Overlay', y='Prevalence of Organism', x='Year-Week') + geom_line(aes(x=YearWeek, y=Rate*12, group=1), color='black', lwd=2)
p.adeno.area <- ggplot(subset(prevalence.nat.individual.wrap[with(prevalence.nat.individual.wrap, order(ShortName, decreasing=TRUE)),], Bug %in% adeno), aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=ShortName, group=ShortName, order=ShortName), stat='identity', position='stack') + scale_fill_manual(values=bug.individual.Pal, name='') + scale_x_discrete(breaks = as.character(unique(prevalence.nat.individual.wrap$YearWeek))[order(as.character(unique(prevalence.nat.individual.wrap$YearWeek)))][seq(1, length(as.character(unique(prevalence.nat.individual.wrap$YearWeek))), 8)]) + scale_y_continuous(label=percent) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=14, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='white', fill='white'))  + labs(title='Prevalence of Adenovirus in Trend Population with ILI Overlay', y='Prevalence of Organism', x='Year-Week') + geom_line(aes(x=YearWeek, y=3*Rate, group=1), color='black', lwd=2)
p.hmp.area <- ggplot(subset(prevalence.nat.individual.wrap[with(prevalence.nat.individual.wrap, order(ShortName, decreasing=TRUE)),], Bug %in% hmp), aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=ShortName, group=ShortName, order=ShortName), stat='identity', position='stack') + scale_fill_manual(values=bug.individual.Pal, name='') + scale_x_discrete(breaks = as.character(unique(prevalence.nat.individual.wrap$YearWeek))[order(as.character(unique(prevalence.nat.individual.wrap$YearWeek)))][seq(1, length(as.character(unique(prevalence.nat.individual.wrap$YearWeek))), 8)]) + scale_y_continuous(label=percent) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=14, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='white', fill='white'))  + labs(title='Prevalence of Human Metapneumovirus in Trend Population with ILI Overlay', y='Prevalence of Organism', x='Year-Week') + geom_line(aes(x=YearWeek, y=3*Rate, group=1), color='black', lwd=2)
p.fluAs.area
p.pivs.area
p.bugs.individual.area
cdc.reg.rolled <- do.call(rbind, lapply(1:length(unique(cdc.reg.df$Region)), function(x) data.frame(YearWeek =  cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x], 'YearWeek'][2:(length(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x], 'YearWeek'])-1)], Region = unique(cdc.reg.df$Region)[x], Rate = sapply(2:(length(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],'YearWeek'])-1), function(y) sum(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],][(y-1):(y+1), 'ILITotal'])/sum(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],][(y-1):(y+1), 'TotalPatients'])))))
head(cdc.reg.rolled)
do.call(rbind, lapply(1:length(unique(cdc.reg.df$Region)), function(x) data.frame(YearWeek =  cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x], 'YearWeek'][2:(length(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x], 'YearWeek'])-1)], Region = unique(cdc.reg.df$Region)[x], ILITotal = sapply(2:(length(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],'YearWeek'])-1), function(y) sum(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],][(y-1):(y+1), 'ILITotal']), TotalPatients = sapply(2:(length(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],'YearWeek'])-1), function(y) sum(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],][(y-1):(y+1), 'TotalPatients']))))))
do.call(rbind, lapply(1:length(unique(cdc.reg.df$Region)), function(x) data.frame(YearWeek =  cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x], 'YearWeek'][2:(length(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x], 'YearWeek'])-1)], Region = unique(cdc.reg.df$Region)[x], ILITotal = sapply(2:(length(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],'YearWeek'])-1), function(y) sum(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],][(y-1):(y+1), 'ILITotal']), TotalPatients = sapply(2:(length(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],'YearWeek'])-1), function(y) sum(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],][(y-1):(y+1), 'TotalPatients']))))))
do.call(rbind, lapply(1:length(unique(cdc.reg.df$Region)), function(x) data.frame(YearWeek =  cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x], 'YearWeek'][2:(length(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x], 'YearWeek'])-1)], Region = unique(cdc.reg.df$Region)[x], ILITotal = sapply(2:(length(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],'YearWeek'])-1), function(y) sum(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],][(y-1):(y+1), 'ILITotal'])), TotalPatients = sapply(2:(length(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],'YearWeek'])-1), function(y) sum(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],][(y-1):(y+1), 'TotalPatients'])))))
cdc.reg.rolled <- do.call(rbind, lapply(1:length(unique(cdc.reg.df$Region)), function(x) data.frame(YearWeek =  cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x], 'YearWeek'][2:(length(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x], 'YearWeek'])-1)], Region = unique(cdc.reg.df$Region)[x], ILITotal = sapply(2:(length(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],'YearWeek'])-1), function(y) sum(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],][(y-1):(y+1), 'ILITotal'])), TotalPatients = sapply(2:(length(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],'YearWeek'])-1), function(y) sum(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],][(y-1):(y+1), 'TotalPatients'])))))
head(cdc.reg.count.df)
head(cdc.reg.df)
start.year <- 2014
# use data from all time and show a pareto of prevalence (collapsing fluA, coronas, pivs, and bacterias)
prev.pareto.all <- data.frame(Year = unique(runs.reg.date$Year), TotalRuns = with(runs.reg.date, aggregate(Record~Year, FUN=sum))$Record)
prev.pareto.all <- merge(prev.pareto.all, with(merge(runs.reg.date[, c('Year','RunDataId')], data.frame(RunDataId = bugs.df$RunDataId, Organism = bugs.df$BugPositive, Positive = 1), by='RunDataId'), aggregate(Positive~Year+Organism, FUN=sum)))
prev.pareto.all <- subset(prev.pareto.all, Year >= start.year)
prev.pareto.all <- with(prev.pareto.all, aggregate(cbind(TotalRuns, Positive)~Organism, FUN=sum))
prev.pareto.all <- merge(prev.pareto.all, shortnames.df, by='Organism')
prev.pareto.all <- rbind(prev.pareto.all, data.frame(with(prev.pareto.all[grep('Corona', prev.pareto.all$Organism),], aggregate(Positive~TotalRuns, FUN=sum)), Organism = 'Coronavirus', ShortName = 'Coronavirus (all)')[,c('TotalRuns','Organism','Positive','ShortName')])
prev.pareto.all <- rbind(prev.pareto.all, data.frame(with(prev.pareto.all[grep('Influenza A', prev.pareto.all$Organism),], aggregate(Positive~TotalRuns, FUN=sum)), Organism = 'Influenza A', ShortName = 'Influenza A (all)')[,c('TotalRuns','Organism','Positive','ShortName')])
prev.pareto.all <- rbind(prev.pareto.all, data.frame(with(prev.pareto.all[grep('Parainfluenza', prev.pareto.all$Organism),], aggregate(Positive~TotalRuns, FUN=sum)), Organism = 'Parainfluenza', ShortName = 'Parainfluenza (all)')[,c('TotalRuns','Organism','Positive','ShortName')])
prev.pareto.all <- rbind(prev.pareto.all, data.frame(with(prev.pareto.all[grep('pneumoniae|pertussis', prev.pareto.all$Organism),], aggregate(Positive~TotalRuns, FUN=sum)), Organism = 'Bacteria', ShortName = 'Bacteria (all)')[,c('TotalRuns','Organism','Positive','ShortName')])
prev.pareto.all$Prevalence <- with(prev.pareto.all, Positive/TotalRuns)
# use this output to determine the order of the levels
determine.order.all <- merge(prev.pareto.all, with(prev.pareto.all, aggregate(Positive~ShortName, FUN=sum)), by='ShortName')
label.order.all <- as.character(unique(determine.order.all[with(determine.order.all, order(Positive.y, decreasing = TRUE)), 'ShortName']))
label.order.all <- label.order.all[c(1, 2, 3, 9, 10, 20, 24, 25, 4, 5, 8, 17, 18, 19, 6, 12, 14, 16, 21, 7, 11, 13, 15, 22, 23)]
prev.pareto.all$Name <- factor(prev.pareto.all$ShortName, levels = label.order.all)
prev.pareto.all$Key <- 'AllData'
p.prev.pareto.all <- ggplot(prev.pareto.all, aes(x=Name, y=Prevalence, fill=Key)) + geom_bar(stat='identity', position='dodge') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=14, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.all, 'Key'), guide=FALSE) + scale_y_continuous(label=percent) + labs(title='National Prevalence of Organsims') + labs(x='')
# create a version of the same chart, but collapse the cornonas, pivs, bacterias, and influenza As
prev.pareto.all.collapsed <- prev.pareto.all[!(prev.pareto.all$ShortName %in% prev.pareto.all[grep('Flu A|FluA|PIV|CoV|pertussis|pneumo', prev.pareto.all$ShortName),'ShortName']), ]
determine.order.all.collapsed <- merge(prev.pareto.all.collapsed, with(prev.pareto.all.collapsed, aggregate(Positive~ShortName, FUN=sum)), by='ShortName')
label.order.all.collapsed <- as.character(unique(determine.order.all.collapsed[with(determine.order.all.collapsed, order(Positive.y, decreasing = TRUE)), 'ShortName']))
prev.pareto.all.collapsed$Name <- factor(prev.pareto.all.collapsed$ShortName, levels = label.order.all.collapsed)
p.prev.pareto.all.collapsed <- ggplot(prev.pareto.all.collapsed, aes(x=Name, y=Prevalence, fill=Key)) + geom_bar(stat='identity', position='dodge') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=14, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.all, 'Key'), guid=FALSE) + scale_y_continuous(label=percent) + labs(title='National Prevalence of Organsims by Organism Type') + labs(x='')
# subset the data into children's hospitals and mixed population hospitals
sites.mixed <- unique(runs.reg.date[!(runs.reg.date$Name %in% as.character(unique(runs.reg.date$Name)[grep('Children', unique(runs.reg.date$Name))])),'CustomerSiteId'])
sites.child <- unique(runs.reg.date[runs.reg.date$Name %in% as.character(unique(runs.reg.date$Name))[grep('Children', unique(runs.reg.date$Name))],'CustomerSiteId'])
# mixed
prev.pareto.mixed <- data.frame(Year = unique(runs.reg.date$Year), TotalRuns = with(subset(runs.reg.date, CustomerSiteId %in% sites.mixed), aggregate(Record~Year, FUN=sum))$Record)
prev.pareto.mixed <- merge(prev.pareto.mixed, with(merge(runs.reg.date[runs.reg.date$CustomerSiteId %in% sites.mixed, c('Year','RunDataId')], data.frame(RunDataId = bugs.df$RunDataId, Organism = bugs.df$BugPositive, Positive = 1), by='RunDataId'), aggregate(Positive~Year+Organism, FUN=sum)), by='Year', all.x=TRUE)
prev.pareto.mixed <- subset(prev.pareto.mixed, Year >= start.year)
prev.pareto.mixed <- merge(prev.pareto.mixed, shortnames.df, by='Organism')
prev.pareto.mixed <- rbind(prev.pareto.mixed, data.frame(with(prev.pareto.mixed[grep('Corona', prev.pareto.mixed$Organism),], aggregate(Positive~Year+TotalRuns, FUN=sum)), Organism = 'Coronavirus', ShortName = 'Coronavirus (all)')[,c('Year','TotalRuns','Organism','Positive','ShortName')])
prev.pareto.mixed <- rbind(prev.pareto.mixed, data.frame(with(prev.pareto.mixed[grep('Influenza A', prev.pareto.mixed$Organism),], aggregate(Positive~Year+TotalRuns, FUN=sum)), Organism = 'Influenza', ShortName = 'Influenza A (all)')[,c('Year','TotalRuns','Organism','Positive','ShortName')])
prev.pareto.mixed <- rbind(prev.pareto.mixed, data.frame(with(prev.pareto.mixed[grep('Parainfluenza', prev.pareto.mixed$Organism),], aggregate(Positive~Year+TotalRuns, FUN=sum)), Organism = 'Parainfluenza', ShortName = 'Parainfluenza (all)')[,c('Year','TotalRuns','Organism','Positive','ShortName')])
prev.pareto.mixed <- rbind(prev.pareto.mixed, data.frame(with(prev.pareto.mixed[grep('pneumoniae|pertussis', prev.pareto.mixed$Organism),], aggregate(Positive~Year+TotalRuns, FUN=sum)), Organism = 'Bacteria', ShortName = 'Bacteria (all)')[,c('Year','TotalRuns','Organism','Positive','ShortName')])
prev.pareto.mixed.all <- with(prev.pareto.mixed, aggregate(cbind(TotalRuns, Positive)~Organism+ShortName, FUN=sum))
prev.pareto.mixed$Prevalence <- with(prev.pareto.mixed, Positive/TotalRuns)
prev.pareto.mixed.all$Prevalence <- with(prev.pareto.mixed.all, Positive/TotalRuns)
# childrens
prev.pareto.child <- data.frame(Year = unique(runs.reg.date$Year), TotalRuns = with(subset(runs.reg.date, CustomerSiteId %in% sites.child), aggregate(Record~Year, FUN=sum))$Record)
prev.pareto.child <- merge(prev.pareto.child, with(merge(runs.reg.date[runs.reg.date$CustomerSiteId %in% sites.child, c('Year','RunDataId')], data.frame(RunDataId = bugs.df$RunDataId, Organism = bugs.df$BugPositive, Positive = 1), by='RunDataId'), aggregate(Positive~Year+Organism, FUN=sum)), by='Year', all.x=TRUE)
prev.pareto.child <- subset(prev.pareto.child, Year >= start.year)
prev.pareto.child <- merge(prev.pareto.child, shortnames.df, by='Organism')
prev.pareto.child <- rbind(prev.pareto.child, data.frame(with(prev.pareto.child[grep('Corona', prev.pareto.child$Organism),], aggregate(Positive~Year+TotalRuns, FUN=sum)), Organism = 'Coronavirus', ShortName = 'Coronavirus (all)')[,c('Year','TotalRuns','Organism','Positive','ShortName')])
prev.pareto.child <- rbind(prev.pareto.child, data.frame(with(prev.pareto.child[grep('Influenza A', prev.pareto.child$Organism),], aggregate(Positive~Year+TotalRuns, FUN=sum)), Organism = 'Influenza', ShortName = 'Influenza A (all)')[,c('Year','TotalRuns','Organism','Positive','ShortName')])
prev.pareto.child <- rbind(prev.pareto.child, data.frame(with(prev.pareto.child[grep('Parainfluenza', prev.pareto.child$Organism),], aggregate(Positive~Year+TotalRuns, FUN=sum)), Organism = 'Parainfluenza', ShortName = 'Parainfluenza (all)')[,c('Year','TotalRuns','Organism','Positive','ShortName')])
prev.pareto.child <- rbind(prev.pareto.child, data.frame(with(prev.pareto.child[grep('pneumoniae|pertussis', prev.pareto.child$Organism),], aggregate(Positive~Year+TotalRuns, FUN=sum)), Organism = 'Bacteria', ShortName = 'Bacteria (all)')[,c('Year','TotalRuns','Organism','Positive','ShortName')])
prev.pareto.child.all <- with(prev.pareto.child, aggregate(cbind(TotalRuns, Positive)~Organism+ShortName, FUN=sum))
prev.pareto.child$Prevalence <- with(prev.pareto.child, Positive/TotalRuns)
prev.pareto.child.all$Prevalence <- with(prev.pareto.child.all, Positive/TotalRuns)
# make a chart that shows the prevalence of organisms in all sites year-over-year (both collapsed and expanded)
prev.pareto.all.year <- rbind(prev.pareto.mixed, prev.pareto.child)
prev.pareto.all.year <- with(prev.pareto.all.year, aggregate(cbind(TotalRuns, Positive)~Organism+ShortName+Year, FUN=sum))
prev.pareto.all.year$Prevalence <- with(prev.pareto.all.year, Positive/TotalRuns)
determine.order.all.year <- merge(prev.pareto.all.year, with(prev.pareto.all.year, aggregate(Positive~ShortName, FUN=sum)), by='ShortName')
label.order.all.year <- as.character(unique(determine.order.all.year[with(determine.order.all.year, order(Positive.y, decreasing = TRUE)), 'ShortName']))
label.order.all.year <- label.order.all.year[c(1, 2, 3, 9, 10, 20, 24, 25, 4, 5, 8, 17, 18, 19, 6, 12, 14, 16, 21, 7, 11, 13, 15, 22, 23)]
prev.pareto.all.year$Name <- factor(prev.pareto.all.year$ShortName, levels = label.order.all.year)
p.prev.pareto.all.year <- ggplot(prev.pareto.all.year, aes(x=Name, y=Prevalence, fill=as.factor(Year))) + geom_bar(stat='identity', position='dodge') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=14, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.all.year, 'Year'), guide=FALSE) + scale_y_continuous(label=percent) + labs(title='National Prevalence of Organsims by Year') + labs(x='')
# create a version of the same chart, but collapse the cornonas, pivs, bacterias, and influenza As
prev.pareto.all.year.collapsed <- prev.pareto.all.year[!(prev.pareto.all.year$ShortName %in% prev.pareto.all.year[grep('Flu A|FluA|PIV|CoV|pertussis|pneumo', prev.pareto.all.year$ShortName),'ShortName']), ]
determine.order.all.collapsed <- merge(prev.pareto.all.year.collapsed, with(prev.pareto.all.year.collapsed, aggregate(Positive~ShortName, FUN=sum)), by='ShortName')
label.order.all.collapsed <- as.character(unique(determine.order.all.collapsed[with(determine.order.all.collapsed, order(Positive.y, decreasing = TRUE)), 'ShortName']))
prev.pareto.all.year.collapsed$Name <- factor(prev.pareto.all.year.collapsed$ShortName, levels = label.order.all.collapsed)
p.prev.pareto.all.year.collapsed <- ggplot(prev.pareto.all.year.collapsed, aes(x=Name, y=Prevalence, fill=as.factor(Year))) + geom_bar(stat='identity', position='dodge') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=14, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.all.year.collapsed, 'Year'), guid=FALSE) + scale_y_continuous(label=percent) + labs(title='National Prevalence of Organsims by Organism Type and Year') + labs(x='')
# make a chart that shows the difference in prevalence for children and mixed populations (both collapsed and expanded)
prev.pareto.mixed.all$Key <- 'Peds+Adult'
prev.pareto.mixed.all$Name <- factor(prev.pareto.mixed.all$ShortName, levels = label.order.all)
prev.pareto.child.all$Key <- 'Pediatric'
prev.pareto.child.all$Name <- factor(prev.pareto.child.all$ShortName, levels = label.order.all)
prev.pareto.all.pop <- rbind(prev.pareto.mixed.all, prev.pareto.child.all)
p.prev.all.pop <- ggplot(prev.pareto.all.pop, aes(x=Name, y=Prevalence, fill=Key)) + geom_bar(stat='identity', position='dodge') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=14, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.all.pop, 'Key'), name='') + scale_y_continuous(label=percent) + labs(title='National Prevalence of Organsims by Hospital Population Type') + labs(x='')
prev.pareto.mixed.all.collapsed <- prev.pareto.mixed.all[!(prev.pareto.mixed.all$ShortName %in% prev.pareto.mixed.all[grep('Flu A|FluA|PIV|CoV|pertussis|pneumo', prev.pareto.mixed.all$ShortName),'ShortName']), ]
prev.pareto.mixed.all.collapsed$Name <- factor(prev.pareto.mixed.all.collapsed$ShortName, levels = label.order.all.collapsed)
prev.pareto.child.all.collapsed <- prev.pareto.child.all[!(prev.pareto.child.all$ShortName %in% prev.pareto.child.all[grep('Flu A|FluA|PIV|CoV|pertussis|pneumo', prev.pareto.child.all$ShortName),'ShortName']), ]
prev.pareto.child.all.collapsed$Name <- factor(prev.pareto.child.all.collapsed$ShortName, levels = label.order.all.collapsed)
prev.pareto.all.pop.collapsed <- rbind(prev.pareto.mixed.all.collapsed, prev.pareto.child.all.collapsed)
p.prev.pareto.all.pop.collapsed <- ggplot(prev.pareto.all.pop.collapsed, aes(x=Name, y=Prevalence, fill=Key)) + geom_bar(stat='identity', position='dodge') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=14, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1, vjust=0.35), panel.background=element_rect(color='white', fill='white')) + scale_fill_manual(values=createPaletteOfVariableLength(prev.pareto.all.pop.collapsed, 'Key'), guid=FALSE) + scale_y_continuous(label=percent) + labs(title='National Prevalence of Organsims by Organism Type and Hospital Population Type') + labs(x='')
head(prevalence.nat.individual.bugs)
head(prevalence.nat.individual.count)
head(prevalence.nat.individual.wrap)
head(prevalence.nat.individual)
head(prevalence.nat.individual.count)
head(prevalence.reg.count)
head(bugs.reg.agg)
head(prevalence.reg.count)
a <- prevalence.reg.count[with(prevalence.reg.count, order(YearWeek, CustomerSiteId)), ]
View(a)
View(a)
head(prevalence.reg.count)
head(bugs.reg.fill)
length(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==2, 'YearWeek'])
length(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==5, 'YearWeek'])
length(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==7, 'YearWeek'])
length(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==9, 'YearWeek'])
colsToCat <- c('Region','Name','CustomerSiteId','BugPositive')
bugs.reg.trim <- bugs.reg[,c('YearWeek', colsToCat)]
bugs.reg.trim$combocat <- do.call(paste, c(bugs.reg.trim[,colsToCat], sep=','))
bugs.reg.trim$Record <- 1
bugs.reg.combo <- do.call(rbind, lapply(1:length(unique(bugs.reg.trim$combocat)), function(x) cbind(merge(unique(calendar.df[,c('YearWeek','Year')]), bugs.reg.trim[bugs.reg.trim$combocat == unique(bugs.reg.trim$combocat)[x], c('YearWeek','Record')], by='YearWeek', all.x=TRUE), ComboCat = unique(bugs.reg.trim$combocat)[x])))
deCombo <- as.data.frame(sapply(1:length(colsToCat), function(x) do.call(rbind, strsplit(as.character(bugs.reg.combo$ComboCat), split=','))[,x]))
colnames(deCombo) <- colsToCat
bugs.reg.fill <- cbind(bugs.reg.combo[,c('YearWeek','Record')], deCombo)
bugs.reg.fill[is.na(bugs.reg.fill$Record),'Record'] <- 0
head(bugs.reg.fill)
unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==7, 'YearWeek'])
unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==7, 'BugPositive'])
length(unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==7, 'BugPositive']))
length(unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==7, 'YearWeek']))
length(unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==7, 'YearWeek']))*length(unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==7, 'BugPositive']))+length(unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==2, 'YearWeek']))*length(unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==2, 'BugPositive']))+length(unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==5, 'YearWeek']))*length(unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==5, 'BugPositive']))+length(unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==10, 'YearWeek']))*length(unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==10, 'BugPositive']))+length(unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==13, 'YearWeek']))*length(unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==13, 'BugPositive']))
sites
length(unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==7, 'YearWeek']))*length(unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==7, 'BugPositive']))+length(unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==2, 'YearWeek']))*length(unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==2, 'BugPositive']))+length(unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==5, 'YearWeek']))*length(unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==5, 'BugPositive']))+length(unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==10, 'YearWeek']))*length(unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==10, 'BugPositive']))+length(unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==13, 'YearWeek']))*length(unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==13, 'BugPositive']))+length(unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==26, 'YearWeek']))*length(unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==26, 'BugPositive']))+length(unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==29, 'YearWeek']))*length(unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==29, 'BugPositive']))+length(unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==36, 'YearWeek']))*length(unique(bugs.reg.fill[bugs.reg.fill$CustomerSiteId==36, 'BugPositive']))
rm(a)
head(prevalence.reg.count)
length(prevalence.reg.count[,1])
View(prevalence.reg.count)
head(with(runs.reg.date[runs.reg.date$CustomerSiteId==26, ], aggregate(Record~YearWeek, FUN=sum)))
View(prevalence.reg.count)
head(prevalence.reg.count)
head(cdc.reg.count.agg)
sites
prevalence.nat.individual.count <- with(prevalence.reg.count, aggregate(cbind(Runs, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u)~YearWeek, FUN=sum))
prevalence.nat.individual.bugs <- do.call(rbind, lapply(1:length(grep(paste('^', paste(letters, collapse='|^'), sep=''), colnames(prevalence.nat.individual.count))), function(x) data.frame(YearWeek = prevalence.nat.individual.count$YearWeek, Code = letters[x], Prevalence = prevalence.nat.individual.count[,letters[x]]/prevalence.nat.individual.count$Runs)))
prevalence.nat.individual.wrap <- merge(prevalence.nat.individual.bugs, decoder, by='Code', all.x=TRUE)
head(prevalence.nat.individual.wrap)
head(prevalence.reg.count)
merge(prevalence.reg.count[,c('YearWeek','CustomerSiteId','Region')], cdc.reg.count.df, by=c('YearWeek','Region'))
merge(prevalence.reg.count[,c('YearWeek','CustomerSiteId','Region')], cdc.reg.count.df, by=c('YearWeek','Region'))
with(merge(prevalence.reg.count[,c('YearWeek','CustomerSiteId','Region')], cdc.reg.count.df, by=c('YearWeek','Region')), aggregate(cbind(ILITotal, TotalPatients)~YearWeek, FUN=sum))
cdc.reg.count.agg <- with(cdc.reg.count.df[cdc.reg.count.df$Region %in% prevalence.reg.count$Region, ], aggregate(cbind(TotalPatients, ILITotal)~YearWeek, FUN=sum))
cdc.reg.count.agg$Rate <- with(cdc.reg.count.agg, ILITotal/TotalPatients)
with(merge(prevalence.reg.count[,c('YearWeek','CustomerSiteId','Region')], cdc.reg.count.df, by=c('YearWeek','Region')), aggregate(cbind(ILITotal, TotalPatients)~YearWeek, FUN=sum))head(cdc.reg.count.agg)
head(cdc.reg.count.agg)
cdc.reg.count.agg <- with(merge(prevalence.reg.count[,c('YearWeek','CustomerSiteId','Region')], cdc.reg.count.df, by=c('YearWeek','Region')), aggregate(cbind(ILITotal, TotalPatients)~YearWeek, FUN=sum))
cdc.reg.count.agg$Rate <- with(cdc.reg.count.agg, ILITotal/TotalPatients)
head(cdc.reg.count.agg)
tail(cdc.reg.count.agg)
cdc.reg.count.agg <- with(cdc.reg.count.df[cdc.reg.count.df$Region %in% prevalence.reg.count$Region, ], aggregate(cbind(TotalPatients, ILITotal)~YearWeek, FUN=sum))
cdc.reg.count.agg$Rate <- with(cdc.reg.count.agg, ILITotal/TotalPatients)
tail(cdc.reg.count.agg)
cdc.reg.count.agg <- with(merge(prevalence.reg.count[,c('YearWeek','CustomerSiteId','Region')], cdc.reg.count.df, by=c('YearWeek','Region')), aggregate(cbind(ILITotal, TotalPatients)~YearWeek, FUN=sum))
cdc.reg.count.agg$Rate <- with(cdc.reg.count.agg, ILITotal/TotalPatients)
cdc.reg.count.agg <- with(merge(prevalence.reg.count[,c('YearWeek','CustomerSiteId','Region')], cdc.reg.count.df, by=c('YearWeek','Region')), aggregate(cbind(ILITotal, TotalPatients)~YearWeek, FUN=sum))
cdc.reg.count.agg$Rate <- with(cdc.reg.count.agg, ILITotal/TotalPatients)
prevalence.nat.individual.wrap <- merge(prevalence.nat.individual.wrap, cdc.reg.count.agg[,c('YearWeek','Rate')], by='YearWeek')
prevalence.nat.individual.wrap$Bug <- as.character(prevalence.nat.individual.wrap$Bug)
prevalence.nat.individual.wrap <- merge(prevalence.nat.individual.wrap, shortnames.df, by.x='Bug', by.y='Organism')
prevalence.nat.individual.wrap <- prevalence.nat.individual.wrap[as.character(prevalence.nat.individual.wrap$YearWeek) >= '2014-01', ]
p.flusRSV.area
ggplot(subset(prevalence.nat.individual.wrap[with(prevalence.nat.individual.wrap, order(ShortName, decreasing=TRUE)),], Bug %in% flusRSV), aes(x=YearWeek)) + geom_area(aes(y=Prevalence, fill=ShortName, group=ShortName, order=ShortName), stat='identity', position='stack') + scale_fill_manual(values=bug.individual.Pal, name='') + scale_x_discrete(breaks = as.character(unique(prevalence.nat.individual.wrap$YearWeek))[order(as.character(unique(prevalence.nat.individual.wrap$YearWeek)))][seq(1, length(as.character(unique(prevalence.nat.individual.wrap$YearWeek))), 8)]) + scale_y_continuous(label=percent) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=14, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), legend.position='bottom', panel.background=element_rect(color='white', fill='white'))  + labs(title='Prevalence of Influenza and RSV in Trend Population with ILI Overlay', y='Prevalence of Organism', x='Year-Week') + geom_line(aes(x=YearWeek, y=10*Rate, group=1), color='black', lwd=2)
prev.model.ili <- with(prevalence.reg.count, aggregate(cbind(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u)~YearWeek, FUN=sum))
head(prev.model.ili)
head(cdc.reg.count.agg)
heaD(prev.model.ili)
head(prev.model.ili)
prev.model.ili <- with(prevalence.reg.count, aggregate(cbind(Runs, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u)~YearWeek, FUN=sum))
head(prev.model.ili)
do.call(cbind, lapply(1:21, function(x) prev.model.ili[,letters[x]]/prev.model.ili$Runs))
data.frame(YearWeek = prev.model.ili$YearWeek, do.call(cbind, lapply(1:21, function(x) prev.model.ili[,letters[x]]/prev.model.ili$Runs)))
prev.model.ili <- data.frame(YearWeek = prev.model.ili$YearWeek, do.call(cbind, lapply(1:21, function(x) prev.model.ili[,letters[x]]/prev.model.ili$Runs)))
colnames(prev.model.ili)
colnames(prev.model.ili)[2:22]
colnames(prev.model.ili)[grep('^X',colnames(prev.model.ili))
colnames(prev.model.ili)[grep('^X',colnames(prev.model.ili))]
colnames(prev.model.ili)[grep('^X',colnames(prev.model.ili))] <- letters[1:21]
head(prev.model.ili)
head(prev.model.ili)
lm(as.formula(paste('Rate', paste(letters[1:21], collapse='+'), sep='~')), prev.model.ili)
heaD(prev.model.ili)
head(prev.model.ili)
head(cdc.reg.count.agg)
cdc.reg.count.agg <- with(merge(prevalence.reg.count[,c('YearWeek','CustomerSiteId','Region')], cdc.reg.count.df, by=c('YearWeek','Region')), aggregate(cbind(ILITotal, TotalPatients)~YearWeek, FUN=sum))
head(cdc.reg.count.agg)
cdc.reg.count.agg$Rate <- with(cdc.reg.count.agg, ILITotal/TotalPatients)
prev.model.ili <- merge(prev.model.ili, cdc.reg.count.agg[,c('YearWeek','Rate')], by='YearWeek')
prev.model.ili <- with(prevalence.reg.count, aggregate(cbind(Runs, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u)~YearWeek, FUN=sum))
prev.model.ili <- data.frame(YearWeek = prev.model.ili$YearWeek, do.call(cbind, lapply(1:21, function(x) prev.model.ili[,letters[x]]/prev.model.ili$Runs)))
colnames(prev.model.ili)[grep('^X',colnames(prev.model.ili))] <- letters[1:21]
prev.model.ili <- merge(prev.model.ili, cdc.reg.count.agg[,c('YearWeek','Rate')], by='YearWeek', all.x=TRUE)
tail(prev.model.ili)
tail(prev.model.ili)
prev.model.ili <- with(prevalence.reg.count, aggregate(cbind(Runs, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u)~YearWeek, FUN=sum))
prev.model.ili <- data.frame(YearWeek = prev.model.ili$YearWeek, do.call(cbind, lapply(1:21, function(x) prev.model.ili[,letters[x]]/prev.model.ili$Runs)))
colnames(prev.model.ili)[grep('^X',colnames(prev.model.ili))] <- letters[1:21]
prev.model.ili <- merge(prev.model.ili, cdc.reg.count.agg[,c('YearWeek','Rate')], by='YearWeek')
head(prev.model.ili)
head(prev.model.ili)
head(prevalence.nat.individual.count)
head(prevalence.reg.count)
ggplot(prevalence.reg.count, aes(x=YearWeek, y=Runs)) + facet_wrap(~CustomerSiteId, scales='free_y')
ggplot(prevalence.reg.count, aes(x=YearWeek, y=Runs)) + facet_wrap(~CustomerSiteId, scales='free_y') + geom_bar(stat='identity')
site.starts
sites
site.starts[site.starts$SiteId %in% sites, ]
lm(as.formula(paste('Rate', paste(letters[1:21], collapse='+'), sep='~')), prev.model.ili)
fit.all <- lm(as.formula(paste('Rate', paste(letters[1:21], collapse='+'), sep='~')), prev.model.ili)
summary(fit.all)
set.seed(2)
# regression tree model
rename.cols <- merge(decoder, shortnames.df, by.x='Bug', by.y='Organism')
anova.tree.data <- prev.model.ili
colnames(anova.tree.data)[2:22] <- as.character(rename.cols$ShortName)
ili.anova.tree <- rpart(Rate~., data=anova.tree.data[, 2:23], method='anova')
printcp(ili.anova.tree)
plotcp(ili.anova.tree)
rsq.rpart(ili.anova.tree)
print(ili.anova.tree)
summary(ili.anova.tree)
plot(ili.anova.tree)
text(ili.anova.tree, use.n=TRUE, pretty=TRUE, xpd=TRUE)
ili.c.tree <- ctree(Rate~., data=anova.tree.data[, 2:23])
plot(ili.c.tree)
colnames(anova.tree.data)[2:22] <- gsub(' ', '', colnames(anova.tree.data[2:22]))
colnames(anova.tree.data)[grep('HRV', colnames(anova.tree.data))] <- 'HRV_Entero'
colnames(anova.tree.data)[grep('nosubtype', colnames(anova.tree.data))] <- 'FluA_noSubtype'
colnames(anova.tree.data)[grep('H1-09', colnames(anova.tree.data))] <- 'FluAH1_09'
ili.random.forest <- randomForest(Rate~., data=anova.tree.data[, 2:23])
importance(ili.random.forest)
plot(ili.random.forest)
varImpPlot(ili.random.forest)
ili.nueral.net <- nnet(Rate~., data=anova.tree.data[,2:23], size=20, linout=T)
plot(ili.nueral.net)
plot.nnet(ili.nueral.net, pos.col='black', neg.col='grey', circle.col='lightskyblue')
p <- gar.fun('Rate', ili.nueral.net, bar.plot = TRUE, y.lab = 'Relative Importance')
p + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=14, color='black', face='bold'), axis.text.x=element_text(angle=90, hjust=1), panel.background=element_rect(color='white',fill='white'), legend.position='none') + labs(title='Relative Importance of Organisms in Neural Net Model\n(Varaibles close to Zero signify minimal importance)')
fit.ili.all <- lm(as.formula(paste('Rate', paste(letters[1:21], collapse='+'), sep='~')), prev.model.ili)
rm(fit.all)
combos.eight <- read.csv('../DataSources/modelCombos8.csv', header=TRUE, sep=',')
combos.nine <- read.csv('../DataSources/modelCombos9.csv', header=TRUE, sep=',')
