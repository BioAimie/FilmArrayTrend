library(scales)
grid.newpage()
dt.diamonds <- as.data.table(diamonds)
d1 <- dt.diamonds[,list(revenue = sum(price),
stones = length(price)),
by=clarity]
setkey(d1, clarity)
ab <- data.frame(a = c(1:100), b =rnorm(201:300))
xy <- data.frame(x = c(1:100), y =c(sin(1):sin(270)))
#p1 <- ggplot(data = ab, aes(x = a, y = b)) + geom_point(size = 3, color = "blue")
p1 <- ggplot(ab, aes(x=a,y=b, fill="#4B92DB")) +
geom_point(stat="identity") +
labs(x="a", y="b") +
scale_fill_identity(name="", guide="legend", labels=c("b")) +
scale_y_continuous(labels=dollar, expand=c(0,0)) +
# theme(axis.text.x = element_text(angle = 90, hjust = 1),
#       axis.text.y = element_text(colour="#4B92DB"),
#       legend.position="bottom")
#p2 <- ggplot(data = xy, aes(x = x, y = y)) + geom_line(stat ="identity", color = "green")
# p1 <- ggplot(d1, aes(x=clarity,y=revenue, fill="#4B92DB")) +
#   geom_bar(stat="identity") +
#   labs(x="clarity", y="revenue") +
#   scale_fill_identity(name="", guide="legend", labels=c("Revenue")) +
#   scale_y_continuous(labels=dollar, expand=c(0,0)) +
#   theme(axis.text.x = element_text(angle = 90, hjust = 1),
#         axis.text.y = element_text(colour="#4B92DB"),
#         legend.position="bottom")
p2 <- ggplot(xy, aes(x=x, y=y, colour="red")) +
geom_line(size=1) +
labs(x="x", y="y") + expand_limits(y=0) +
scale_y_continuous(labels=comma, expand=c(0,0)) +
# scale_colour_manual(name = '',values =c("red","green"), labels = c("Number of Stones"))+
# theme(axis.text.y = element_text(colour = "red")) +
# theme(panel.background = element_rect(fill = NA),
#       panel.grid.major = element_blank(),
#       panel.grid.minor = element_blank(),
#       panel.border = element_rect(fill=NA,colour="grey50"),
#       legend.position="bottom")
# extract gtable
g1 <- ggplot_gtable(ggplot_build(p1))
g2 <- ggplot_gtable(ggplot_build(p2))
pp <- c(subset(g1$layout, name == "panel", se = t:r))
g <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t,
pp$l, pp$b, pp$l)
# axis tweaks
ia <- which(g2$layout$name == "axis-l")
ga <- g2$grobs[[ia]]
ax <- ga$children[[2]]
ax$widths <- rev(ax$widths)
ax$grobs <- rev(ax$grobs)
ax$grobs[[1]]$x <- ax$grobs[[1]]$x - unit(1, "npc") + unit(0.15, "cm")
g <- gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
g <- gtable_add_grob(g, ax, pp$t, length(g$widths) - 1, pp$b)
# draw it
# extract legend
leg1 <- g1$grobs[[which(g1$layout$name == "guide-box")]]
leg2 <- g2$grobs[[which(g2$layout$name == "guide-box")]]
g$grobs[[which(g$layout$name == "guide-box")]] <-
gtable:::cbind_gtable(leg1, leg2, "first")
grid.draw(g)
library(ggplot2)
library(gtable)
library(grid)
library(data.table)
library(scales)
grid.newpage()
dt.diamonds <- as.data.table(diamonds)
d1 <- dt.diamonds[,list(revenue = sum(price),
stones = length(price)),
by=clarity]
setkey(d1, clarity)
ab <- data.frame(a = c(1:100), b =rnorm(201:300))
xy <- data.frame(x = c(1:100), y =c(sin(1):sin(270)))
#p1 <- ggplot(data = ab, aes(x = a, y = b)) + geom_point(size = 3, color = "blue")
p1 <- ggplot(ab, aes(x=a,y=b, fill="#4B92DB")) +
geom_point(stat="identity") +
labs(x="a", y="b") +
scale_fill_identity(name="", guide="legend", labels=c("b")) +
# scale_y_continuous(labels=dollar, expand=c(0,0)) +
# theme(axis.text.x = element_text(angle = 90, hjust = 1),
#       axis.text.y = element_text(colour="#4B92DB"),
#       legend.position="bottom")
p2 <- ggplot(xy, aes(x=x, y=y, colour="red")) +
geom_line(size=1) +
labs(x="x", y="y") + expand_limits(y=0) +
# scale_y_continuous(labels=comma, expand=c(0,0)) +
# scale_colour_manual(name = '',values =c("red","green"), labels = c("Number of Stones"))+
# theme(axis.text.y = element_text(colour = "red")) +
# theme(panel.background = element_rect(fill = NA),
#       panel.grid.major = element_blank(),
#       panel.grid.minor = element_blank(),
#       panel.border = element_rect(fill=NA,colour="grey50"),
#       legend.position="bottom")
# extract gtable
g1 <- ggplot_gtable(ggplot_build(p1))
g2 <- ggplot_gtable(ggplot_build(p2))
pp <- c(subset(g1$layout, name == "panel", se = t:r))
g <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t,
pp$l, pp$b, pp$l)
# axis tweaks
ia <- which(g2$layout$name == "axis-l")
ga <- g2$grobs[[ia]]
ax <- ga$children[[2]]
ax$widths <- rev(ax$widths)
ax$grobs <- rev(ax$grobs)
ax$grobs[[1]]$x <- ax$grobs[[1]]$x - unit(1, "npc") + unit(0.15, "cm")
g <- gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
g <- gtable_add_grob(g, ax, pp$t, length(g$widths) - 1, pp$b)
# draw it
# extract legend
leg1 <- g1$grobs[[which(g1$layout$name == "guide-box")]]
leg2 <- g2$grobs[[which(g2$layout$name == "guide-box")]]
g$grobs[[which(g$layout$name == "guide-box")]] <-
gtable:::cbind_gtable(leg1, leg2, "first")
grid.draw(g)
dev.off()
rm(p1)
rm(p2)
rm(g1)
rm(g2)
rm(g)
rm(leg1)
rm(leg2)
library(ggplot2)
library(gtable)
library(grid)
library(data.table)
library(scales)
grid.newpage()
dt.diamonds <- as.data.table(diamonds)
d1 <- dt.diamonds[,list(revenue = sum(price),
stones = length(price)),
by=clarity]
setkey(d1, clarity)
ab <- data.frame(a = c(1:100), b =rnorm(201:300))
xy <- data.frame(x = c(1:100), y =c(sin(1):sin(270)))
#p1 <- ggplot(data = ab, aes(x = a, y = b)) + geom_point(size = 3, color = "blue")
p1 <- ggplot(ab, aes(x=a,y=b, fill="#4B92DB")) +
geom_point(stat="identity") +
labs(x="a", y="b") +
scale_fill_identity(name="", guide="legend", labels=c("b")) +
# scale_y_continuous(labels=dollar, expand=c(0,0)) +
# theme(axis.text.x = element_text(angle = 90, hjust = 1),
#       axis.text.y = element_text(colour="#4B92DB"),
#       legend.position="bottom")
p2 <- ggplot(xy, aes(x=x, y=y, colour="red")) +
geom_line(size=1) +
labs(x="x", y="y") + expand_limits(y=0) +
# scale_y_continuous(labels=comma, expand=c(0,0)) +
# scale_colour_manual(name = '',values =c("red","green"), labels = c("Number of Stones"))+
# theme(axis.text.y = element_text(colour = "red")) +
# theme(panel.background = element_rect(fill = NA),
#       panel.grid.major = element_blank(),
#       panel.grid.minor = element_blank(),
#       panel.border = element_rect(fill=NA,colour="grey50"),
#       legend.position="bottom")
# extract gtable
g1 <- ggplot_gtable(ggplot_build(p1))
g2 <- ggplot_gtable(ggplot_build(p2))
pp <- c(subset(g1$layout, name == "panel", se = t:r))
g <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t,
pp$l, pp$b, pp$l)
# axis tweaks
ia <- which(g2$layout$name == "axis-l")
ga <- g2$grobs[[ia]]
ax <- ga$children[[2]]
ax$widths <- rev(ax$widths)
ax$grobs <- rev(ax$grobs)
ax$grobs[[1]]$x <- ax$grobs[[1]]$x - unit(1, "npc") + unit(0.15, "cm")
g <- gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
g <- gtable_add_grob(g, ax, pp$t, length(g$widths) - 1, pp$b)
# draw it
# extract legend
leg1 <- g1$grobs[[which(g1$layout$name == "guide-box")]]
leg2 <- g2$grobs[[which(g2$layout$name == "guide-box")]]
g$grobs[[which(g$layout$name == "guide-box")]] <-
gtable:::cbind_gtable(leg1, leg2, "first")
grid.draw(g)
library(ggplot2)
library(gtable)
library(grid)
library(data.table)
library(scales)
grid.newpage()
dt.diamonds <- as.data.table(diamonds)
d1 <- dt.diamonds[,list(revenue = sum(price),
stones = length(price)),
by=clarity]
setkey(d1, clarity)
ab <- data.frame(a = c(1:100), b =rnorm(201:300))
xy <- data.frame(x = c(1:100), y =c(sin(1):sin(270)))
#p1 <- ggplot(data = ab, aes(x = a, y = b)) + geom_point(size = 3, color = "blue")
p1 <- ggplot(ab, aes(x=a,y=b, fill="#4B92DB")) +
geom_point(stat="identity") +
labs(x="a", y="b") +
scale_fill_identity(name="", guide="legend", labels=c("b")) #+
# scale_y_continuous(labels=dollar, expand=c(0,0)) +
# theme(axis.text.x = element_text(angle = 90, hjust = 1),
#       axis.text.y = element_text(colour="#4B92DB"),
#       legend.position="bottom")
p2 <- ggplot(xy, aes(x=x, y=y, colour="red")) +
geom_line(size=1) +
labs(x="x", y="y") + expand_limits(y=0) #+
# scale_y_continuous(labels=comma, expand=c(0,0)) +
# scale_colour_manual(name = '',values =c("red","green"), labels = c("Number of Stones"))+
# theme(axis.text.y = element_text(colour = "red")) +
# theme(panel.background = element_rect(fill = NA),
#       panel.grid.major = element_blank(),
#       panel.grid.minor = element_blank(),
#       panel.border = element_rect(fill=NA,colour="grey50"),
#       legend.position="bottom")
# extract gtable
g1 <- ggplot_gtable(ggplot_build(p1))
g2 <- ggplot_gtable(ggplot_build(p2))
pp <- c(subset(g1$layout, name == "panel", se = t:r))
g <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t,
pp$l, pp$b, pp$l)
# axis tweaks
ia <- which(g2$layout$name == "axis-l")
ga <- g2$grobs[[ia]]
ax <- ga$children[[2]]
ax$widths <- rev(ax$widths)
ax$grobs <- rev(ax$grobs)
ax$grobs[[1]]$x <- ax$grobs[[1]]$x - unit(1, "npc") + unit(0.15, "cm")
g <- gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
g <- gtable_add_grob(g, ax, pp$t, length(g$widths) - 1, pp$b)
# draw it
# extract legend
leg1 <- g1$grobs[[which(g1$layout$name == "guide-box")]]
leg2 <- g2$grobs[[which(g2$layout$name == "guide-box")]]
g$grobs[[which(g$layout$name == "guide-box")]] <-
gtable:::cbind_gtable(leg1, leg2, "first")
grid.draw(g)
library(ggplot2)
library(gtable)
library(grid)
library(data.table)
library(scales)
grid.newpage()
dt.diamonds <- as.data.table(diamonds)
d1 <- dt.diamonds[,list(revenue = sum(price),
stones = length(price)),
by=clarity]
setkey(d1, clarity)
ab <- data.frame(a = c(1:100), b =rnorm(201:300))
xy <- data.frame(x = c(1:100), y =c(sin(1):sin(270)))
#p1 <- ggplot(data = ab, aes(x = a, y = b)) + geom_point(size = 3, color = "blue")
p1 <- ggplot(ab, aes(x=a,y=b, fill="#4B92DB")) +
geom_point(stat="identity") +
labs(x="a", y="b") +
scale_fill_identity(name="", guide="legend", labels=c("b")) +
scale_y_continuous(labels=dollar, expand=c(0,0)) #+
# theme(axis.text.x = element_text(angle = 90, hjust = 1),
#       axis.text.y = element_text(colour="#4B92DB"),
#       legend.position="bottom")
p2 <- ggplot(xy, aes(x=x, y=y, colour="red")) +
geom_line(size=1) +
labs(x="x", y="y") + expand_limits(y=0) +
scale_y_continuous(labels=comma, expand=c(0,0)) #+
# scale_colour_manual(name = '',values =c("red","green"), labels = c("Number of Stones"))+
# theme(axis.text.y = element_text(colour = "red")) +
# theme(panel.background = element_rect(fill = NA),
#       panel.grid.major = element_blank(),
#       panel.grid.minor = element_blank(),
#       panel.border = element_rect(fill=NA,colour="grey50"),
#       legend.position="bottom")
# extract gtable
g1 <- ggplot_gtable(ggplot_build(p1))
g2 <- ggplot_gtable(ggplot_build(p2))
pp <- c(subset(g1$layout, name == "panel", se = t:r))
g <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t,
pp$l, pp$b, pp$l)
# axis tweaks
ia <- which(g2$layout$name == "axis-l")
ga <- g2$grobs[[ia]]
ax <- ga$children[[2]]
ax$widths <- rev(ax$widths)
ax$grobs <- rev(ax$grobs)
ax$grobs[[1]]$x <- ax$grobs[[1]]$x - unit(1, "npc") + unit(0.15, "cm")
g <- gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
g <- gtable_add_grob(g, ax, pp$t, length(g$widths) - 1, pp$b)
# draw it
# extract legend
leg1 <- g1$grobs[[which(g1$layout$name == "guide-box")]]
leg2 <- g2$grobs[[which(g2$layout$name == "guide-box")]]
g$grobs[[which(g$layout$name == "guide-box")]] <-
gtable:::cbind_gtable(leg1, leg2, "first")
grid.draw(g)
library(ggplot2)
library(gtable)
library(grid)
library(data.table)
library(scales)
grid.newpage()
dt.diamonds <- as.data.table(diamonds)
d1 <- dt.diamonds[,list(revenue = sum(price),
stones = length(price)),
by=clarity]
setkey(d1, clarity)
ab <- data.frame(a = c(1:100), b =rnorm(201:300))
xy <- data.frame(x = c(1:100), y =c(sin(1):sin(270)))
#p1 <- ggplot(data = ab, aes(x = a, y = b)) + geom_point(size = 3, color = "blue")
p1 <- ggplot(ab, aes(x=a,y=b, fill="#4B92DB")) +
geom_point(stat="identity") +
labs(x="a", y="b") +
#scale_fill_identity(name="", guide="legend", labels=c("b")) +
scale_y_continuous(labels=dollar, expand=c(0,0)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.y = element_text(colour="#4B92DB"),
legend.position="bottom")
#p2 <- ggplot(data = xy, aes(x = x, y = y)) + geom_line(stat ="identity", color = "green")
# p1 <- ggplot(d1, aes(x=clarity,y=revenue, fill="#4B92DB")) +
#   geom_bar(stat="identity") +
#   labs(x="clarity", y="revenue") +
#   scale_fill_identity(name="", guide="legend", labels=c("Revenue")) +
#   scale_y_continuous(labels=dollar, expand=c(0,0)) +
#   theme(axis.text.x = element_text(angle = 90, hjust = 1),
#         axis.text.y = element_text(colour="#4B92DB"),
#         legend.position="bottom")
p2 <- ggplot(xy, aes(x=x, y=y, colour="red")) +
geom_line(size=1) +
labs(x="x", y="y") + expand_limits(y=0) +
scale_y_continuous(labels=comma, expand=c(0,0)) +
#scale_colour_manual(name = '',values =c("red","green"), labels = c("Number of Stones"))+
theme(axis.text.y = element_text(colour = "red")) +
theme(panel.background = element_rect(fill = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(fill=NA,colour="grey50"),
legend.position="bottom")
# extract gtable
g1 <- ggplot_gtable(ggplot_build(p1))
g2 <- ggplot_gtable(ggplot_build(p2))
pp <- c(subset(g1$layout, name == "panel", se = t:r))
g <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t,
pp$l, pp$b, pp$l)
# axis tweaks
ia <- which(g2$layout$name == "axis-l")
ga <- g2$grobs[[ia]]
ax <- ga$children[[2]]
ax$widths <- rev(ax$widths)
ax$grobs <- rev(ax$grobs)
ax$grobs[[1]]$x <- ax$grobs[[1]]$x - unit(1, "npc") + unit(0.15, "cm")
g <- gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
g <- gtable_add_grob(g, ax, pp$t, length(g$widths) - 1, pp$b)
# draw it
# extract legend
leg1 <- g1$grobs[[which(g1$layout$name == "guide-box")]]
leg2 <- g2$grobs[[which(g2$layout$name == "guide-box")]]
g$grobs[[which(g$layout$name == "guide-box")]] <-
gtable:::cbind_gtable(leg1, leg2, "first")
grid.draw(g)
library(ggplot2)
library(gtable)
library(grid)
library(data.table)
library(scales)
grid.newpage()
dt.diamonds <- as.data.table(diamonds)
d1 <- dt.diamonds[,list(revenue = sum(price),
stones = length(price)),
by=clarity]
setkey(d1, clarity)
ab <- data.frame(a = c(1:100), b =rnorm(201:300))
xy <- data.frame(x = c(1:100), y =c(sin(1):sin(270)))
#p1 <- ggplot(data = ab, aes(x = a, y = b)) + geom_point(size = 3, color = "blue")
p1 <- ggplot(ab, aes(x=a,y=b, fill="#4B92DB")) +
geom_point(stat="identity") +
labs(x="a", y="b") +
scale_fill_identity(name="", guide="legend", labels=c("b")) +
scale_y_continuous(labels=dollar, expand=c(0,0)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.y = element_text(colour="#4B92DB"),
legend.position="bottom")
#p2 <- ggplot(data = xy, aes(x = x, y = y)) + geom_line(stat ="identity", color = "green")
# p1 <- ggplot(d1, aes(x=clarity,y=revenue, fill="#4B92DB")) +
#   geom_bar(stat="identity") +
#   labs(x="clarity", y="revenue") +
#   scale_fill_identity(name="", guide="legend", labels=c("Revenue")) +
#   scale_y_continuous(labels=dollar, expand=c(0,0)) +
#   theme(axis.text.x = element_text(angle = 90, hjust = 1),
#         axis.text.y = element_text(colour="#4B92DB"),
#         legend.position="bottom")
p2 <- ggplot(xy, aes(x=x, y=y, colour="red")) +
geom_line(size=1) +
labs(x="x", y="y") + expand_limits(y=0) +
scale_y_continuous(labels=comma, expand=c(0,0)) +
scale_colour_manual(name = '',values =c("red","green"), labels = c("Number of Stones"))+
theme(axis.text.y = element_text(colour = "red")) +
theme(panel.background = element_rect(fill = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(fill=NA,colour="grey50"),
legend.position="bottom")
# extract gtable
g1 <- ggplot_gtable(ggplot_build(p1))
g2 <- ggplot_gtable(ggplot_build(p2))
pp <- c(subset(g1$layout, name == "panel", se = t:r))
g <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t,
pp$l, pp$b, pp$l)
# axis tweaks
ia <- which(g2$layout$name == "axis-l")
ga <- g2$grobs[[ia]]
ax <- ga$children[[2]]
ax$widths <- rev(ax$widths)
ax$grobs <- rev(ax$grobs)
ax$grobs[[1]]$x <- ax$grobs[[1]]$x - unit(1, "npc") + unit(0.15, "cm")
g <- gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
g <- gtable_add_grob(g, ax, pp$t, length(g$widths) - 1, pp$b)
# draw it
# extract legend
leg1 <- g1$grobs[[which(g1$layout$name == "guide-box")]]
leg2 <- g2$grobs[[which(g2$layout$name == "guide-box")]]
g$grobs[[which(g$layout$name == "guide-box")]] <-
gtable:::cbind_gtable(leg1, leg2, "first")
grid.draw(g)
g2
library(ggplot2)
library(gtable)
library(grid)
library(data.table)
library(scales)
grid.newpage()
dt.diamonds <- as.data.table(diamonds)
d1 <- dt.diamonds[,list(revenue = sum(price),
stones = length(price)),
by=clarity]
setkey(d1, clarity)
ab <- data.frame(a = c(1:100), b =rnorm(201:300))
xy <- data.frame(x = c(1:100), y =c(sin(1):sin(270)))
#p1 <- ggplot(data = ab, aes(x = a, y = b)) + geom_point(size = 3, color = "blue")
p1 <- ggplot(ab, aes(x=a,y=b, fill="#4B92DB")) +
geom_point(stat="identity") +
labs(x="a", y="b") +
scale_fill_identity(name="", guide="legend", labels=c("b")) +
scale_y_continuous(labels=dollar, expand=c(0,0)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.y = element_text(colour="#4B92DB"),
legend.position="bottom")
#p2 <- ggplot(data = xy, aes(x = x, y = y)) + geom_line(stat ="identity", color = "green")
# p1 <- ggplot(d1, aes(x=clarity,y=revenue, fill="#4B92DB")) +
#   geom_bar(stat="identity") +
#   labs(x="clarity", y="revenue") +
#   scale_fill_identity(name="", guide="legend", labels=c("Revenue")) +
#   scale_y_continuous(labels=dollar, expand=c(0,0)) +
#   theme(axis.text.x = element_text(angle = 90, hjust = 1),
#         axis.text.y = element_text(colour="#4B92DB"),
#         legend.position="bottom")
p2 <- ggplot(xy, aes(x=x, y=y, colour="red")) +
geom_line(size=1) +
labs(x="x", y="y") + expand_limits(y=0) +
scale_y_continuous(labels=comma, expand=c(0,0)) +
scale_colour_manual(name = '',values =c("red","green"), labels = c("Number of Stones"))+
theme(axis.text.y = element_text(colour = "red")) +
theme(panel.background = element_rect(fill = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(fill=NA,colour="grey50"),
legend.position="bottom")
# extract gtable
g1 <- ggplot_gtable(ggplot_build(p1))
g2 <- ggplot_gtable(ggplot_build(p2))
pp <- c(subset(g1$layout, name == "panel", se = t:r))
g <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t,pp$l, pp$b, pp$l)
# axis tweaks
ia <- which(g2$layout$name == "axis-l")
ga <- g2$grobs[[ia]]
ax <- ga$children[[2]]
ax$widths <- rev(ax$widths)
ax$grobs <- rev(ax$grobs)
ax$grobs[[1]]$x <- ax$grobs[[1]]$x - unit(1, "npc") + unit(0.15, "cm")
g <- gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
g <- gtable_add_grob(g, ax, pp$t, length(g$widths) - 1, pp$b)
# draw it
# extract legend
leg1 <- g1$grobs[[which(g1$layout$name == "guide-box")]]
leg2 <- g2$grobs[[which(g2$layout$name == "guide-box")]]
g$grobs[[which(g$layout$name == "guide-box")]] <-
gtable:::cbind_gtable(leg1, leg2, "first")
grid.draw(g)
ia
gA
ga
ax$widths
g2
ga
ia <- which(g2$layout$name == "axis-l")
ga <- g2$grobs[[ia]]
ax <- ga$children[[2]]
ax$widths <- rev(ax$widths)
ax$grobs <- rev(ax$grobs)
ax$grobs[[1]]$x <- ax$grobs[[1]]$x - unit(1, "npc") + unit(0.15, "cm")
g <- gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
g <- gtable_add_grob(g, ax, pp$t, length(g$widths) - 1, pp$b)
# draw it
grid.draw(g)
abc
ggplot(data = abc, aes(x = as.factor(a), y = b)) + geom_line()
data.frame(date=Sys.Date() + 0:13,
counts=1:14)
hist <- transform(hist, weekday=factor(weekdays(date),
levels=c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')))
transform(hist, weekday=factor(weekdays(date),levels=c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')))
hist <- data.frame(date=Sys.Date() + 0:13,
counts=1:14)
hist <- transform(hist, weekday=factor(weekdays(date),
levels=c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')))
hist
ggplot(hist, aes(x=weekday, y=counts)) + geom_point(stat='summary', fun.y=sum)
ggplot(hist, aes(x=weekday, y=counts, group = 1)) + geom_point(stat='summary', fun.y=sum)
ggplot(hist, aes(x=weekday, y=counts, group = 1)) + geom_point(stat='summary', fun.y=sum) + stat_summary(fun.y=sum, geom="line")
ggplot(hist, aes(x=weekday, y=counts, group = 1)) + geom_point( geom="line")
