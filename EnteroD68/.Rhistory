train.base <- train.df[,c(1:3,8)]
train.features <- train.df[,c(4:7)]
period.pca.trans <- preProcess(train.features, method = 'pca')
train.pca <- predict(period.pca.trans, train.features)
# if(i==26) {
#   wss.period <- (nrow(train.pca)-1)*sum(apply(train.pca, 2, var))
#   max.clusters <- 20
#   for (j in 2:max.clusters) wss.period[j] <- sum(kmeans(train.pca, centers=j)$withinss)
#   # plot(1:max.clusters, wss.period, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
#   k.period <- min(which(sapply(2:length(wss.period), function(x) (wss.period[x-1] - wss.period[x])/wss.period[x-1]) < 0)) - 1
# }
k.period <- 15
k.fit.period <- kmeans(train.pca, k.period, 100)
train.clustered <- data.frame(train.base, train.pca, Cluster = k.fit.period$cluster)
train.clustered <- merge(train.clustered, with(data.frame(train.clustered, Frequency = 1), aggregate(Frequency~YearWeek+Cluster, FUN=sum)), by=c('YearWeek','Cluster'))
train.clustered <- merge(train.clustered, with(data.frame(train.clustered, Count = 1), aggregate(Count~YearWeek, FUN=sum)), by='YearWeek')
train.clustered$Density <- with(train.clustered, Frequency/Count)
period.densities <- unique(train.clustered[train.clustered$YearWeek==max(train.period), c('Cluster','Density')])
period.densities
data.frame(Cluster = seq(1, k.period, 1)[!(seq(1, k.period, 1) %in% period.densities$Cluster)], Density = 0)
seq(1, k.period, 1)[!(seq(1, k.period, 1) %in% period.densities$Cluster)]
left.out <- seq(1, k.period, 1)[!(seq(1, k.period, 1) %in% period.densities$Cluster)]
left.out
nrow(left.out)
length(left.out)
rolling.summary <- c()
for(i in 26:length(year.weeks$YearWeek)) {
print(i)
train.period <- as.character(year.weeks[year.weeks$ywIndex<=i & year.weeks$ywIndex>=(i-25), 'YearWeek'])
train.df <- cp.clean.ts[cp.clean.ts$YearWeek %in% train.period, ]
#   pre-process the data in this period's training set
train.base <- train.df[,c(1:3,8)]
train.features <- train.df[,c(4:7)]
period.pca.trans <- preProcess(train.features, method = 'pca')
train.pca <- predict(period.pca.trans, train.features)
# if(i==26) {
#   wss.period <- (nrow(train.pca)-1)*sum(apply(train.pca, 2, var))
#   max.clusters <- 20
#   for (j in 2:max.clusters) wss.period[j] <- sum(kmeans(train.pca, centers=j)$withinss)
#   # plot(1:max.clusters, wss.period, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
#   k.period <- min(which(sapply(2:length(wss.period), function(x) (wss.period[x-1] - wss.period[x])/wss.period[x-1]) < 0)) - 1
# }
k.period <- 15
k.fit.period <- kmeans(train.pca, k.period, 100)
train.clustered <- data.frame(train.base, train.pca, Cluster = k.fit.period$cluster)
train.clustered <- merge(train.clustered, with(data.frame(train.clustered, Frequency = 1), aggregate(Frequency~YearWeek+Cluster, FUN=sum)), by=c('YearWeek','Cluster'))
train.clustered <- merge(train.clustered, with(data.frame(train.clustered, Count = 1), aggregate(Count~YearWeek, FUN=sum)), by='YearWeek')
train.clustered$Density <- with(train.clustered, Frequency/Count)
period.densities <- unique(train.clustered[train.clustered$YearWeek==max(train.period), c('Cluster','Density')])
left.out <- seq(1, k.period, 1)[!(seq(1, k.period, 1) %in% period.densities$Cluster)]
if(length(left.out) > 0) {
period.densities <- rbind(period.densities, data.frame(Cluster = left.out, Density = 0))
}
period.summary <- do.call(rbind, lapply(1:k.period, function(x) data.frame(YearWeek = max(train.period), Cluster = x, Density = period.densities[period.densities$Cluster==x, 'Density'], Center = sqrt(sum(k.fit.period$centers[x, ]^2)), WithinSS = k.fit.period$withinss[x])))
rolling.summary <- rbind(rolling.summary, period.summary)
}
head(rolling.summary)
length(year.weeks)
year.weeks
year.weeks[year.weeks$ywIndex >= 26, 'YearWeek']
length(year.weeks[year.weeks$ywIndex >= 26, 'YearWeek'])
162*15
head(rolling.summary)
ggplot(rolling.summary, aes(x=YearWeek, y=Density, group=as.factor(Cluster), color=as.factor(Cluster))) + geom_line()
ggplot(rolling.summary, aes(x=YearWeek, y=Density, group=as.factor(Cluster))) + geom_line() + facet_wrap(~Cluster)
ggplot(rolling.summary, aes(x=YearWeek, y=Center, group=as.factor(Cluster))) + geom_line() + facet_wrap(~Cluster)
ggplot(rolling.summary, aes(x=YearWeek, y=WithinSS, group=as.factor(Cluster))) + geom_line() + facet_wrap(~Cluster)
head(s)
head(cp.median)
head(cp.spread)
head(cp.sequence)
a <- merge(cp.spread, cp.sequence, by='RunDataId')
head(a)
head(a)
a$SequenceFlag <- NA
a[a$RunDataId %in% cp.sequence[grep('^HRV4$|^HRV4, HRV1, HRV2, HRV3$|^HRv4, HRV1, HRV2$|^HRV4, HRV1$', cp.sequence$Sequence), 'RunDataId'], 'SequenceFlag'] <- 'Positive'
a[is.na(a$SequenceFlag), 'SequenceFlag'] <- 'Negative'
head(a)
head(a)
a$Record <- 1
ggplot(a, aes(x=Date, y=Record, fill=SequenceFlag)) + geom_bar(stat='identity')
head(calendar.df)
merge(a, unique(calendar.df[,c('Date','YearWeek')]), by='Date')
a <- merge(a, unique(calendar.df[,c('Date','YearWeek')]), by='Date')
ggplot(a, aes(x=YearWeek, y=Record, fill=SequenceFlag)) + geom_bar(stat='identity')
ggplot(a, aes(x=YearWeek, y=Record, fill=SequenceFlag)) + geom_bar(stat='identity') + scale_x_discrete(breaks = as.character(unique(a$YearWeek))[as.character(unique(a$YearWeek))][seq(1, length(as.character(unique(a$YearWeek))), 12)])
as.character(unique(a$YearWeek))[as.character(unique(a$YearWeek))][seq(1, length(as.character(unique(a$YearWeek))), 12)]
as.character(unique(a$YearWeek))[as.character(unique(a$YearWeek))]
as.character(unique(a$YearWeek))
as.character(unique(a$YearWeek))[order(as.character(unique(a$YearWeek)))]
ggplot(a, aes(x=YearWeek, y=Record, fill=SequenceFlag)) + geom_bar(stat='identity') + scale_x_discrete(breaks = as.character(unique(a$YearWeek))[order(as.character(unique(a$YearWeek)))][seq(1, length(as.character(unique(a$YearWeek))), 12)])
year.weeks
head(train.clustered)
i <- 60
train.period <- as.character(year.weeks[year.weeks$ywIndex<=i & year.weeks$ywIndex>=(i-25), 'YearWeek'])
train.df <- cp.clean.ts[cp.clean.ts$YearWeek %in% train.period, ]
#   pre-process the data in this period's training set
train.base <- train.df[,c(1:3,8)]
train.features <- train.df[,c(4:7)]
period.pca.trans <- preProcess(train.features, method = 'pca')
train.pca <- predict(period.pca.trans, train.features)
# if(i==26) {
#   wss.period <- (nrow(train.pca)-1)*sum(apply(train.pca, 2, var))
#   max.clusters <- 20
#   for (j in 2:max.clusters) wss.period[j] <- sum(kmeans(train.pca, centers=j)$withinss)
#   # plot(1:max.clusters, wss.period, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
#   k.period <- min(which(sapply(2:length(wss.period), function(x) (wss.period[x-1] - wss.period[x])/wss.period[x-1]) < 0)) - 1
# }
k.period <- 15
k.fit.period <- kmeans(train.pca, k.period, 100)
train.clustered <- data.frame(train.base, train.pca, Cluster = k.fit.period$cluster)
train.clustered <- merge(train.clustered, with(data.frame(train.clustered, Frequency = 1), aggregate(Frequency~YearWeek+Cluster, FUN=sum)), by=c('YearWeek','Cluster'))
train.clustered <- merge(train.clustered, with(data.frame(train.clustered, Count = 1), aggregate(Count~YearWeek, FUN=sum)), by='YearWeek')
train.clustered$Density <- with(train.clustered, Frequency/Count)
period.densities <- unique(train.clustered[train.clustered$YearWeek==max(train.period), c('Cluster','Density')])
left.out <- seq(1, k.period, 1)[!(seq(1, k.period, 1) %in% period.densities$Cluster)]
if(length(left.out) > 0) {
period.densities <- rbind(period.densities, data.frame(Cluster = left.out, Density = 0))
}
period.summary <- do.call(rbind, lapply(1:k.period, function(x) data.frame(YearWeek = max(train.period), Cluster = x, Density = period.densities[period.densities$Cluster==x, 'Density'], Center = sqrt(sum(k.fit.period$centers[x, ]^2)), WithinSS = k.fit.period$withinss[x])))
head(train.clustered)
as.character(year.weeks[year.weeks$ywIndex<=i & year.weeks$ywIndex>=(i-25), 'YearWeek'])
i <- 58
train.period <- as.character(year.weeks[year.weeks$ywIndex<=i & year.weeks$ywIndex>=(i-25), 'YearWeek'])
train.period
i <- 57
train.period <- as.character(year.weeks[year.weeks$ywIndex<=i & year.weeks$ywIndex>=(i-25), 'YearWeek'])
train.df <- cp.clean.ts[cp.clean.ts$YearWeek %in% train.period, ]
#   pre-process the data in this period's training set
train.base <- train.df[,c(1:3,8)]
train.features <- train.df[,c(4:7)]
period.pca.trans <- preProcess(train.features, method = 'pca')
train.pca <- predict(period.pca.trans, train.features)
# if(i==26) {
#   wss.period <- (nrow(train.pca)-1)*sum(apply(train.pca, 2, var))
#   max.clusters <- 20
#   for (j in 2:max.clusters) wss.period[j] <- sum(kmeans(train.pca, centers=j)$withinss)
#   # plot(1:max.clusters, wss.period, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
#   k.period <- min(which(sapply(2:length(wss.period), function(x) (wss.period[x-1] - wss.period[x])/wss.period[x-1]) < 0)) - 1
# }
k.period <- 15
k.fit.period <- kmeans(train.pca, k.period, 100)
train.clustered <- data.frame(train.base, train.pca, Cluster = k.fit.period$cluster)
train.clustered <- merge(train.clustered, with(data.frame(train.clustered, Frequency = 1), aggregate(Frequency~YearWeek+Cluster, FUN=sum)), by=c('YearWeek','Cluster'))
train.clustered <- merge(train.clustered, with(data.frame(train.clustered, Count = 1), aggregate(Count~YearWeek, FUN=sum)), by='YearWeek')
train.clustered$Density <- with(train.clustered, Frequency/Count)
period.densities <- unique(train.clustered[train.clustered$YearWeek==max(train.period), c('Cluster','Density')])
left.out <- seq(1, k.period, 1)[!(seq(1, k.period, 1) %in% period.densities$Cluster)]
if(length(left.out) > 0) {
period.densities <- rbind(period.densities, data.frame(Cluster = left.out, Density = 0))
}
period.summary <- do.call(rbind, lapply(1:k.period, function(x) data.frame(YearWeek = max(train.period), Cluster = x, Density = period.densities[period.densities$Cluster==x, 'Density'], Center = sqrt(sum(k.fit.period$centers[x, ]^2)), WithinSS = k.fit.period$withinss[x])))
head(train.clustered)
k.fit.period$centeres
k.fit.period$centers
data.frame(k.fit.period$centers)
rownames(data.frame(k.fit.period$centers))
data.frame(Cluster = rownames(data.frame(k.fit.period$centers)), data.frame(k.fit.period$centers))
cluster.centers <- data.frame(Cluster = rownames(data.frame(k.fit.period$centers)), data.frame(k.fit.period$centers))
head(train.clustered)
head(cluster.centers)
train.clustered[,colnames(train.clustered)[grep('^PC', colnames(train.clustered))]]
head(cluster.centers)
sqrt(sum(train.clustered[,colnames(train.clustered)[grep('^PC', colnames(train.clustered))]]^2))
train.clustered[,colnames(train.clustered)[grep('^PC', colnames(train.clustered))]]^2)
train.clustered[,colnames(train.clustered)[grep('^PC', colnames(train.clustered))]]^2
apply(train.clustered[,colnames(train.clustered)[grep('^PC', colnames(train.clustered))]]^2, 1, sum)
b <- apply(train.clustered[,colnames(train.clustered)[grep('^PC', colnames(train.clustered))]]^2, 1, sum)
length(b)
train.clustered$vectorPCA <- apply(train.clustered[,colnames(train.clustered)[grep('^PC', colnames(train.clustered))]]^2, 1, sum)
cluster.centers
cluster.centers[,c(2:4)]
cluster.centers[,c(2:4)]^2
apply(cluster.centers[,c(2:4)]^2, 1, sum)
head(train.clustered)
cluster.centers$clusterPCA <- apply(cluster.centers[,c(2:4)]^2, 1, sum)
merge(train.clustered, cluster.centers, by='Cluster')
a <- merge(train.clustered, cluster.centers, by='Cluster')
head(a)
ggplot(a, aes(x=clusterPCA, y=vectorPCA, color=as.factor(Cluster))) + geom_point()
head(train.clustered)
train.period
test.period <- as.character(year.weeks[year.weeks$ywIndex>i & year.weeks$ywIndex<=(i+3), 'YearWeek'])
test.period
test.df <- cp.clean.ts[cp.clean.ts$YearWeek %in% test.period, ]
test.base <- test.df[,c(1:3,8)]
test.features <- test.df[,c(4:7)]
predict.knn3(k.fit.period, newdata = test.features)
test.pca <- predict(period.pca.trans, test.features)
head(train.clustered)
train.clustered <- data.frame(train.base, train.pca, Cluster = k.fit.period$cluster)
head(train.clustered)
head(train.clustered)
train.clustered$Cluster <- as.factor(train.clustered$Cluster)
train(Cluster~., data =train.clustered[,colnames(train.clustered)[grep('^PCA|Cluster',colnames(train.clustered))]], method='knn')
train.clustered[,colnames(train.clustered)[grep('^PCA|Cluster',colnames(train.clustered))]]
train.clustered[,colnames(train.clustered)[grep('^PC|Cluster',colnames(train.clustered))]]
train(Cluster~., data=train.clustered[,colnames(train.clustered)[grep('^PC|Cluster',colnames(train.clustered))]], method='knn')
knn.fit <- train(Cluster~., data=train.clustered[,colnames(train.clustered)[grep('^PC|Cluster',colnames(train.clustered))]], method='knn')
predict(knn.fit, newdata=test.pca)
test.clustered <- data.frame(test.base, test.pca, Cluster = predict(knn.fit, newdata=test.pca))
head(train.clustered)
head(test.clustered)
merge(with(data.frame(train.clustered, ClusterFrequency = 1), aggregate(ClusterFrequency~YearWeek+Cluster, FUN=sum)), with(data.frame(train.clustered, RunFrequency = 1), aggregate(ClusterFrequency~YearWeek, FUN=sum)))
with(data.frame(train.clustered, ClusterFrequency = 1), aggregate(ClusterFrequency~YearWeek+Cluster, FUN=sum))
merge(with(data.frame(train.clustered, ClusterFrequency = 1), aggregate(ClusterFrequency~YearWeek+Cluster, FUN=sum)), with(data.frame(train.clustered, RunFrequency = 1), aggregate(ClusterFrequency~YearWeek, FUN=sum)), by='YearWeek')
with(merge(with(data.frame(train.clustered, ClusterFrequency = 1), aggregate(ClusterFrequency~YearWeek+Cluster, FUN=sum)), with(data.frame(train.clustered, RunFrequency = 1), aggregate(RunFrequency~YearWeek, FUN=sum)), by='YearWeek'), ClusterFrequency/RunFrequency)
train.clustered$Density <- with(merge(with(data.frame(train.clustered, ClusterFrequency = 1), aggregate(ClusterFrequency~YearWeek+Cluster, FUN=sum)), with(data.frame(train.clustered, RunFrequency = 1), aggregate(RunFrequency~YearWeek, FUN=sum)), by='YearWeek'), ClusterFrequency/RunFrequency)
merge(with(data.frame(train.clustered, ClusterFrequency = 1), aggregate(ClusterFrequency~YearWeek+Cluster, FUN=sum)), with(data.frame(train.clustered, RunFrequency = 1), aggregate(RunFrequency~YearWeek, FUN=sum)), by='YearWeek')
head(merge(with(data.frame(train.clustered, ClusterFrequency = 1), aggregate(ClusterFrequency~YearWeek+Cluster, FUN=sum)), with(data.frame(train.clustered, RunFrequency = 1), aggregate(RunFrequency~YearWeek, FUN=sum)), by='YearWeek'))
merge(train.clustered, merge(with(data.frame(train.clustered, ClusterFrequency = 1), aggregate(ClusterFrequency~YearWeek+Cluster, FUN=sum)), with(data.frame(train.clustered, RunFrequency = 1), aggregate(RunFrequency~YearWeek, FUN=sum)), by='YearWeek'), by=c('YearWeek','Cluster'))
merge(with(data.frame(train.clustered, ClusterFrequency = 1), aggregate(ClusterFrequency~YearWeek+Cluster, FUN=sum)), with(data.frame(train.clustered, RunFrequency = 1), aggregate(RunFrequency~YearWeek, FUN=sum)), by='YearWeek')
agg.clustered <- rbind(train.clustered, test.clustered)
agg.density <- merge(with(data.frame(agg.clustered, ClusterFrequency = 1), aggregate(ClusterFrequency~YearWeek+Cluster, FUN=sum)), with(data.frame(agg.clustered, RunFrequency = 1), aggregate(RunFrequency~YearWeek, FUN=sum)), by='YearWeek')
head(train.den  )
train.density <- merge(with(data.frame(train.clustered, ClusterFrequency = 1), aggregate(ClusterFrequency~YearWeek+Cluster, FUN=sum)), with(data.frame(train.clustered, RunFrequency = 1), aggregate(RunFrequency~YearWeek, FUN=sum)), by='YearWeek')
agg.clustered <- rbind(train.clustered, test.clustered)
agg.density <- merge(with(data.frame(agg.clustered, ClusterFrequency = 1), aggregate(ClusterFrequency~YearWeek+Cluster, FUN=sum)), with(data.frame(agg.clustered, RunFrequency = 1), aggregate(RunFrequency~YearWeek, FUN=sum)), by='YearWeek')
head(train.density)
head(agg.dn)
head(agg.density)
head(train.clustered)
rm(train.density)
rm(agg.clustered)
rm(agg.density)
head(train.clustered)
with(data.frame(train.clustered, Record = 1), aggregate(Record~Cluster, FUN=sum))
with(data.frame(train.clustered, Record = 1), aggregate(Record~Cluster, FUN=sum))/sum(with(data.frame(train.clustered, Record=1)$Record))
with(data.frame(train.clustered, Record=1)$Record)
data.frame(train.clustered, Record=1)$Record
sum(data.frame(train.clustered, Record=1)$Record)
with(data.frame(train.clustered, Record = 1), aggregate(Record~Cluster, FUN=sum))/sum(data.frame(train.clustered, Record=1)$Record)
with(data.frame(train.clustered, Record = 1), aggregate(Record~Cluster, FUN=sum))$Record/sum(data.frame(train.clustered, Record=1)$Record)
with(data.frame(train.clustered, Record = 1), aggregate(Record~Cluster, FUN=sum))$Record
with(data.frame(train.clustered, Record = 1), aggregate(Record~Cluster, FUN=sum))$Record
with(data.frame(train.clustered, Record = 1), aggregate(Record~Cluster, FUN=sum))$Record
with(data.frame(train.clustered, Record = 1), aggregate(Record~Cluster, FUN=sum))$Record/sum(data.frame(train.clustered, Record=1)$Record)
with(data.frame(train.clustered, Record = 1), aggregate(Record~Cluster, FUN=sum))$Record/sum(data.frame(train.clustered, Record=1)$Record)
train.density <- with(data.frame(train.clustered, Record = 1), aggregate(Record~Cluster, FUN=sum))
train.density
train.density$Density <- train.density$Record/sum(train.density$Record)
head(train.density)
agg.clustered <- rbind(train.clustered, test.clustered)
agg.density <- with(data.frame(agg.clustered, Record = 1), aggregate(Record~Cluster, FUN=sum))
agg.density$Density <- agg.density$Record/sum(agg.density$Record)
head(train.density)
head(agg.density)
a <- merge(train.density, agg.density, by='Cluster')
head(a)
train.density$Key <- 'train'
agg.density$Key <- 'agg'
a <- rbind(train.density, agg.density)
head(a)
ggplot(a, aes(x=Cluster, y=Density, fill=Key)) + geom_bar(stat='identity', position='dodge')
max(test.period)
min(test.period)
max(train.period)
i <- 42 # 57 (this is the first onset of big EVD68 in 2014)
k.period <- 15
train.period <- as.character(year.weeks[year.weeks$ywIndex<=i & year.weeks$ywIndex>=(i-25), 'YearWeek'])
train.df <- cp.clean.ts[cp.clean.ts$YearWeek %in% train.period, ]
train.base <- train.df[,c(1:3,8)]
train.features <- train.df[,c(4:7)]
period.pca.trans <- preProcess(train.features, method = 'pca')
train.pca <- predict(period.pca.trans, train.features)
k.fit.period <- kmeans(train.pca, k.period, 100)
train.clustered <- data.frame(train.base, train.pca, Cluster = k.fit.period$cluster)
train.clustered$Cluster <- as.factor(train.clustered$Cluster)
knn.fit <- train(Cluster~., data=train.clustered[,colnames(train.clustered)[grep('^PC|Cluster',colnames(train.clustered))]], method='knn')
test.period <- as.character(year.weeks[year.weeks$ywIndex>i & year.weeks$ywIndex<=(i+3), 'YearWeek'])
test.df <- cp.clean.ts[cp.clean.ts$YearWeek %in% test.period, ]
test.base <- test.df[,c(1:3,8)]
test.features <- test.df[,c(4:7)]
test.pca <- predict(period.pca.trans, test.features)
test.clustered <- data.frame(test.base, test.pca, Cluster = predict(knn.fit, newdata=test.pca))
# method 1: see how the predicted values of the next week alter the cluster density
train.density <- with(data.frame(train.clustered, Record = 1), aggregate(Record~Cluster, FUN=sum))
train.density$Density <- train.density$Record/sum(train.density$Record)
train.density$Key <- 'train'
agg.clustered <- rbind(train.clustered, test.clustered)
agg.density <- with(data.frame(agg.clustered, Record = 1), aggregate(Record~Cluster, FUN=sum))
agg.density$Density <- agg.density$Record/sum(agg.density$Record)
agg.density$Key <- 'agg'
a <- rbind(train.density, agg.density)
ggplot(a, aes(x=Cluster, y=Density, fill=Key)) + geom_bar(stat='identity', position='dodge')
max(test.period)
i <- 42 # 57 (this is the first onset of big EVD68 in 2014)
k.period <- 15
train.period <- as.character(year.weeks[year.weeks$ywIndex<=i & year.weeks$ywIndex>=(i-25), 'YearWeek'])
train.df <- cp.clean.ts[cp.clean.ts$YearWeek %in% train.period, ]
train.base <- train.df[,c(1:3,8)]
train.features <- train.df[,c(4:7)]
period.pca.trans <- preProcess(train.features, method = 'pca')
train.pca <- predict(period.pca.trans, train.features)
k.fit.period <- kmeans(train.pca, k.period, 100)
train.clustered <- data.frame(train.base, train.pca, Cluster = k.fit.period$cluster)
train.clustered$Cluster <- as.factor(train.clustered$Cluster)
knn.fit <- train(Cluster~., data=train.clustered[,colnames(train.clustered)[grep('^PC|Cluster',colnames(train.clustered))]], method='knn')
test.period <- as.character(year.weeks[year.weeks$ywIndex>i & year.weeks$ywIndex<=(i+3), 'YearWeek'])
test.df <- cp.clean.ts[cp.clean.ts$YearWeek %in% test.period, ]
test.base <- test.df[,c(1:3,8)]
test.features <- test.df[,c(4:7)]
test.pca <- predict(period.pca.trans, test.features)
test.clustered <- data.frame(test.base, test.pca, Cluster = predict(knn.fit, newdata=test.pca))
# method 1: see how the predicted values of the next week alter the cluster density
train.density <- with(data.frame(train.clustered, Record = 1), aggregate(Record~Cluster, FUN=sum))
train.density$Density <- train.density$Record/sum(train.density$Record)
train.density$Key <- 'train'
agg.clustered <- rbind(train.clustered, test.clustered)
agg.density <- with(data.frame(agg.clustered, Record = 1), aggregate(Record~Cluster, FUN=sum))
agg.density$Density <- agg.density$Record/sum(agg.density$Record)
agg.density$Key <- 'agg'
a <- rbind(train.density, agg.density)
ggplot(a, aes(x=Cluster, y=Density, fill=Key)) + geom_bar(stat='identity', position='dodge') + labs(title=paste('Delta in Cluster Density for Period Ending', max(test.period), sep=' '))
i <- 47 # 57 (this is the first onset of big EVD68 in 2014)
k.period <- 15
train.period <- as.character(year.weeks[year.weeks$ywIndex<=i & year.weeks$ywIndex>=(i-25), 'YearWeek'])
train.df <- cp.clean.ts[cp.clean.ts$YearWeek %in% train.period, ]
train.base <- train.df[,c(1:3,8)]
train.features <- train.df[,c(4:7)]
period.pca.trans <- preProcess(train.features, method = 'pca')
train.pca <- predict(period.pca.trans, train.features)
k.fit.period <- kmeans(train.pca, k.period, 100)
train.clustered <- data.frame(train.base, train.pca, Cluster = k.fit.period$cluster)
train.clustered$Cluster <- as.factor(train.clustered$Cluster)
knn.fit <- train(Cluster~., data=train.clustered[,colnames(train.clustered)[grep('^PC|Cluster',colnames(train.clustered))]], method='knn')
test.period <- as.character(year.weeks[year.weeks$ywIndex>i & year.weeks$ywIndex<=(i+3), 'YearWeek'])
test.df <- cp.clean.ts[cp.clean.ts$YearWeek %in% test.period, ]
test.base <- test.df[,c(1:3,8)]
test.features <- test.df[,c(4:7)]
test.pca <- predict(period.pca.trans, test.features)
test.clustered <- data.frame(test.base, test.pca, Cluster = predict(knn.fit, newdata=test.pca))
# method 1: see how the predicted values of the next week alter the cluster density
train.density <- with(data.frame(train.clustered, Record = 1), aggregate(Record~Cluster, FUN=sum))
train.density$Density <- train.density$Record/sum(train.density$Record)
train.density$Key <- 'train'
agg.clustered <- rbind(train.clustered, test.clustered)
agg.density <- with(data.frame(agg.clustered, Record = 1), aggregate(Record~Cluster, FUN=sum))
agg.density$Density <- agg.density$Record/sum(agg.density$Record)
agg.density$Key <- 'agg'
a <- rbind(train.density, agg.density)
ggplot(a, aes(x=Cluster, y=Density, fill=Key)) + geom_bar(stat='identity', position='dodge') + labs(title=paste('Delta in Cluster Density for Period Ending', max(test.period), sep=' '))
i <- 53 # 57 (this is the first onset of big EVD68 in 2014)
k.period <- 15
train.period <- as.character(year.weeks[year.weeks$ywIndex<=i & year.weeks$ywIndex>=(i-25), 'YearWeek'])
train.df <- cp.clean.ts[cp.clean.ts$YearWeek %in% train.period, ]
train.base <- train.df[,c(1:3,8)]
train.features <- train.df[,c(4:7)]
period.pca.trans <- preProcess(train.features, method = 'pca')
train.pca <- predict(period.pca.trans, train.features)
k.fit.period <- kmeans(train.pca, k.period, 100)
train.clustered <- data.frame(train.base, train.pca, Cluster = k.fit.period$cluster)
train.clustered$Cluster <- as.factor(train.clustered$Cluster)
knn.fit <- train(Cluster~., data=train.clustered[,colnames(train.clustered)[grep('^PC|Cluster',colnames(train.clustered))]], method='knn')
test.period <- as.character(year.weeks[year.weeks$ywIndex>i & year.weeks$ywIndex<=(i+3), 'YearWeek'])
test.df <- cp.clean.ts[cp.clean.ts$YearWeek %in% test.period, ]
test.base <- test.df[,c(1:3,8)]
test.features <- test.df[,c(4:7)]
test.pca <- predict(period.pca.trans, test.features)
test.clustered <- data.frame(test.base, test.pca, Cluster = predict(knn.fit, newdata=test.pca))
# method 1: see how the predicted values of the next week alter the cluster density
train.density <- with(data.frame(train.clustered, Record = 1), aggregate(Record~Cluster, FUN=sum))
train.density$Density <- train.density$Record/sum(train.density$Record)
train.density$Key <- 'train'
agg.clustered <- rbind(train.clustered, test.clustered)
agg.density <- with(data.frame(agg.clustered, Record = 1), aggregate(Record~Cluster, FUN=sum))
agg.density$Density <- agg.density$Record/sum(agg.density$Record)
agg.density$Key <- 'agg'
a <- rbind(train.density, agg.density)
ggplot(a, aes(x=Cluster, y=Density, fill=Key)) + geom_bar(stat='identity', position='dodge') + labs(title=paste('Delta in Cluster Density for Period Ending', max(test.period), sep=' '))
i <- 57 # 57 (this is the first onset of big EVD68 in 2014)
k.period <- 15
train.period <- as.character(year.weeks[year.weeks$ywIndex<=i & year.weeks$ywIndex>=(i-25), 'YearWeek'])
train.df <- cp.clean.ts[cp.clean.ts$YearWeek %in% train.period, ]
train.base <- train.df[,c(1:3,8)]
train.features <- train.df[,c(4:7)]
period.pca.trans <- preProcess(train.features, method = 'pca')
train.pca <- predict(period.pca.trans, train.features)
k.fit.period <- kmeans(train.pca, k.period, 100)
train.clustered <- data.frame(train.base, train.pca, Cluster = k.fit.period$cluster)
train.clustered$Cluster <- as.factor(train.clustered$Cluster)
knn.fit <- train(Cluster~., data=train.clustered[,colnames(train.clustered)[grep('^PC|Cluster',colnames(train.clustered))]], method='knn')
test.period <- as.character(year.weeks[year.weeks$ywIndex>i & year.weeks$ywIndex<=(i+3), 'YearWeek'])
test.df <- cp.clean.ts[cp.clean.ts$YearWeek %in% test.period, ]
test.base <- test.df[,c(1:3,8)]
test.features <- test.df[,c(4:7)]
test.pca <- predict(period.pca.trans, test.features)
test.clustered <- data.frame(test.base, test.pca, Cluster = predict(knn.fit, newdata=test.pca))
# method 1: see how the predicted values of the next week alter the cluster density
train.density <- with(data.frame(train.clustered, Record = 1), aggregate(Record~Cluster, FUN=sum))
train.density$Density <- train.density$Record/sum(train.density$Record)
train.density$Key <- 'train'
agg.clustered <- rbind(train.clustered, test.clustered)
agg.density <- with(data.frame(agg.clustered, Record = 1), aggregate(Record~Cluster, FUN=sum))
agg.density$Density <- agg.density$Record/sum(agg.density$Record)
agg.density$Key <- 'agg'
a <- rbind(train.density, agg.density)
ggplot(a, aes(x=Cluster, y=Density, fill=Key)) + geom_bar(stat='identity', position='dodge') + labs(title=paste('Delta in Cluster Density for Period Ending', max(test.period), sep=' '))
i <- 63 # 57 (this is the first onset of big EVD68 in 2014)
k.period <- 15
train.period <- as.character(year.weeks[year.weeks$ywIndex<=i & year.weeks$ywIndex>=(i-25), 'YearWeek'])
train.df <- cp.clean.ts[cp.clean.ts$YearWeek %in% train.period, ]
train.base <- train.df[,c(1:3,8)]
train.features <- train.df[,c(4:7)]
period.pca.trans <- preProcess(train.features, method = 'pca')
train.pca <- predict(period.pca.trans, train.features)
k.fit.period <- kmeans(train.pca, k.period, 100)
train.clustered <- data.frame(train.base, train.pca, Cluster = k.fit.period$cluster)
train.clustered$Cluster <- as.factor(train.clustered$Cluster)
knn.fit <- train(Cluster~., data=train.clustered[,colnames(train.clustered)[grep('^PC|Cluster',colnames(train.clustered))]], method='knn')
test.period <- as.character(year.weeks[year.weeks$ywIndex>i & year.weeks$ywIndex<=(i+3), 'YearWeek'])
test.df <- cp.clean.ts[cp.clean.ts$YearWeek %in% test.period, ]
test.base <- test.df[,c(1:3,8)]
test.features <- test.df[,c(4:7)]
test.pca <- predict(period.pca.trans, test.features)
test.clustered <- data.frame(test.base, test.pca, Cluster = predict(knn.fit, newdata=test.pca))
# method 1: see how the predicted values of the next week alter the cluster density
train.density <- with(data.frame(train.clustered, Record = 1), aggregate(Record~Cluster, FUN=sum))
train.density$Density <- train.density$Record/sum(train.density$Record)
train.density$Key <- 'train'
agg.clustered <- rbind(train.clustered, test.clustered)
agg.density <- with(data.frame(agg.clustered, Record = 1), aggregate(Record~Cluster, FUN=sum))
agg.density$Density <- agg.density$Record/sum(agg.density$Record)
agg.density$Key <- 'agg'
a <- rbind(train.density, agg.density)
ggplot(a, aes(x=Cluster, y=Density, fill=Key)) + geom_bar(stat='identity', position='dodge') + labs(title=paste('Delta in Cluster Density for Period Ending', max(test.period), sep=' '))
train.density
agg.density
spread(agg.density, key = Cluster, Value = Density)
spread(agg.density, key = Cluster, value = Density)
spread(a, key = Cluster, value = Density)
head(a)
spread(a, key = Key, value = Density)
head(a)
spread(a[,c(1, 3:4)], key = Key, value = Density)
k.period <- 15
year.weeks <- data.frame(YearWeek = unique(cp.clean.ts$YearWeek), ywIndex = seq(1, length(unique(cp.clean.ts$YearWeek)), 1))
rolling.density <- c()
for(i in 26:length(year.weeks$YearWeek)) {
train.period <- as.character(year.weeks[year.weeks$ywIndex<=i & year.weeks$ywIndex>=(i-25), 'YearWeek'])
train.df <- cp.clean.ts[cp.clean.ts$YearWeek %in% train.period, ]
train.base <- train.df[,c(1:3,8)]
train.features <- train.df[,c(4:7)]
period.pca.trans <- preProcess(train.features, method = 'pca')
train.pca <- predict(period.pca.trans, train.features)
k.fit.period <- kmeans(train.pca, k.period, 100)
train.clustered <- data.frame(train.base, train.pca, Cluster = k.fit.period$cluster)
train.clustered$Cluster <- as.factor(train.clustered$Cluster)
knn.fit <- train(Cluster~., data=train.clustered[,colnames(train.clustered)[grep('^PC|Cluster',colnames(train.clustered))]], method='knn')
test.period <- as.character(year.weeks[year.weeks$ywIndex>i & year.weeks$ywIndex<=(i+3), 'YearWeek'])
test.df <- cp.clean.ts[cp.clean.ts$YearWeek %in% test.period, ]
test.base <- test.df[,c(1:3,8)]
test.features <- test.df[,c(4:7)]
test.pca <- predict(period.pca.trans, test.features)
test.clustered <- data.frame(test.base, test.pca, Cluster = predict(knn.fit, newdata=test.pca))
# method 1: see how the predicted values of the next week alter the cluster density
train.density <- with(data.frame(train.clustered, Record = 1), aggregate(Record~Cluster, FUN=sum))
train.density$Density <- train.density$Record/sum(train.density$Record)
train.density$Key <- 'train'
agg.clustered <- rbind(train.clustered, test.clustered)
agg.density <- with(data.frame(agg.clustered, Record = 1), aggregate(Record~Cluster, FUN=sum))
agg.density$Density <- agg.density$Record/sum(agg.density$Record)
agg.density$Key <- 'agg'
a <- rbind(train.density, agg.density)
# ggplot(a, aes(x=Cluster, y=Density, fill=Key)) + geom_bar(stat='identity', position='dodge') + labs(title=paste('Delta in Cluster Density for Period Ending', max(test.period), sep=' '))
temp <- spread(a[,c(1, 3:4)], key = Key, value = Density)
temp$Delta <- (temp$train - temp$agg)^2
temp$YearWeek <- max(test.period)
rolling.density <- rbind(rolling.density, temp)
}
head(rolling.density)
ggplot(rolling.density, aes(x=YearWeek, y=Delta, fill=Cluster)) + geom_bar(stat='identity')
ggplot(rolling.density, aes(x=YearWeek, y=Delta, fill=Cluster)) + geom_bar(stat='identity') + scale_x_discrete(breaks = as.character(rolling.density$YearWeek)[order(as.character(rolling.density$YearWeek))][seq(1, length(as.character(rolling.density$YearWeek)), 12)])
ggplot(rolling.density, aes(x=YearWeek, y=Delta, fill=Cluster)) + geom_bar(stat='identity') + scale_x_discrete(breaks = as.character(rolling.density$YearWeek)[order(as.character(rolling.density$YearWeek))][seq(1, length(as.character(rolling.density$YearWeek)), 12)]) + theme(axis.text.x=element_text(angle=90))
as.character(rolling.density$YearWeek)[order(as.character(rolling.density$YearWeek))][seq(1, length(as.character(rolling.density$YearWeek)), 12)]
ggplot(rolling.density, aes(x=YearWeek, y=Delta, fill=Cluster)) + geom_bar(stat='identity') + scale_x_discrete(breaks = as.character(unique(rolling.density$YearWeek))[order(as.character(unique(rolling.density$YearWeek)))][seq(1, length(as.character(unique(rolling.density$YearWeek))), 12)]) + theme(axis.text.x=element_text(angle=90))
ggplot(rolling.density, aes(x=YearWeek, y=Delta, fill=Cluster)) + geom_bar(stat='identity') + scale_x_discrete(breaks = as.character(unique(rolling.density$YearWeek))[order(as.character(unique(rolling.density$YearWeek)))][seq(1, length(as.character(unique(rolling.density$YearWeek))), 12)]) + theme(axis.text.x=element_text(angle=90)) + labs(title='Delta in Densities between Training and Aggregate Data Sets\non Rolling Basis by Week')
library(RODBC)
library(lubridate)
library(ggplot2)
library(devtools)
require(dateManip)
library(cluster)
library(caret)
library(dbscan)
library(C50)
library(tidyr)
library(dplyr)
library(plot3D)
head(clustered.df)
ggplot(clustered.df, aes(x=YearWeek, y=Record, fill=SequenceFlag)) + geom_bar(stat='identity')+ scale_x_discrete(breaks = as.character(unique(clustered.df$YearWeek))[order(as.character(unique(clustered.df$YearWeek)))][seq(1, length(as.character(unique(clustered.df$YearWeek))), 12)])
ggplot(clustered.df, aes(x=YearWeek, y=Record, fill=SequenceFlag)) + geom_bar(stat='identity')+ scale_x_discrete(breaks = as.character(unique(clustered.df$YearWeek))[order(as.character(unique(clustered.df$YearWeek)))][seq(1, length(as.character(unique(clustered.df$YearWeek))), 12)]) + labs(title='HRV/EV Positive Test Count with Positive/Negative Sequences for EV-D68\nby Week')
ggplot(rolling.density, aes(x=YearWeek, y=Delta, fill=Cluster)) + geom_bar(stat='identity') + scale_x_discrete(breaks = as.character(unique(rolling.density$YearWeek))[order(as.character(unique(rolling.density$YearWeek)))][seq(1, length(as.character(unique(rolling.density$YearWeek))), 12)]) + theme(axis.text.x=element_text(angle=90)) + labs(title='Delta in Densities between Training and Aggregate Data Sets\non Rolling Basis by Week')
year.weeks[year.weeks$ywIndex==26, ]
year.weeks[year.weeks$ywIndex==26, 'YearWeek']
ggplot(subset(clustered.df, YearWeek >= as.character(year.weeks[year.weeks$ywIndex==26, 'YearWeek'])), aes(x=YearWeek, y=Record, fill=SequenceFlag)) + geom_bar(stat='identity')+ scale_x_discrete(breaks = as.character(unique(clustered.df$YearWeek))[order(as.character(unique(clustered.df$YearWeek)))][seq(1, length(as.character(unique(clustered.df$YearWeek))), 12)]) + labs(title='HRV/EV Positive Test Count with Positive/Negative Sequences for EV-D68\nby Week')
ggplot(rolling.density, aes(x=YearWeek, y=Delta, fill=Cluster)) + geom_bar(stat='identity') + scale_x_discrete(breaks = as.character(unique(rolling.density$YearWeek))[order(as.character(unique(rolling.density$YearWeek)))][seq(1, length(as.character(unique(rolling.density$YearWeek))), 12)]) + theme(axis.text.x=element_text(angle=90)) + labs(title='Delta in Densities between Training and Aggregate Data Sets\non Rolling Basis by Week')
install_github('twitter/AnomalyDetection')
library(AnomalyDetection)
help(AnomalyDetectionTs)
head(anoms)
raw_data
head(raw_data)
head(cp.clean.ts)
head(cp.sequence)
sequence.freq <- merge(cp.clean.ts, cp.sequence, by='RunDataId')
head(sequence.freq)
head(raw_data)
with(data.frame(sequence.freq, Count = 1), aggregate(Count~Date+Sequence, FUN=sum))
sequence.freq <- with(data.frame(sequence.freq, Count = 1), aggregate(Count~Date+Sequence, FUN=sum))
head(sequence.freq)
head(raw_data)
