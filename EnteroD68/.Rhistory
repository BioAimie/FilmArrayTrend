setwd('~/FilmArrayTrend/EnteroD68/')
# load the neccessary libraries
library(RODBC)
library(lubridate)
library(ggplot2)
library(devtools)
require(dateManip)
# create an Epi date calendar that will be used by all the data sets
startYear <- 2013
calendar.df <- createCalendarLikeMicrosoft(startYear, 'Week')
calendar.df <- transformToEpiWeeks(calendar.df)
calendar.df$YearWeek <- with(calendar.df, ifelse(Week < 10, paste(Year, Week, sep='-0'), paste(Year, Week, sep='-')))
# set up some constants
imgDir <- 'Figures/'
dateBreaks <- unique(calendar.df[calendar.df$Year >= startYear, 'YearWeek'])[order(unique(calendar.df[calendar.df$Year >= startYear, 'YearWeek']))][seq(1, length(unique(calendar.df[calendar.df$Year >= startYear, 'YearWeek'])), 8)]
FADWcxn <- odbcConnect('FA_DW', uid = 'afaucett', pwd = 'ThisIsAPassword-BAD')
queryVector <- scan('../DataSources/SQL/EnteroD68/sitesRunningRP.txt',what=character(),quote="")
query <- paste(queryVector,collapse=" ")
sites.df <- sqlQuery(FADWcxn,query)
queryVector <- scan('../DataSources/SQL/EnteroD68/rpRunsBySite.sql',what=character(),quote="")
query <- paste(queryVector,collapse=" ")
runs.df <- sqlQuery(FADWcxn,query)
odbcClose(FADWcxn)
cp.df <- c()
choose.sites <- as.character(sites.df[,'CustomerSiteId'])
for(j in 1:length(choose.sites)) {
FADWcxn <- odbcConnect('FA_DW', uid = 'afaucett', pwd = 'ThisIsAPassword-BAD')
queryVector <- scan('../DataSources/SQL/EnteroD68/rpDataBySite.sql', what=character(), quote="")
query <- paste(gsub('SITE_INDEX', choose.sites[j], queryVector), collapse=" ")
cp.site.df <- sqlQuery(FADWcxn, query)
odbcClose(FADWcxn)
cp.df <- rbind(cp.df, cp.site.df)
}
heaD(cp.df)
head(cp.df)
cp.rhino <- subset(cp.df, TargetName=='Human Rhinovirus/Enterovirus')
cp.rhino.assays <- subset(cp.rhino, AssayType=='Organism')
run.ids <- unique(cp.rhino$RunDataId)
cp.rhino.median <- do.call(rbind, lapply(1:length(run.ids), function(x)
do.call(rbind,  lapply(1:length(unique(cp.rhino[cp.rhino$RunDataId==run.ids[x],'AssayName'])), function(z)
data.frame(RunDataId = run.ids[x],
TargetName = 'Human Rhinovirus/Enterovirus',
AssayName = unique(cp.rhino[cp.rhino$RunDataId==run.ids[x], 'AssayName'])[z],
MedianCp = median(cp.rhino[cp.rhino$RunDataId==run.ids[x] & cp.rhino$AssayName==unique(cp.rhino[cp.rhino$RunDataId==run.ids[x],'AssayName'])[z], 'Cp'])
)
))
))
head(cp.rhino.median)
head(cp.rhino.assays)
a <- merge(cp.rhino.median, unique(cp.rhino.assays[,c('RunDataId','CustomerSiteId')]))
cp.rhino.median <- merge(cp.rhino.median, unique(cp.rhino.assays[,c('RunDataId','CustomerSiteId')]))
rm(a)
head(cp.rhino.median)
cp.rhino.ordered <- do.call(rbind, lapply(1:length(run.ids), function(x) data.frame(cp.rhino.median[cp.rhino.median$RunDataId==run.ids[x], ][order(cp.rhino.median[cp.rhino.ordered$RunDataId==run.ids[x], 'MedianCp']), ], Index = seq(1, length(cp.rhino.median[cp.rhino.median$RunDataId==run.ids[x], 'MedianCp']), 1))))
cp.rhino.ordered <- do.call(rbind, lapply(1:length(run.ids), function(x) data.frame(cp.rhino.median[cp.rhino.median$RunDataId==run.ids[x], ][order(cp.rhino.median[cp.rhino.median$RunDataId==run.ids[x], 'MedianCp']), ], Index = seq(1, length(cp.rhino.median[cp.rhino.median$RunDataId==run.ids[x], 'MedianCp']), 1))))
head(cp.rhino.ordered)
do.call(c, lapply(1:length(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName']), function(x) paste(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName'], sep=',')))
do.call(c, lapply(1:5, function(x) paste(cp.rhino.ordered[cp.rhino.ordered$RunDataId==run.ids[x], 'AssayName'], sep=',')))
do.call(c, lapply(1:1, function(x) paste(cp.rhino.ordered[cp.rhino.ordered$RunDataId==run.ids[x], 'AssayName'], sep=',')))
do.call(c, lapply(1:1, function(x) paste(cp.rhino.ordered[cp.rhino.ordered$RunDataId==run.ids[x], 'AssayName'], collapse=',')))
head(cp.rhino.ordered)
do.call(c, lapply(1:4, function(x) paste(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName'][x], sep=',')))
do.call(c, lapply(1:4, function(x) paste(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName'][x], collapse=',')))
do.call(c, lapply(1:4, function(x) paste(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName'][x])))
do.call(c, lapply(1:4, function(x) paste(paste(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName'][x]), collapse=',')))
do.call(c, lapply(1:4, function(x) paste(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName'][x])))
do.call(rbind, lapply(1:3, function(x) data.frame(RunDataId = run.ids[x], SeqString = do.call(c, lapply(1:4, function(y) paste(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName'][y]))))))
do.call(c, lapply(1:4, function(x) paste(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName'][x])))
data.frame(RunDataId = 5, SeqString = do.call(c, lapply(1:4, function(x) paste(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName'][x)])))
data.frame(RunDataId = 5, SeqString = do.call(c, lapply(1:4, function(x) paste(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName'][x]))))
do.call(c, lapply(1:4, function(x) paste(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName'][x])))
head(cp.rh)
head(cp.rhino.ordered)
head(cp.rhino.ordered)
cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, ]
cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName']
as.character(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName'])
paste(as.character(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName']), collapse=', ')
data.frame(RunDataId = 5, Sequence = paste(as.character(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName']), collapse=', '))
do.call(rbind, lapply(1:10, function(x) data.frame(RunDataId = run.ids[x], Sequence = paste(as.character(cp.rhino.ordered[cp.rhino.ordered$RunDataId==run.ids[x], 'AssayName']), collapse=', '))))
cp.rhino.ordered[cp.rhino.ordered$RunDataId %in% run.ids[1:10], ]
cp.rhino.sequence <- do.call(rbind, lapply(1:length(run.ids), function(x) data.frame(RunDataId = run.ids[x], Sequence = paste(as.character(cp.rhino.ordered[cp.rhino.ordered$RunDataId==run.ids[x], 'AssayName']), collapse=', '))))
head(cp.rhino.sequence)
cp.assays <- subset(cp.df, AssayType=='Organism')
runs <- unique(cp.assays$RunDataId)
cp.median <- do.call(rbind, lapply(1:length(runs), function(x)
do.call(rbind, lapply(1:length(unique(cp.assays[cp.assays$RunDataId==runs[x], 'TargetName'])), function(y)
do.call(rbind,  lapply(1:length(unique(cp.assays[cp.assays$RunDataId==runs[x] & cp.assays$TargetName==unique(cp.assays[cp.assays$RunDataId==runs[x], 'TargetName'])[y],'AssayName'])), function(z)
data.frame(RunDataId = runs[x],
TargetName = unique(cp.assays[cp.assays$RunDataId==runs[x], 'TargetName'])[y],
AssayName = unique(cp.assays[cp.assays$RunDataId==runs[x] & cp.assays$TargetName==unique(cp.assays[cp.assays$RunDataId==runs[x], 'TargetName'])[y], 'AssayName'])[z],
MedianCp = median(cp.assays[cp.assays$RunDataId==runs[x] & cp.assays$TargetName==unique(cp.assays[cp.assays$RunDataId==runs[x],'TargetName'])[y] & cp.assays$AssayName==unique(cp.assays[cp.assays$RunDataId==runs[x] & cp.assays$TargetName==unique(cp.assays[cp.assays$RunDataId==runs[x],'TargetName'])[y],'AssayName'])[z], 'Cp'])
)
))
))
))
cp.assays.ordered <- do.call(rbind, lapply(1:length(runs), function(x) data.frame(cp.assays[cp.assays$RunDataId==runs[x], ][order(cp.assays[cp.assays$RunDataId==runs.keep[x], 'MedianCp']), ], Index = seq(1, length(cp.assays[cp.assays$RunDataId==runs[x], 'MedianCp']), 1))))
cp.assays.sequence <- do.call(rbind, lapply(1:length(runs), function(x) data.frame(RunDataId = runs[x], Sequence = paste(as.character(cp.assays.ordered[cp.assays.ordered$RunDataId==runs[x], 'AssayName']), collapse=', '))))
head(cp.median)
cp.assays.median <- cp.median
identical(cp.median, cp.assays.median)
rm(cp.median)
cp.assays.ordered <- do.call(rbind, lapply(1:length(runs), function(x) data.frame(cp.assays.median[cp.assays.median$RunDataId==runs[x], ][order(cp.assays.median[cp.assays.median$RunDataId==runs[x], 'MedianCp']), ], Index = seq(1, length(cp.assays.median[cp.assays.median$RunDataId==runs[x], 'MedianCp']), 1))))
head(cp.assays.median)
head(cp.assays.median)
cp.assays.ordered[cp.assays.ordered$RunDataId==5, ]
cp.assays.median[cp.assays.median$RunDataId==5, ]
head(cp.assays.median)
cp.assays.median[cp.assays.median$RunDataId==7, ]
cp.assays.ordered[cp.assays.ordered$RunDataId==7, ]
cp.assays.median[cp.assays.median$RunDataId==102, ]
cp.assays.median[cp.assays.median$RunDataId==1006, ]
tail(cp.assays.median)
cp.assays.median[cp.assays.median$RunDataId==768261, ]
cp.assays.ordered[cp.assays.ordered$RunDataId==768261, ]
cp.assays.sequence <- do.call(rbind, lapply(1:length(runs), function(x) data.frame(RunDataId = runs[x], Sequence = paste(as.character(cp.assays.ordered[cp.assays.ordered$RunDataId==runs[x], 'AssayName']), collapse=', '))))
head(cp.assays.sequence)
cp.assays.ordered[cp.assays.ordered$RunDataId==5, ]
head(cp.assays.sequence)
ls
head(cp.assays.sequence)
unique(cp.assays.sequence$Sequence)
length(unique(cp.assays.sequence))
length(unique(cp.assays.sequence$Sequence))
data.frame(Sequence = unique(cp.assays.sequence), SeqenceIndex = seq(1, length(unique(cp.assays.sequence$Sequence)), 1))
data.frame(Sequence = unique(cp.assays.sequence$Sequence), SeqenceIndex = seq(1, length(unique(cp.assays.sequence$Sequence)), 1))
sequence.index <- data.frame(Sequence = unique(cp.assays.sequence$Sequence), SeqenceIndex = seq(1, length(unique(cp.assays.sequence$Sequence)), 1))
a <- merge(cp.assays.sequence, sequence.index, by='Sequence')
cp.assays.sequence <- merge(cp.assays.sequence, sequence.index, by='Sequence')
head(cp.assays.sequence)
rm(a)
head(cp.assays.sequence)
head(cp.assays.ordered)
do.call(rbind, lapply(1:10, function(x) data.frame(RunDataId = runs[x] , DetlaCp = (cp.assays.ordered[cp.assays.ordered$RunDataId==runs[x], 'MedianCp'] - cp.assays.ordered[cp.assays.ordered$RunDataId==runs[x] & cp.assays.ordered$Index==1, 'MedianCp']))))
a <- do.call(rbind, lapply(1:10, function(x) data.frame(RunDataId = runs[x] , DetlaCp = (cp.assays.ordered[cp.assays.ordered$RunDataId==runs[x], 'MedianCp'] - cp.assays.ordered[cp.assays.ordered$RunDataId==runs[x] & cp.assays.ordered$Index==1, 'MedianCp']))))
head(a)
cp.assays.ordered[cp.assays.ordered$RunDataId==5, ]
cp.assays.ordered[cp.assays.ordered$RunDataId===6, ]
cp.assays.ordered[cp.assays.ordered$RunDataId==6, ]
cp.assays.ordered[cp.assays.ordered$RunDataId==7, ]
a
head(cp.assasy.median)
head(cp.assays.median)
cp.assays.delta <- do.call(rbind, lapply(1:length(runs), function(x) data.frame(RunDataId = runs[x] , DetlaCp = (cp.assays.ordered[cp.assays.ordered$RunDataId==runs[x], 'MedianCp'] - cp.assays.ordered[cp.assays.ordered$RunDataId==runs[x] & cp.assays.ordered$Index==1, 'MedianCp']))))
max(cp.assays.ordered$Index)
max.assays <- max(cp.assays.ordered$Index)
head(cp.assays.sequence)
head(cp.assays.ordered)
head(cp.assays.delta)
head(cp.assays.ordered)
merge(cp.assays.sequence)
head(cp.assays.ordered)
head(cp.assays.sequence)
head(cp.assays.delta)
head(cp.assays.ordered)
cp.assays.delta <- do.call(rbind, lapply(1:length(runs), function(x) data.frame(RunDataId = runs[x], Index = cp.assays.ordered[cp.assays.ordered$RunDataId==runs[x],'Index'], DetlaCp = (cp.assays.ordered[cp.assays.ordered$RunDataId==runs[x], 'MedianCp'] - cp.assays.ordered[cp.assays.ordered$RunDataId==runs[x] & cp.assays.ordered$Index==1, 'MedianCp']))))
head(cp.assays.delta)
head(cp.assays.delta)
head(cp.assays.ordered)
a <- merge(cp.assays.ordered, cp.assays.delta, by=c('RunDataId','Index'))
head(a)
a[a$RunDataId==5, ]
cp.assays.ordered <- merge(cp.assays.ordered, cp.assays.delta, by=c('RunDataId','Index'))
head(cp.assays.ordered)
with(cp.assays.ordered, aggregate(MedianCp~RunDataId, FUN=min))
with(cp.assays.ordered, aggregate(MedianCp~RunDataId, FUN=max))
cp.assays.min <- with(cp.assays.ordered, aggregate(MedianCp~RunDataId, FUN=min))
cp.assays.max <- with(cp.assays.ordered, aggregate(MedianCp~RunDataId, FUN=max))
cp.assays.count <- with(cp.assays.ordered, aggregate(Index~RunDataId, FUN=max))
merge(merge(cp.assays.min, cp.assays.max, by='RunDataId'), cp.assasy.count, by='RunDataId')
merge(merge(cp.assays.min, cp.assays.max, by='RunDataId'), cp.assays.count, by='RunDataId')
cp.learn <- merge(merge(cp.assays.min, cp.assays.max, by='RunDataId'), cp.assays.count, by='RunDataId')
colnames(cp.learn) <- c('RunDataId', 'CpMin', 'CpMax', 'AssayCount')
head(cp.learn)
head(cp.assays.ordered)
cp.assasy.avg <- with(cp.assays.ordered, aggregate(MedianCp~RunDataId, FUN=mean))
cp.assays.avg <- with(cp.assays.ordered, aggregate(MedianCp~RunDataId, FUN=mean))
cp.learn <- merge(merge(merge(cp.assays.count, cp.assays.min, by='RunDataId'), cp.assays.max, by='RunDataId'), cp.assays.avg, by='RunDataId')
colnames(cp.learn) <- c('RunDataId', 'AssayCount', 'CpMin', 'CpMax', 'CpMean')
rm(cp.assasy.avg)
head(cp.learn)
a <- with(cp.assays.ordered, aggregate(MedianCp~RunDataId, FUN=sd))
View(a)
cp.assays.median[cp.assays.median$RunDataId==58, ]
cp.assays.sd <- with(cp.assays.ordered, aggregate(MedianCp~RunDataId, FUN=sd))
cp.learn <- merge(merge(merge(merge(cp.assays.count, cp.assays.min, by='RunDataId'), cp.assays.max, by='RunDataId'), cp.assays.avg, by='RunDataId'), cp.assays.sd, by='RunDataId')
colnames(cp.learn) <- c('RunDataId', 'AssayCount', 'CpMin', 'CpMax', 'CpMean', 'CpSdev')
head(cp.learn)
head(cp.assays.delta)
head(cp.assays.ordered)
cp.second.assay <- cp.assays.ordered[cp.assays.ordered$Index==2, c('RunDataId','MedianCp')]
head(cp.second.assay)
cp.learn <- merge(cp.learn, cp.second.assay, by='RunDataId', all.x=TRUE)
head(cp.learn)
colnames(cp.learn)[length(cp.learn)]
colnames(cp.learn)[length(cp.learn)] <- 'DeltaCpMin'
cp.learn[cp.learn$AssayCount >= 2, 'DeltaCpMax'] <- cp.learn[cp.learn$AssayCount >= 2, 'CpMax'] - cp.learn[cp.learn$AssayCount > 2, 'CpMin']
cp.learn[cp.learn$AssayCount >= 2, 'DeltaCpMax'] <- cp.learn[cp.learn$AssayCount >= 2, 'CpMax'] - cp.learn[cp.learn$AssayCount >= 2, 'CpMin']
head(cp.learn)
head(cp.assays.ordered)
cp.delta.avg <- with(cp.assays.ordered, aggregate(DetlaCp~RunDataId, FUN=mean))
cp.delta.sd <- with(cp.assays.ordered, aggregate(DetlaCp~RunDataId, FUN=sd))
cp.learn <- merge(cp.learn, cp.delta.avg, by='RunDataId', all.x=TRUE)
head(cp.learn)
head(cp.delta.avg)
head(cp.assays.delta)
colnames(cp.assays.delta)[3] <- 'DeltaCp'
hea(cp.assays.ordered)
head(cp.assays.ordered)
colnames(cp.assays.ordered)[5]
colnames(cp.assays.ordered)[6]
colnames(cp.assays.ordered)[6] <- 'DeltaCp'
head(cp.learn)
colnames(cp.learn)[8]
colnames(cp.learn)[9]
colnames(cp.learn)[9] <- 'DeltaCp'
colnames(cp.learn)[length(cp.learn)] <- 'DeltaCpMean'
cp.learn <- merge(cp.learn, cp.delta.sd, by='RunDataId', all.x=TRUE)
colnames(cp.learn)[length(cp.learn)] <- 'DeltaCpSdev'
head(cp.learn)
cp.learn[is.na(cp.learn$CpSdev), 'CpSdev'] <- 0
cp.learn[is.na(cp.learn$DeltaCpMin), 'DeltaCpMin'] <- 0
cp.learn[is.na(cp.learn$DeltaCpMax), 'DeltaCpMax'] <- 0
cp.learn[is.na(cp.learn$DeltaCpSdev), 'DeltaCpSdev'] <- 0
head(cp.learn)
head(cp.assays.sequence)
cp.learn <- merge(cp.learn, cp.assays.sequence[,c('RunDataId','SequenceIndex')], by='RunDataId')
colnames(cp.assays.sequence)
colnames(cp.assays.sequence)[3] <- 'SequenceIndex'
cp.learn <- merge(cp.learn, cp.assays.sequence[,c('RunDataId','SequenceIndex')], by='RunDataId')
heaD(cp.learn)
head(cp.learn)
max(cp.learn$SequenceIndex)
head(cp.learn)
colnames(cp.learn)
cp.learn[, colnames(cp.learn)!='RunDataId']
a <- cp.learn[, colnames(cp.learn)!='RunDataId']
heaD(a)
head(a)
head(a)
rm(a)
cp.learn.obs <- cp.learn[, colnames(cp.learn)!='RunDataId']
head(cp.learn.obs)
install.packages('cluster', dependencies = TRUE)
library(cluster)
library(caret)
library(RODBC)
library(lubridate)
library(ggplot2)
library(devtools)
require(dateManip)
agnes(cp.learn.obs, diss=FALSE, stand=TRUE, method='average', keep.data=FALSE, trace.lev=1)
kmeans(cp.learn.obs, centers = 100, iter.max = 10)
cp.cluster.alg.1 <- kmeans(cp.learn.obs, centers = 100, iter.max = 10)
head(cp.learn.obs)
library(RODBC)
library(lubridate)
library(ggplot2)
library(devtools)
require(dateManip)
library(cluster)
library(caret)
head(cp.learn.obs)
head(cp.assays.sequence)
head(cp.assays.ordered)
head(cp.assays.sequence)
a <- cp.assays.ordered[cp.assays.ordered$TargetName=='Human Rhinovirus/Enterovirus', ]
cp.rhino.ordered <- cp.assays.ordered[cp.assays.ordered$TargetName=='Human Rhinovirus/Enterovirus', ]
rm(a)
head(cp.rhino.ordered)
head(cp.assays.sequence)
max(cp.rhino.ordered$Index)
head(cp.rhino.median)
head(cp.rhino.median)
head(cp.rhino.ordered)
head(cp.rhino.sequence)
cp.rhino.ordered <- do.call(rbind, lapply(1:length(run.ids), function(x) data.frame(cp.rhino.median[cp.rhino.median$RunDataId==run.ids[x], ][order(cp.rhino.median[cp.rhino.median$RunDataId==run.ids[x], 'MedianCp']), ], Index = seq(1, length(cp.rhino.median[cp.rhino.median$RunDataId==run.ids[x], 'MedianCp']), 1))))
cp.rhino.sequence <- do.call(rbind, lapply(1:length(run.ids), function(x) data.frame(RunDataId = run.ids[x], Sequence = paste(as.character(cp.rhino.ordered[cp.rhino.ordered$RunDataId==run.ids[x], 'AssayName']), collapse=', '))))
head(cp.rhino.sequence)
unique(cp.rhino.sequence$Sequence)
rhino.sequence.index <- data.frame(Sequence = unique(cp.rhino.sequence$Sequence), SequenceIndex = seq(1, length(unique(cp.rhino.sequence$Sequence)), 1))
head(rhino.sequence.index)
cp.rhino.sequence <- merge(cp.rhino.sequence, rhino.sequence.index, by='Sequence')
head(cp.rhino.sequence)
head(cp.rhino.ordered)
max(cp.rhino.ordered$Index)
first.rhino.assay <- cp.rhino.ordered[cp.rhino.ordered$Index==1, c('RunDataId','AssayName','MedianCp','CustomerSiteId')]
second.rhino.assay <- cp.rhino.ordered[cp.rhino.ordered$Index==2, c('RunDataId','AssayName','MedianCp','CustomerSiteId')]
third.rhino.assay <- cp.rhino.ordered[cp.rhino.ordered$Index==3, c('RunDataId','AssayName','MedianCp','CustomerSiteId')]
fourth.rhino.assay <- cp.rhino.ordered[cp.rhino.ordered$Index==4, c('RunDataId','AssayName','MedianCp','CustomerSiteId')]
fifth.rhino.assay <- cp.rhino.ordered[cp.rhino.ordered$Index==5, c('RunDataId','AssayName','MedianCp','CustomerSiteId')]
sixth.rhino.assay <- cp.rhino.ordered[cp.rhino.ordered$Index==6, c('RunDataId','AssayName','MedianCp','CustomerSiteId')]
head(cp.rhino.ordered)
unique(cp.rhino.ordered$AssayName)
as.character(unique(cp.rhino.ordered$AssayName))
as.character(unique(cp.rhino.ordered$AssayName))[order(as.character(unique(cp.rhino.ordered$AssayName)))]
data.frame(AssayName = as.character(unique(cp.rhino.ordered$AssayName))[order(as.character(unique(cp.rhino.ordered$AssayName)))], AssayIndex = seq(1, 6, 1))
rhino.assays <- data.frame(AssayName = as.character(unique(cp.rhino.ordered$AssayName))[order(as.character(unique(cp.rhino.ordered$AssayName)))], AssayIndex = seq(1, 6, 1))
a <- merge(third.rhino.assay, merge(merge(fourth.rhino.assay, fifth.rhino.assay, by=c('RunDataId','CustomerSiteId'), all.x=TRUE), sixth.rhino.assay, by=c('RunDataId','CustomerSiteId'), all.x=TRUE), by=c('RunDataId','CustomerSiteId'), all.x=TRUE)
head(a)
merge(first.rhino.assay, merge(second.rhino.assay, merge(third.rhino.assay, merge(merge(fourth.rhino.assay, fifth.rhino.assay, by=c('RunDataId','CustomerSiteId'), all.x=TRUE), sixth.rhino.assay, by=c('RunDataId','CustomerSiteId'), all.x=TRUE), by=c('RunDataId','CustomerSiteId'), all.x=TRUE), by=c('RunDataId','CustomerSiteId'), all.x=TRUE), by=c('RunDataId','CustomerSiteId'), all.x=TRUE)
rhino.features <- merge(first.rhino.assay, merge(second.rhino.assay, merge(third.rhino.assay, merge(merge(fourth.rhino.assay, fifth.rhino.assay, by=c('RunDataId','CustomerSiteId'), all.x=TRUE), sixth.rhino.assay, by=c('RunDataId','CustomerSiteId'), all.x=TRUE), by=c('RunDataId','CustomerSiteId'), all.x=TRUE), by=c('RunDataId','CustomerSiteId'), all.x=TRUE), by=c('RunDataId','CustomerSiteId'), all.x=TRUE)
head(rhino.features)
colnames(rhino.features) <- c('RunDataId','CustomerSiteId','Assay1','Cp1','Assay2','Cp2','Assay3','Cp3','Assay4','Cp4','Assay5','Cp5','Assay6','Cp6')
head(rhino.features)
head(rhino.features[,grep('Assay', colnames(rhino.features))])
rhino.features[,grep('Cp', colnames(rhino.features))]
sparse.cp <- 50
head(rhino.features)
head(first.rhino.assay)
merge(first.rhino.assay, rhino.assays, by='AssayName')
head(merge(first.rhino.assay, rhino.assays, by='AssayName'))
head(merge(first.rhino.assay, rhino.assays, by='AssayName')[,c('RunDataId','MedianCp','AssayIndex')])
head(first.rhino.assay)
head(merge(first.rhino.assay, rhino.assays, by='AssayName')[,c('RunDataId','AssayIndex','MedianCp','CustomerSiteId')])
first.rhino.assay <- cp.rhino.ordered[cp.rhino.ordered$Index==1, c('RunDataId','AssayName','MedianCp','CustomerSiteId')]
first.rhino.assay <- merge(first.rhino.assay, rhino.assays, by='AssayName')[,c('RunDataId','AssayIndex','MedianCp','CustomerSiteId')]
second.rhino.assay <- cp.rhino.ordered[cp.rhino.ordered$Index==2, c('RunDataId','AssayName','MedianCp','CustomerSiteId')]
second.rhino.assay <- merge(second.rhino.assay, rhino.assays, by='AssayName')[,c('RunDataId','AssayIndex','MedianCp','CustomerSiteId')]
third.rhino.assay <- cp.rhino.ordered[cp.rhino.ordered$Index==3, c('RunDataId','AssayName','MedianCp','CustomerSiteId')]
third.rhino.assay <- merge(third.rhino.assay, rhino.assays, by='AssayName')[,c('RunDataId','AssayIndex','MedianCp','CustomerSiteId')]
fourth.rhino.assay <- cp.rhino.ordered[cp.rhino.ordered$Index==4, c('RunDataId','AssayName','MedianCp','CustomerSiteId')]
fourth.rhino.assay <- merge(fourth.rhino.assay, rhino.assays, by='AssayName')[,c('RunDataId','AssayIndex','MedianCp','CustomerSiteId')]
fifth.rhino.assay <- cp.rhino.ordered[cp.rhino.ordered$Index==5, c('RunDataId','AssayName','MedianCp','CustomerSiteId')]
fifth.rhino.assay <- merge(fifth.rhino.assay, rhino.assays, by='AssayName')[,c('RunDataId','AssayIndex','MedianCp','CustomerSiteId')]
sixth.rhino.assay <- cp.rhino.ordered[cp.rhino.ordered$Index==6, c('RunDataId','AssayName','MedianCp','CustomerSiteId')]
sixth.rhino.assay <- merge(sixth.rhino.assay, rhino.assays, by='AssayName')[,c('RunDataId','AssayIndex','MedianCp','CustomerSiteId')]
rhino.features <- merge(first.rhino.assay, merge(second.rhino.assay, merge(third.rhino.assay, merge(merge(fourth.rhino.assay, fifth.rhino.assay, by=c('RunDataId','CustomerSiteId'), all.x=TRUE), sixth.rhino.assay, by=c('RunDataId','CustomerSiteId'), all.x=TRUE), by=c('RunDataId','CustomerSiteId'), all.x=TRUE), by=c('RunDataId','CustomerSiteId'), all.x=TRUE), by=c('RunDataId','CustomerSiteId'), all.x=TRUE)
colnames(rhino.features) <- c('RunDataId','CustomerSiteId','Assay1','Cp1','Assay2','Cp2','Assay3','Cp3','Assay4','Cp4','Assay5','Cp5','Assay6','Cp6')
sparse.cp <- 50
head(rhino.features)
sparse.cp <- 50
rhino.features <- rhino.features[is.na(rhino.features$Cp2), 'Cp2'] <- sparse.cp
rhino.features <- rhino.features[is.na(rhino.features$Cp2), 'Cp2'] <- sparse.cp
rhino.features <- rhino.features[is.na(rhino.features$Cp3), 'Cp3'] <- sparse.cp
rhino.features <- rhino.features[is.na(rhino.features$Cp4), 'Cp4'] <- sparse.cp
rhino.features <- rhino.features[is.na(rhino.features$Cp5), 'Cp5'] <- sparse.cp
rhino.features <- rhino.features[is.na(rhino.features$Cp6), 'Cp6'] <- sparse.cp
head(rhino.features)
rhino.features <- merge(first.rhino.assay, merge(second.rhino.assay, merge(third.rhino.assay, merge(merge(fourth.rhino.assay, fifth.rhino.assay, by=c('RunDataId','CustomerSiteId'), all.x=TRUE), sixth.rhino.assay, by=c('RunDataId','CustomerSiteId'), all.x=TRUE), by=c('RunDataId','CustomerSiteId'), all.x=TRUE), by=c('RunDataId','CustomerSiteId'), all.x=TRUE), by=c('RunDataId','CustomerSiteId'), all.x=TRUE)
colnames(rhino.features) <- c('RunDataId','CustomerSiteId','Assay1','Cp1','Assay2','Cp2','Assay3','Cp3','Assay4','Cp4','Assay5','Cp5','Assay6','Cp6')
sparse.cp <- 50
rhino.features[is.na(rhino.features$Cp2), 'Cp2'] <- sparse.cp
rhino.features[is.na(rhino.features$Cp3), 'Cp3'] <- sparse.cp
rhino.features[is.na(rhino.features$Cp4), 'Cp4'] <- sparse.cp
rhino.features[is.na(rhino.features$Cp5), 'Cp5'] <- sparse.cp
rhino.features[is.na(rhino.features$Cp6), 'Cp6'] <- sparse.cp
rhino.features[is.na(rhino.features$Assay2), 'Assay2']
sparse.assay <- 0
rhino.features[is.na(rhino.features$Assay2), 'Assay2'] <- sparse.assay
rhino.features[is.na(rhino.features$Assay3), 'Assay3'] <- sparse.assay
rhino.features[is.na(rhino.features$Assay4), 'Assay4'] <- sparse.assay
rhino.features[is.na(rhino.features$Assay5), 'Assay5'] <- sparse.assay
rhino.features[is.na(rhino.features$Assay6), 'Assay6'] <- sparse.assay
head(rhino.features)
head(runs.df)
with(runs.df, aggregate(Run~CustomerSiteId+Date, FUN=sum))
head(runs.df)
head(bugs.df)
head(cp.df)
unique(cp.df$RunDataId)
head(cp.df)
with(data.frame(unique(cp.df[,c('RunDataId','CustomerSiteId','Date')]), Positives=1), aggregate(Positives~Date+CustomerSiteId, FUN=sum))
positive.count <- with(data.frame(unique(cp.df[,c('RunDataId','CustomerSiteId','Date')]), Positives=1), aggregate(Positives~Date+CustomerSiteId, FUN=sum))
head(run.count)
head(positive.count)
head(rhino.features)
head(run.count)
run.count <- with(runs.df, aggregate(Run~CustomerSiteId+Date, FUN=sum))
rhino.features <- merge(rhino.features, unique(runs.df[,c('RunDataId','Date')]), by='RunDataId')
head(rhino.features)
head(cp.rhino.median)
rhino.positives <- with(data.frame(merge(unique(runs.df[,c('RunDataId','Date')]), unique(cp.rhino.median[,c('RunDataId','CustomerSiteId')]), by='RunDataId'), RhinoPositives = 1), aggregate(RhinoPositives~Date+CustomerSiteId, FUN=sum))
head(run.count)
head(positive.count)
head(rhino.features)
head(rhino.positives)
macro.features <- merge(run.count, merge(positive.count, rhino.positives, by=c('Date','CustomerSiteId'), all.x=TRUE), by=c('Date','CustomerSiteId'), all.x=TRUE)
head(macro.features)
macro.features[is.na(macro.features$Positives),'Positives'] <- 0
macro.features[is.na(macro.features$RhinoPositives),'RhinoPositives'] <- 0
macro.features$Negatives <- macro.features$Run - macro.features$Positives
head(macro.features)
head(macro.features)
macro.features$PositiveRate <- macro.features$Positives/macro.features$Run
macro.features$NegativeRate <- macro.features$Negatives/macro.features$Run
macro.features$RhinoRate <- macro.features$RhinoPositives/macro.features$Run
head(macro.features)
head(rhino.featuers)
head(rhino.features)
rhino.features <- merge(rhino.features, macro.features, by=c('Date','CustomerSiteId'))
head(rhino.features)
head(rhino.features[,!(colnames(rhino.features) %in% c('Date','RunDataId'))])
rhino.features.neat <- rhino.features[,!(colnames(rhino.features) %in% c('Date','RunDataId'))]
head(cp.rhino.sequence)
rhino.features.neat <- rhino.features[,!(colnames(rhino.features) %in% c('Date','RunDataId'))]
head(rhino.features)
rhino.features <- merge(rhino.features, cp.rhino.sequence[,c('RunDataId','SequenceIndex')], by='RunDataId')
rhino.features.neat <- rhino.features[,!(colnames(rhino.features) %in% c('Date','RunDataId'))]
head(rhino.features.neat)
library(RODBC)
library(lubridate)
library(ggplot2)
library(devtools)
require(dateManip)
library(cluster)
library(caret)
head(rhino.features.neat)
rhino.cluster.alg.1 <- kmeans(rhino.features.neat, centers = 100, iter.max = 10)
rhino.cluster.alg.1 <- kmeans(rhino.features.neat, centers = 100, iter.max = 20)
summary(rhino.cluster.alg.1)
head(rhino.features.neat)
print(rhino.cluster.alg.1)
cp.cluster.alg.1$cluster
print(rhino.cluster.alg.1)
rhino.cluster.alg.1$cluster
length(rhino.cluster.alg.1$cluster)
head(rhino.cluster.alg.1$centers)
length(rhino.cluster.alg.1$centers)
length(rhino.cluster.alg.1$centers[,c('Assay1')])
head(rhino.cluster.alg.1$cluster)
head(rhino.features.neat)
cluster.alg.1.df <- cbind(rhino.features.neat, rhino.cluster.alg.1$cluster)
head(cluster.alg.1.df)
cluster.alg.1.df <- cbind(rhino.features.neat, Cluster = rhino.cluster.alg.1$cluster)
head(cluster.alg.1.df)
ggplot(cluster.alg.1.df, aes(x=SequenceIndex, y=Cluster)) + geom_point()
head(rhino.features.neat)
head(cp.rhino.sequence)
cp.rhino.sequence[grep('^HRV4', cp.rhino.sequence$Sequence), ]
unqiue(cp.rhino.sequence[grep('^HRV4', cp.rhino.sequence$Sequence), 'SequenceIndex'])
unique(cp.rhino.sequence[grep('^HRV4', cp.rhino.sequence$Sequence), 'SequenceIndex'])
unique(cp.rhino.sequence[grep('^HRV4', cp.rhino.sequence$Sequence), 'Sequence'])
unique(cp.rhino.sequence[grep('^HRV4', cp.rhino.sequence$Sequence), 'SequenceIndex'])
unique(cp.rhino.sequence[grep('^HRV4', cp.rhino.sequence$Sequence), 'SequenceIndex'])[order(unique(cp.rhino.sequence[grep('^HRV4', cp.rhino.sequence$Sequence), 'SequenceIndex']))]
ggplot(cluster.alg.1.df, aes(x=Cluster, y=SequenceIndex)) + geom_point()
head(cluster.alg.1.df)
rhino.features.neat <- rhino.features[,!(colnames(rhino.features) %in% c('Date','RunDataId','CustomerSiteId'))]
rhino.cluster.alg.1 <- kmeans(rhino.features.neat, centers = 100, iter.max = 20)
rhino.cluster.alg.1 <- kmeans(rhino.features.neat, centers = 100, iter.max = 10)
rhino.cluster.alg.1 <- kmeans(rhino.features.neat, centers = 100, iter.max = 15)
rhino.cluster.alg.1 <- kmeans(rhino.features.neat, centers = 100, iter.max = 20)
rhino.cluster.alg.1 <- kmeans(rhino.features.neat, centers = 20, iter.max = 20)
cluster.alg.1.df <- cbind(rhino.features.neat, Cluster = rhino.cluster.alg.1$cluster)
ggplot(cluster.alg.1.df, aes(x=Cluster, y=SequenceIndex)) + geom_point()
unique(cp.rhino.sequence[grep('^HRV4', cp.rhino.sequence$Sequence), 'SequenceIndex'])
ggplot(subset(cluster.alg.1.df, SequenceIndex %in% unique(cp.rhino.sequence[grep('^HRV4', cp.rhino.sequence$Sequence), 'SequenceIndex'])), aes(x=Cluster, y=SequenceIndex)) + geom_point()
install.packages('dbscan')
library(dbscan)
library(dbscan)
dbscan(rhino.features.neat)
dbscan(rhino.features.neat, eps = 0.4, minPts = 5)
46492-(1+2+3+4+5+6+7+8+9+5+6+6+8+8+7+10+5+5)
46492-46432
head(rhino.features.neat)
dbscan(rhino.features.neat[,c('SequenceIndex','PositiveRate','NegativeRate','RhinoRate')], eps=1, minPts=5)
