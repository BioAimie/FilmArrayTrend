setwd('~/FilmArrayTrend/EnteroD68/')
# load the neccessary libraries
library(RODBC)
library(lubridate)
library(ggplot2)
library(devtools)
require(dateManip)
# create an Epi date calendar that will be used by all the data sets
startYear <- 2013
calendar.df <- createCalendarLikeMicrosoft(startYear, 'Week')
calendar.df <- transformToEpiWeeks(calendar.df)
calendar.df$YearWeek <- with(calendar.df, ifelse(Week < 10, paste(Year, Week, sep='-0'), paste(Year, Week, sep='-')))
# set up some constants
imgDir <- 'Figures/'
dateBreaks <- unique(calendar.df[calendar.df$Year >= startYear, 'YearWeek'])[order(unique(calendar.df[calendar.df$Year >= startYear, 'YearWeek']))][seq(1, length(unique(calendar.df[calendar.df$Year >= startYear, 'YearWeek'])), 8)]
FADWcxn <- odbcConnect('FA_DW', uid = 'afaucett', pwd = 'ThisIsAPassword-BAD')
queryVector <- scan('../DataSources/SQL/EnteroD68/sitesRunningRP.txt',what=character(),quote="")
query <- paste(queryVector,collapse=" ")
sites.df <- sqlQuery(FADWcxn,query)
queryVector <- scan('../DataSources/SQL/EnteroD68/rpRunsBySite.sql',what=character(),quote="")
query <- paste(queryVector,collapse=" ")
runs.df <- sqlQuery(FADWcxn,query)
odbcClose(FADWcxn)
cp.df <- c()
choose.sites <- as.character(sites.df[,'CustomerSiteId'])
for(j in 1:length(choose.sites)) {
FADWcxn <- odbcConnect('FA_DW', uid = 'afaucett', pwd = 'ThisIsAPassword-BAD')
queryVector <- scan('../DataSources/SQL/EnteroD68/rpDataBySite.sql', what=character(), quote="")
query <- paste(gsub('SITE_INDEX', choose.sites[j], queryVector), collapse=" ")
cp.site.df <- sqlQuery(FADWcxn, query)
odbcClose(FADWcxn)
cp.df <- rbind(cp.df, cp.site.df)
}
heaD(cp.df)
head(cp.df)
cp.rhino <- subset(cp.df, TargetName=='Human Rhinovirus/Enterovirus')
cp.rhino.assays <- subset(cp.rhino, AssayType=='Organism')
run.ids <- unique(cp.rhino$RunDataId)
cp.rhino.median <- do.call(rbind, lapply(1:length(run.ids), function(x)
do.call(rbind,  lapply(1:length(unique(cp.rhino[cp.rhino$RunDataId==run.ids[x],'AssayName'])), function(z)
data.frame(RunDataId = run.ids[x],
TargetName = 'Human Rhinovirus/Enterovirus',
AssayName = unique(cp.rhino[cp.rhino$RunDataId==run.ids[x], 'AssayName'])[z],
MedianCp = median(cp.rhino[cp.rhino$RunDataId==run.ids[x] & cp.rhino$AssayName==unique(cp.rhino[cp.rhino$RunDataId==run.ids[x],'AssayName'])[z], 'Cp'])
)
))
))
head(cp.rhino.median)
head(cp.rhino.assays)
a <- merge(cp.rhino.median, unique(cp.rhino.assays[,c('RunDataId','CustomerSiteId')]))
cp.rhino.median <- merge(cp.rhino.median, unique(cp.rhino.assays[,c('RunDataId','CustomerSiteId')]))
rm(a)
head(cp.rhino.median)
cp.rhino.ordered <- do.call(rbind, lapply(1:length(run.ids), function(x) data.frame(cp.rhino.median[cp.rhino.median$RunDataId==run.ids[x], ][order(cp.rhino.median[cp.rhino.ordered$RunDataId==run.ids[x], 'MedianCp']), ], Index = seq(1, length(cp.rhino.median[cp.rhino.median$RunDataId==run.ids[x], 'MedianCp']), 1))))
cp.rhino.ordered <- do.call(rbind, lapply(1:length(run.ids), function(x) data.frame(cp.rhino.median[cp.rhino.median$RunDataId==run.ids[x], ][order(cp.rhino.median[cp.rhino.median$RunDataId==run.ids[x], 'MedianCp']), ], Index = seq(1, length(cp.rhino.median[cp.rhino.median$RunDataId==run.ids[x], 'MedianCp']), 1))))
head(cp.rhino.ordered)
do.call(c, lapply(1:length(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName']), function(x) paste(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName'], sep=',')))
do.call(c, lapply(1:5, function(x) paste(cp.rhino.ordered[cp.rhino.ordered$RunDataId==run.ids[x], 'AssayName'], sep=',')))
do.call(c, lapply(1:1, function(x) paste(cp.rhino.ordered[cp.rhino.ordered$RunDataId==run.ids[x], 'AssayName'], sep=',')))
do.call(c, lapply(1:1, function(x) paste(cp.rhino.ordered[cp.rhino.ordered$RunDataId==run.ids[x], 'AssayName'], collapse=',')))
head(cp.rhino.ordered)
do.call(c, lapply(1:4, function(x) paste(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName'][x], sep=',')))
do.call(c, lapply(1:4, function(x) paste(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName'][x], collapse=',')))
do.call(c, lapply(1:4, function(x) paste(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName'][x])))
do.call(c, lapply(1:4, function(x) paste(paste(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName'][x]), collapse=',')))
do.call(c, lapply(1:4, function(x) paste(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName'][x])))
do.call(rbind, lapply(1:3, function(x) data.frame(RunDataId = run.ids[x], SeqString = do.call(c, lapply(1:4, function(y) paste(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName'][y]))))))
do.call(c, lapply(1:4, function(x) paste(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName'][x])))
data.frame(RunDataId = 5, SeqString = do.call(c, lapply(1:4, function(x) paste(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName'][x)])))
data.frame(RunDataId = 5, SeqString = do.call(c, lapply(1:4, function(x) paste(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName'][x]))))
do.call(c, lapply(1:4, function(x) paste(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName'][x])))
head(cp.rh)
head(cp.rhino.ordered)
head(cp.rhino.ordered)
cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, ]
cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName']
as.character(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName'])
paste(as.character(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName']), collapse=', ')
data.frame(RunDataId = 5, Sequence = paste(as.character(cp.rhino.ordered[cp.rhino.ordered$RunDataId==5, 'AssayName']), collapse=', '))
do.call(rbind, lapply(1:10, function(x) data.frame(RunDataId = run.ids[x], Sequence = paste(as.character(cp.rhino.ordered[cp.rhino.ordered$RunDataId==run.ids[x], 'AssayName']), collapse=', '))))
cp.rhino.ordered[cp.rhino.ordered$RunDataId %in% run.ids[1:10], ]
cp.rhino.sequence <- do.call(rbind, lapply(1:length(run.ids), function(x) data.frame(RunDataId = run.ids[x], Sequence = paste(as.character(cp.rhino.ordered[cp.rhino.ordered$RunDataId==run.ids[x], 'AssayName']), collapse=', '))))
head(cp.rhino.sequence)
cp.assays <- subset(cp.df, AssayType=='Organism')
runs <- unique(cp.assays$RunDataId)
cp.median <- do.call(rbind, lapply(1:length(runs), function(x)
do.call(rbind, lapply(1:length(unique(cp.assays[cp.assays$RunDataId==runs[x], 'TargetName'])), function(y)
do.call(rbind,  lapply(1:length(unique(cp.assays[cp.assays$RunDataId==runs[x] & cp.assays$TargetName==unique(cp.assays[cp.assays$RunDataId==runs[x], 'TargetName'])[y],'AssayName'])), function(z)
data.frame(RunDataId = runs[x],
TargetName = unique(cp.assays[cp.assays$RunDataId==runs[x], 'TargetName'])[y],
AssayName = unique(cp.assays[cp.assays$RunDataId==runs[x] & cp.assays$TargetName==unique(cp.assays[cp.assays$RunDataId==runs[x], 'TargetName'])[y], 'AssayName'])[z],
MedianCp = median(cp.assays[cp.assays$RunDataId==runs[x] & cp.assays$TargetName==unique(cp.assays[cp.assays$RunDataId==runs[x],'TargetName'])[y] & cp.assays$AssayName==unique(cp.assays[cp.assays$RunDataId==runs[x] & cp.assays$TargetName==unique(cp.assays[cp.assays$RunDataId==runs[x],'TargetName'])[y],'AssayName'])[z], 'Cp'])
)
))
))
))
cp.assays.ordered <- do.call(rbind, lapply(1:length(runs), function(x) data.frame(cp.assays[cp.assays$RunDataId==runs[x], ][order(cp.assays[cp.assays$RunDataId==runs.keep[x], 'MedianCp']), ], Index = seq(1, length(cp.assays[cp.assays$RunDataId==runs[x], 'MedianCp']), 1))))
cp.assays.sequence <- do.call(rbind, lapply(1:length(runs), function(x) data.frame(RunDataId = runs[x], Sequence = paste(as.character(cp.assays.ordered[cp.assays.ordered$RunDataId==runs[x], 'AssayName']), collapse=', '))))
head(cp.median)
cp.assays.median <- cp.median
identical(cp.median, cp.assays.median)
rm(cp.median)
cp.assays.ordered <- do.call(rbind, lapply(1:length(runs), function(x) data.frame(cp.assays.median[cp.assays.median$RunDataId==runs[x], ][order(cp.assays.median[cp.assays.median$RunDataId==runs[x], 'MedianCp']), ], Index = seq(1, length(cp.assays.median[cp.assays.median$RunDataId==runs[x], 'MedianCp']), 1))))
head(cp.assays.median)
head(cp.assays.median)
cp.assays.ordered[cp.assays.ordered$RunDataId==5, ]
cp.assays.median[cp.assays.median$RunDataId==5, ]
head(cp.assays.median)
cp.assays.median[cp.assays.median$RunDataId==7, ]
cp.assays.ordered[cp.assays.ordered$RunDataId==7, ]
cp.assays.median[cp.assays.median$RunDataId==102, ]
cp.assays.median[cp.assays.median$RunDataId==1006, ]
tail(cp.assays.median)
cp.assays.median[cp.assays.median$RunDataId==768261, ]
cp.assays.ordered[cp.assays.ordered$RunDataId==768261, ]
cp.assays.sequence <- do.call(rbind, lapply(1:length(runs), function(x) data.frame(RunDataId = runs[x], Sequence = paste(as.character(cp.assays.ordered[cp.assays.ordered$RunDataId==runs[x], 'AssayName']), collapse=', '))))
head(cp.assays.sequence)
cp.assays.ordered[cp.assays.ordered$RunDataId==5, ]
head(cp.assays.sequence)
ls
head(cp.assays.sequence)
unique(cp.assays.sequence$Sequence)
length(unique(cp.assays.sequence))
length(unique(cp.assays.sequence$Sequence))
data.frame(Sequence = unique(cp.assays.sequence), SeqenceIndex = seq(1, length(unique(cp.assays.sequence$Sequence)), 1))
data.frame(Sequence = unique(cp.assays.sequence$Sequence), SeqenceIndex = seq(1, length(unique(cp.assays.sequence$Sequence)), 1))
sequence.index <- data.frame(Sequence = unique(cp.assays.sequence$Sequence), SeqenceIndex = seq(1, length(unique(cp.assays.sequence$Sequence)), 1))
a <- merge(cp.assays.sequence, sequence.index, by='Sequence')
cp.assays.sequence <- merge(cp.assays.sequence, sequence.index, by='Sequence')
head(cp.assays.sequence)
rm(a)
head(cp.assays.sequence)
head(cp.assays.ordered)
do.call(rbind, lapply(1:10, function(x) data.frame(RunDataId = runs[x] , DetlaCp = (cp.assays.ordered[cp.assays.ordered$RunDataId==runs[x], 'MedianCp'] - cp.assays.ordered[cp.assays.ordered$RunDataId==runs[x] & cp.assays.ordered$Index==1, 'MedianCp']))))
a <- do.call(rbind, lapply(1:10, function(x) data.frame(RunDataId = runs[x] , DetlaCp = (cp.assays.ordered[cp.assays.ordered$RunDataId==runs[x], 'MedianCp'] - cp.assays.ordered[cp.assays.ordered$RunDataId==runs[x] & cp.assays.ordered$Index==1, 'MedianCp']))))
head(a)
cp.assays.ordered[cp.assays.ordered$RunDataId==5, ]
cp.assays.ordered[cp.assays.ordered$RunDataId===6, ]
cp.assays.ordered[cp.assays.ordered$RunDataId==6, ]
cp.assays.ordered[cp.assays.ordered$RunDataId==7, ]
a
head(cp.assasy.median)
head(cp.assays.median)
cp.assays.delta <- do.call(rbind, lapply(1:length(runs), function(x) data.frame(RunDataId = runs[x] , DetlaCp = (cp.assays.ordered[cp.assays.ordered$RunDataId==runs[x], 'MedianCp'] - cp.assays.ordered[cp.assays.ordered$RunDataId==runs[x] & cp.assays.ordered$Index==1, 'MedianCp']))))
max(cp.assays.ordered$Index)
max.assays <- max(cp.assays.ordered$Index)
head(cp.assays.sequence)
head(cp.assays.ordered)
head(cp.assays.delta)
head(cp.assays.ordered)
merge(cp.assays.sequence)
head(cp.assays.ordered)
head(cp.assays.sequence)
head(cp.assays.delta)
head(cp.assays.ordered)
cp.assays.delta <- do.call(rbind, lapply(1:length(runs), function(x) data.frame(RunDataId = runs[x], Index = cp.assays.ordered[cp.assays.ordered$RunDataId==runs[x],'Index'], DetlaCp = (cp.assays.ordered[cp.assays.ordered$RunDataId==runs[x], 'MedianCp'] - cp.assays.ordered[cp.assays.ordered$RunDataId==runs[x] & cp.assays.ordered$Index==1, 'MedianCp']))))
head(cp.assays.delta)
head(cp.assays.delta)
head(cp.assays.ordered)
a <- merge(cp.assays.ordered, cp.assays.delta, by=c('RunDataId','Index'))
head(a)
a[a$RunDataId==5, ]
cp.assays.ordered <- merge(cp.assays.ordered, cp.assays.delta, by=c('RunDataId','Index'))
head(cp.assays.ordered)
with(cp.assays.ordered, aggregate(MedianCp~RunDataId, FUN=min))
with(cp.assays.ordered, aggregate(MedianCp~RunDataId, FUN=max))
cp.assays.min <- with(cp.assays.ordered, aggregate(MedianCp~RunDataId, FUN=min))
cp.assays.max <- with(cp.assays.ordered, aggregate(MedianCp~RunDataId, FUN=max))
cp.assays.count <- with(cp.assays.ordered, aggregate(Index~RunDataId, FUN=max))
merge(merge(cp.assays.min, cp.assays.max, by='RunDataId'), cp.assasy.count, by='RunDataId')
merge(merge(cp.assays.min, cp.assays.max, by='RunDataId'), cp.assays.count, by='RunDataId')
cp.learn <- merge(merge(cp.assays.min, cp.assays.max, by='RunDataId'), cp.assays.count, by='RunDataId')
colnames(cp.learn) <- c('RunDataId', 'CpMin', 'CpMax', 'AssayCount')
head(cp.learn)
head(cp.assays.ordered)
cp.assasy.avg <- with(cp.assays.ordered, aggregate(MedianCp~RunDataId, FUN=mean))
cp.assays.avg <- with(cp.assays.ordered, aggregate(MedianCp~RunDataId, FUN=mean))
cp.learn <- merge(merge(merge(cp.assays.count, cp.assays.min, by='RunDataId'), cp.assays.max, by='RunDataId'), cp.assays.avg, by='RunDataId')
colnames(cp.learn) <- c('RunDataId', 'AssayCount', 'CpMin', 'CpMax', 'CpMean')
rm(cp.assasy.avg)
head(cp.learn)
a <- with(cp.assays.ordered, aggregate(MedianCp~RunDataId, FUN=sd))
View(a)
cp.assays.median[cp.assays.median$RunDataId==58, ]
cp.assays.sd <- with(cp.assays.ordered, aggregate(MedianCp~RunDataId, FUN=sd))
cp.learn <- merge(merge(merge(merge(cp.assays.count, cp.assays.min, by='RunDataId'), cp.assays.max, by='RunDataId'), cp.assays.avg, by='RunDataId'), cp.assays.sd, by='RunDataId')
colnames(cp.learn) <- c('RunDataId', 'AssayCount', 'CpMin', 'CpMax', 'CpMean', 'CpSdev')
head(cp.learn)
head(cp.assays.delta)
head(cp.assays.ordered)
cp.second.assay <- cp.assays.ordered[cp.assays.ordered$Index==2, c('RunDataId','MedianCp')]
head(cp.second.assay)
cp.learn <- merge(cp.learn, cp.second.assay, by='RunDataId', all.x=TRUE)
head(cp.learn)
colnames(cp.learn)[length(cp.learn)]
colnames(cp.learn)[length(cp.learn)] <- 'DeltaCpMin'
cp.learn[cp.learn$AssayCount >= 2, 'DeltaCpMax'] <- cp.learn[cp.learn$AssayCount >= 2, 'CpMax'] - cp.learn[cp.learn$AssayCount > 2, 'CpMin']
cp.learn[cp.learn$AssayCount >= 2, 'DeltaCpMax'] <- cp.learn[cp.learn$AssayCount >= 2, 'CpMax'] - cp.learn[cp.learn$AssayCount >= 2, 'CpMin']
head(cp.learn)
head(cp.assays.ordered)
cp.delta.avg <- with(cp.assays.ordered, aggregate(DetlaCp~RunDataId, FUN=mean))
cp.delta.sd <- with(cp.assays.ordered, aggregate(DetlaCp~RunDataId, FUN=sd))
cp.learn <- merge(cp.learn, cp.delta.avg, by='RunDataId', all.x=TRUE)
head(cp.learn)
head(cp.delta.avg)
head(cp.assays.delta)
colnames(cp.assays.delta)[3] <- 'DeltaCp'
hea(cp.assays.ordered)
head(cp.assays.ordered)
colnames(cp.assays.ordered)[5]
colnames(cp.assays.ordered)[6]
colnames(cp.assays.ordered)[6] <- 'DeltaCp'
head(cp.learn)
colnames(cp.learn)[8]
colnames(cp.learn)[9]
colnames(cp.learn)[9] <- 'DeltaCp'
colnames(cp.learn)[length(cp.learn)] <- 'DeltaCpMean'
cp.learn <- merge(cp.learn, cp.delta.sd, by='RunDataId', all.x=TRUE)
colnames(cp.learn)[length(cp.learn)] <- 'DeltaCpSdev'
head(cp.learn)
cp.learn[is.na(cp.learn$CpSdev), 'CpSdev'] <- 0
cp.learn[is.na(cp.learn$DeltaCpMin), 'DeltaCpMin'] <- 0
cp.learn[is.na(cp.learn$DeltaCpMax), 'DeltaCpMax'] <- 0
cp.learn[is.na(cp.learn$DeltaCpSdev), 'DeltaCpSdev'] <- 0
head(cp.learn)
head(cp.assays.sequence)
cp.learn <- merge(cp.learn, cp.assays.sequence[,c('RunDataId','SequenceIndex')], by='RunDataId')
colnames(cp.assays.sequence)
colnames(cp.assays.sequence)[3] <- 'SequenceIndex'
cp.learn <- merge(cp.learn, cp.assays.sequence[,c('RunDataId','SequenceIndex')], by='RunDataId')
heaD(cp.learn)
head(cp.learn)
max(cp.learn$SequenceIndex)
head(cp.learn)
colnames(cp.learn)
cp.learn[, colnames(cp.learn)!='RunDataId']
a <- cp.learn[, colnames(cp.learn)!='RunDataId']
heaD(a)
head(a)
head(a)
rm(a)
cp.learn.obs <- cp.learn[, colnames(cp.learn)!='RunDataId']
head(cp.learn.obs)
install.packages('cluster', dependencies = TRUE)
library(cluster)
library(caret)
library(RODBC)
library(lubridate)
library(ggplot2)
library(devtools)
require(dateManip)
agnes(cp.learn.obs, diss=FALSE, stand=TRUE, method='average', keep.data=FALSE, trace.lev=1)
kmeans(cp.learn.obs, centers = 100, iter.max = 10)
cp.cluster.alg.1 <- kmeans(cp.learn.obs, centers = 100, iter.max = 10)
