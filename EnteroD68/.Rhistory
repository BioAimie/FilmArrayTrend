library(caret)
head(rhino.features.neat)
rhino.cluster.alg.1 <- kmeans(rhino.features.neat, centers = 100, iter.max = 10)
rhino.cluster.alg.1 <- kmeans(rhino.features.neat, centers = 100, iter.max = 20)
summary(rhino.cluster.alg.1)
head(rhino.features.neat)
print(rhino.cluster.alg.1)
cp.cluster.alg.1$cluster
print(rhino.cluster.alg.1)
rhino.cluster.alg.1$cluster
length(rhino.cluster.alg.1$cluster)
head(rhino.cluster.alg.1$centers)
length(rhino.cluster.alg.1$centers)
length(rhino.cluster.alg.1$centers[,c('Assay1')])
head(rhino.cluster.alg.1$cluster)
head(rhino.features.neat)
cluster.alg.1.df <- cbind(rhino.features.neat, rhino.cluster.alg.1$cluster)
head(cluster.alg.1.df)
cluster.alg.1.df <- cbind(rhino.features.neat, Cluster = rhino.cluster.alg.1$cluster)
head(cluster.alg.1.df)
ggplot(cluster.alg.1.df, aes(x=SequenceIndex, y=Cluster)) + geom_point()
head(rhino.features.neat)
head(cp.rhino.sequence)
cp.rhino.sequence[grep('^HRV4', cp.rhino.sequence$Sequence), ]
unqiue(cp.rhino.sequence[grep('^HRV4', cp.rhino.sequence$Sequence), 'SequenceIndex'])
unique(cp.rhino.sequence[grep('^HRV4', cp.rhino.sequence$Sequence), 'SequenceIndex'])
unique(cp.rhino.sequence[grep('^HRV4', cp.rhino.sequence$Sequence), 'Sequence'])
unique(cp.rhino.sequence[grep('^HRV4', cp.rhino.sequence$Sequence), 'SequenceIndex'])
unique(cp.rhino.sequence[grep('^HRV4', cp.rhino.sequence$Sequence), 'SequenceIndex'])[order(unique(cp.rhino.sequence[grep('^HRV4', cp.rhino.sequence$Sequence), 'SequenceIndex']))]
ggplot(cluster.alg.1.df, aes(x=Cluster, y=SequenceIndex)) + geom_point()
head(cluster.alg.1.df)
rhino.features.neat <- rhino.features[,!(colnames(rhino.features) %in% c('Date','RunDataId','CustomerSiteId'))]
rhino.cluster.alg.1 <- kmeans(rhino.features.neat, centers = 100, iter.max = 20)
rhino.cluster.alg.1 <- kmeans(rhino.features.neat, centers = 100, iter.max = 10)
rhino.cluster.alg.1 <- kmeans(rhino.features.neat, centers = 100, iter.max = 15)
rhino.cluster.alg.1 <- kmeans(rhino.features.neat, centers = 100, iter.max = 20)
rhino.cluster.alg.1 <- kmeans(rhino.features.neat, centers = 20, iter.max = 20)
cluster.alg.1.df <- cbind(rhino.features.neat, Cluster = rhino.cluster.alg.1$cluster)
ggplot(cluster.alg.1.df, aes(x=Cluster, y=SequenceIndex)) + geom_point()
unique(cp.rhino.sequence[grep('^HRV4', cp.rhino.sequence$Sequence), 'SequenceIndex'])
ggplot(subset(cluster.alg.1.df, SequenceIndex %in% unique(cp.rhino.sequence[grep('^HRV4', cp.rhino.sequence$Sequence), 'SequenceIndex'])), aes(x=Cluster, y=SequenceIndex)) + geom_point()
install.packages('dbscan')
library(dbscan)
library(dbscan)
dbscan(rhino.features.neat)
dbscan(rhino.features.neat, eps = 0.4, minPts = 5)
46492-(1+2+3+4+5+6+7+8+9+5+6+6+8+8+7+10+5+5)
46492-46432
head(rhino.features.neat)
dbscan(rhino.features.neat[,c('SequenceIndex','PositiveRate','NegativeRate','RhinoRate')], eps=1, minPts=5)
head(rhino.features.neat)
head(rhino.features)
head(cp.rhino.sequence)
a <- merge(cp.rhino.sequence, unique(runs.df[,c('RunDataId','Date')]), by='RunDataId')
unique(cp.rhino.sequence$RunDataId)
length(unique(cp.rhino.sequence$RunDataId))
head(a)
sequence.positives <- with(data.frame(merge(cp.rhino.sequence, unique(runs.df[,c('RunDataId','Date','CustomerSiteId')]), by='RunDataId'), SequencePositives = 1), aggregate(SequencePositives~Date+CustomerSiteId, FUN=sum))
head(sequence.positives)
head(cp.rhino.sequence)
sequence.positives <- with(data.frame(merge(cp.rhino.sequence, unique(runs.df[,c('RunDataId','Date','CustomerSiteId')]), by='RunDataId'), SequencePositives = 1), aggregate(SequencePositives~Date+CustomerSiteId+SequenceIndex, FUN=sum))
head(rhino.features)
head(sequence.positives)
head(macro.featuers)
head(macro.features)
head(sequence.positives)
sequence.features <- merge(sequence.positives, macro.features[,c('Date','CustomerSiteId','Run')], by=c('Date','CustomerSiteId'), all.x=TRUE)
View(sequence.features)
head(sequence.features)
sequence.features$SequenceRate <- sequence.features$SequencePositives/sequence.features$Run
head(sequence.features)
head(rhino.features)
rhino.features <- merge(rhino.features, sequence.features[,c('Date','CustomerSiteId','SequenceIndex','SequenceRate')], by=c('Date','CustomerSiteId','SequenceIndex'))
head(rhino.features)
rhino.features.neat <- rhino.features[,!(colnames(rhino.features) %in% c('Date','RunDataId','CustomerSiteId'))]
head(rhino.features.neat)
rhino.features.neat.2$DeltaCp2 <- with(rhino.features, Cp2 - Cp1)
rhino.features.neat.2$DeltaCp3 <- with(rhino.features, Cp3 - Cp1)
rhino.features.neat.2$DeltaCp4 <- with(rhino.features, Cp4 - Cp1)
rhino.features.neat.2$DeltaCp5 <- with(rhino.features, Cp5 - Cp1)
rhino.features.neat.2$DeltaCp6 <- with(rhino.features, Cp6 - Cp1)
rhino.features.neat.2 <- rhino.features.neat
rhino.features.neat.2$DeltaCp2 <- with(rhino.features, Cp2 - Cp1)
rhino.features.neat.2$DeltaCp3 <- with(rhino.features, Cp3 - Cp1)
rhino.features.neat.2$DeltaCp4 <- with(rhino.features, Cp4 - Cp1)
rhino.features.neat.2$DeltaCp5 <- with(rhino.features, Cp5 - Cp1)
rhino.features.neat.2$DeltaCp6 <- with(rhino.features, Cp6 - Cp1)
head(rhino.features.neat.2)
rhino.features <- merge(first.rhino.assay, merge(second.rhino.assay, merge(third.rhino.assay, merge(merge(fourth.rhino.assay, fifth.rhino.assay, by=c('RunDataId','CustomerSiteId'), all.x=TRUE), sixth.rhino.assay, by=c('RunDataId','CustomerSiteId'), all.x=TRUE), by=c('RunDataId','CustomerSiteId'), all.x=TRUE), by=c('RunDataId','CustomerSiteId'), all.x=TRUE), by=c('RunDataId','CustomerSiteId'), all.x=TRUE)
colnames(rhino.features) <- c('RunDataId','CustomerSiteId','Assay1','Cp1','Assay2','Cp2','Assay3','Cp3','Assay4','Cp4','Assay5','Cp5','Assay6','Cp6')
sparse.cp <- 70
rhino.features[is.na(rhino.features$Cp2), 'Cp2'] <- sparse.cp
rhino.features[is.na(rhino.features$Cp3), 'Cp3'] <- sparse.cp
rhino.features[is.na(rhino.features$Cp4), 'Cp4'] <- sparse.cp
rhino.features[is.na(rhino.features$Cp5), 'Cp5'] <- sparse.cp
rhino.features[is.na(rhino.features$Cp6), 'Cp6'] <- sparse.cp
sparse.assay <- 0
rhino.features[is.na(rhino.features$Assay2), 'Assay2'] <- sparse.assay
rhino.features[is.na(rhino.features$Assay3), 'Assay3'] <- sparse.assay
rhino.features[is.na(rhino.features$Assay4), 'Assay4'] <- sparse.assay
rhino.features[is.na(rhino.features$Assay5), 'Assay5'] <- sparse.assay
rhino.features[is.na(rhino.features$Assay6), 'Assay6'] <- sparse.assay
run.count <- with(runs.df, aggregate(Run~CustomerSiteId+Date, FUN=sum))
positive.count <- with(data.frame(unique(cp.df[,c('RunDataId','CustomerSiteId','Date')]), Positives=1), aggregate(Positives~Date+CustomerSiteId, FUN=sum))
rhino.positives <- with(data.frame(merge(unique(runs.df[,c('RunDataId','Date')]), unique(cp.rhino.median[,c('RunDataId','CustomerSiteId')]), by='RunDataId'), RhinoPositives = 1), aggregate(RhinoPositives~Date+CustomerSiteId, FUN=sum))
rhino.features <- merge(rhino.features, unique(runs.df[,c('RunDataId','Date')]), by='RunDataId')
macro.features <- merge(run.count, merge(positive.count, rhino.positives, by=c('Date','CustomerSiteId'), all.x=TRUE), by=c('Date','CustomerSiteId'), all.x=TRUE)
macro.features[is.na(macro.features$Positives),'Positives'] <- 0
macro.features[is.na(macro.features$RhinoPositives),'RhinoPositives'] <- 0
macro.features$Negatives <- macro.features$Run - macro.features$Positives
macro.features$PositiveRate <- macro.features$Positives/macro.features$Run
macro.features$NegativeRate <- macro.features$Negatives/macro.features$Run
macro.features$RhinoRate <- macro.features$RhinoPositives/macro.features$Run
sequence.positives <- with(data.frame(merge(cp.rhino.sequence, unique(runs.df[,c('RunDataId','Date','CustomerSiteId')]), by='RunDataId'), SequencePositives = 1), aggregate(SequencePositives~Date+CustomerSiteId+SequenceIndex, FUN=sum))
sequence.features <- merge(sequence.positives, macro.features[,c('Date','CustomerSiteId','Run')], by=c('Date','CustomerSiteId'), all.x=TRUE)
sequence.features$SequenceRate <- sequence.features$SequencePositives/sequence.features$Run
rhino.features <- merge(rhino.features, macro.features, by=c('Date','CustomerSiteId'))
rhino.features <- merge(rhino.features, cp.rhino.sequence[,c('RunDataId','SequenceIndex')], by='RunDataId')
rhino.features <- merge(rhino.features, sequence.features[,c('Date','CustomerSiteId','SequenceIndex','SequenceRate')], by=c('Date','CustomerSiteId','SequenceIndex'))
rhino.features.neat <- rhino.features[,!(colnames(rhino.features) %in% c('Date','RunDataId','CustomerSiteId'))]
rhino.features.neat.2 <- rhino.features.neat
rhino.features.neat.2$DeltaCp2 <- with(rhino.features, Cp2 - Cp1)
rhino.features.neat.2$DeltaCp3 <- with(rhino.features, Cp3 - Cp1)
rhino.features.neat.2$DeltaCp4 <- with(rhino.features, Cp4 - Cp1)
rhino.features.neat.2$DeltaCp5 <- with(rhino.features, Cp5 - Cp1)
rhino.features.neat.2$DeltaCp6 <- with(rhino.features, Cp6 - Cp1)
head(rhino.features.neat.2)
head(rhino.features.neat.2[, colnames(rhino.features.neat.2)[grep('Delta|Assay|Rate', colnames(rhino.features.neat.2))]])
rhino.features.neat.2 <- rhino.features.neat.2[, colnames(rhino.features.neat.2)[grep('Delta|Assay|Rate', colnames(rhino.features.neat.2))]]
head(rhino.features.neat.2)
rhino.features.neat.2 <- rhino.features.neat
rhino.features.neat.2$DeltaCp2 <- with(rhino.features, Cp2 - Cp1)
rhino.features.neat.2$DeltaCp3 <- with(rhino.features, Cp3 - Cp1)
rhino.features.neat.2$DeltaCp4 <- with(rhino.features, Cp4 - Cp1)
rhino.features.neat.2$DeltaCp5 <- with(rhino.features, Cp5 - Cp1)
rhino.features.neat.2$DeltaCp6 <- with(rhino.features, Cp6 - Cp1)
head(rhino.features.neat.2)
library(ggplot2)
library(RODBC)
library(lubridate)
library(ggplot2)
library(devtools)
require(dateManip)
library(cluster)
library(caret)
library(dbscan)
head(rhino.features.neat.2)
ggplot(rhino.features.neat.2, aes(x=RhinoRate, y=SequenceRate, color=SequenceIndex)) + geom_point()
ggplot(rhino.features.neat.2, aes(x=RhinoRate, y=SequenceRate, color=SequenceIndex)) + geom_point() + facet_wrap(~Assay1)
rhino.assays
ggplot(rhino.features.neat.2, aes(x=RhinoRate, y=SequenceRate, color=as.factor(SequenceIndex))) + geom_point() + facet_wrap(~Assay1)
ggplot(rhino.features.neat.2, aes(x=RhinoRate, y=SequenceRate, color=as.factor(SequenceIndex))) + geom_point()
head(rhino.features.neat.2)
with(rhino.features.neat.2, ifelse(DeltaCp2 <= 2, 1,
ifelse(DeltaCp2 <= 5, 2,
ifelse(DeltaCp2 <= 8, 3,
ifelse(DeltaCp2 <= 11, 4,
ifelse(DeltaCp2 <= 15, 5,
ifelse(DeltaCp2 <= 20, 6,
ifelse(DeltaCp2 <= 25, 7, 8))))))))
rhino.features.neat.2$DeltaBinCp2 <- with(rhino.features.neat.2, ifelse(DeltaCp2 <= 2, 1,
ifelse(DeltaCp2 <= 5, 2,
ifelse(DeltaCp2 <= 8, 3,
ifelse(DeltaCp2 <= 11, 4,
ifelse(DeltaCp2 <= 15, 5,
ifelse(DeltaCp2 <= 20, 6,
ifelse(DeltaCp2 <= 25, 7, 8))))))))
rhino.features.neat.2$DeltaBinCp3 <- with(rhino.features.neat.2, ifelse(DeltaCp3 <= 2, 1,
ifelse(DeltaCp3 <= 5, 2,
ifelse(DeltaCp3 <= 8, 3,
ifelse(DeltaCp3 <= 11, 4,
ifelse(DeltaCp3 <= 15, 5,
ifelse(DeltaCp3 <= 20, 6,
ifelse(DeltaCp3 <= 25, 7, 8))))))))
rhino.features.neat.2$DeltaBinCp4 <- with(rhino.features.neat.2, ifelse(DeltaCp4 <= 2, 1,
ifelse(DeltaCp4 <= 5, 2,
ifelse(DeltaCp4 <= 8, 3,
ifelse(DeltaCp4 <= 11, 4,
ifelse(DeltaCp4 <= 15, 5,
ifelse(DeltaCp4 <= 20, 6,
ifelse(DeltaCp4 <= 25, 7, 8))))))))
rhino.features.neat.2$DeltaBinCp5 <- with(rhino.features.neat.2, ifelse(DeltaCp5 <= 2, 1,
ifelse(DeltaCp5 <= 5, 2,
ifelse(DeltaCp5 <= 8, 3,
ifelse(DeltaCp5 <= 11, 4,
ifelse(DeltaCp5 <= 15, 5,
ifelse(DeltaCp5 <= 20, 6,
ifelse(DeltaCp5 <= 25, 7, 8))))))))
rhino.features.neat.2$DeltaBinCp6 <- with(rhino.features.neat.2, ifelse(DeltaCp6 <= 2, 1,
ifelse(DeltaCp6 <= 5, 2,
ifelse(DeltaCp6 <= 8, 3,
ifelse(DeltaCp6 <= 11, 4,
ifelse(DeltaCp6 <= 15, 5,
ifelse(DeltaCp6 <= 20, 6,
ifelse(DeltaCp6 <= 25, 7, 8))))))))
head(rhino.features.neat.2)
rhino.features.neat.2 <- rhino.features.neat.2[, colnames(rhino.features.neat.2)[grep('DeltaBin|Assay|Rate', colnames(rhino.features.neat.2))]]
head(rhino.features.neat.2)
rhino.features.neat.2 <- rhino.features.neat
rhino.features.neat.2$DeltaCp2 <- with(rhino.features, Cp2 - Cp1)
rhino.features.neat.2$DeltaCp3 <- with(rhino.features, Cp3 - Cp1)
rhino.features.neat.2$DeltaCp4 <- with(rhino.features, Cp4 - Cp1)
rhino.features.neat.2$DeltaCp5 <- with(rhino.features, Cp5 - Cp1)
rhino.features.neat.2$DeltaCp6 <- with(rhino.features, Cp6 - Cp1)
rhino.features.neat.2$DeltaBinCp2 <- with(rhino.features.neat.2, ifelse(DeltaCp2 <= 2, 1,
ifelse(DeltaCp2 <= 5, 2,
ifelse(DeltaCp2 <= 8, 3,
ifelse(DeltaCp2 <= 11, 4,
ifelse(DeltaCp2 <= 15, 5,
ifelse(DeltaCp2 <= 20, 6,
ifelse(DeltaCp2 <= 25, 7, 8))))))))
rhino.features.neat.2$DeltaBinCp3 <- with(rhino.features.neat.2, ifelse(DeltaCp3 <= 2, 1,
ifelse(DeltaCp3 <= 5, 2,
ifelse(DeltaCp3 <= 8, 3,
ifelse(DeltaCp3 <= 11, 4,
ifelse(DeltaCp3 <= 15, 5,
ifelse(DeltaCp3 <= 20, 6,
ifelse(DeltaCp3 <= 25, 7, 8))))))))
rhino.features.neat.2$DeltaBinCp4 <- with(rhino.features.neat.2, ifelse(DeltaCp4 <= 2, 1,
ifelse(DeltaCp4 <= 5, 2,
ifelse(DeltaCp4 <= 8, 3,
ifelse(DeltaCp4 <= 11, 4,
ifelse(DeltaCp4 <= 15, 5,
ifelse(DeltaCp4 <= 20, 6,
ifelse(DeltaCp4 <= 25, 7, 8))))))))
rhino.features.neat.2$DeltaBinCp5 <- with(rhino.features.neat.2, ifelse(DeltaCp5 <= 2, 1,
ifelse(DeltaCp5 <= 5, 2,
ifelse(DeltaCp5 <= 8, 3,
ifelse(DeltaCp5 <= 11, 4,
ifelse(DeltaCp5 <= 15, 5,
ifelse(DeltaCp5 <= 20, 6,
ifelse(DeltaCp5 <= 25, 7, 8))))))))
rhino.features.neat.2$DeltaBinCp6 <- with(rhino.features.neat.2, ifelse(DeltaCp6 <= 2, 1,
ifelse(DeltaCp6 <= 5, 2,
ifelse(DeltaCp6 <= 8, 3,
ifelse(DeltaCp6 <= 11, 4,
ifelse(DeltaCp6 <= 15, 5,
ifelse(DeltaCp6 <= 20, 6,
ifelse(DeltaCp6 <= 25, 7, 8))))))))
head(rhino.features.neat.2)
head(rhino.features)
rhino.features.neat.2 <- rhino.features
rhino.features.neat.2$DeltaCp2 <- with(rhino.features, Cp2 - Cp1)
rhino.features.neat.2$DeltaCp3 <- with(rhino.features, Cp3 - Cp1)
rhino.features.neat.2$DeltaCp4 <- with(rhino.features, Cp4 - Cp1)
rhino.features.neat.2$DeltaCp5 <- with(rhino.features, Cp5 - Cp1)
rhino.features.neat.2$DeltaCp6 <- with(rhino.features, Cp6 - Cp1)
rhino.features.neat.2$DeltaBinCp2 <- with(rhino.features.neat.2, ifelse(DeltaCp2 <= 2, 1,
ifelse(DeltaCp2 <= 5, 2,
ifelse(DeltaCp2 <= 8, 3,
ifelse(DeltaCp2 <= 11, 4,
ifelse(DeltaCp2 <= 15, 5,
ifelse(DeltaCp2 <= 20, 6,
ifelse(DeltaCp2 <= 25, 7, 8))))))))
rhino.features.neat.2$DeltaBinCp3 <- with(rhino.features.neat.2, ifelse(DeltaCp3 <= 2, 1,
ifelse(DeltaCp3 <= 5, 2,
ifelse(DeltaCp3 <= 8, 3,
ifelse(DeltaCp3 <= 11, 4,
ifelse(DeltaCp3 <= 15, 5,
ifelse(DeltaCp3 <= 20, 6,
ifelse(DeltaCp3 <= 25, 7, 8))))))))
rhino.features.neat.2$DeltaBinCp4 <- with(rhino.features.neat.2, ifelse(DeltaCp4 <= 2, 1,
ifelse(DeltaCp4 <= 5, 2,
ifelse(DeltaCp4 <= 8, 3,
ifelse(DeltaCp4 <= 11, 4,
ifelse(DeltaCp4 <= 15, 5,
ifelse(DeltaCp4 <= 20, 6,
ifelse(DeltaCp4 <= 25, 7, 8))))))))
rhino.features.neat.2$DeltaBinCp5 <- with(rhino.features.neat.2, ifelse(DeltaCp5 <= 2, 1,
ifelse(DeltaCp5 <= 5, 2,
ifelse(DeltaCp5 <= 8, 3,
ifelse(DeltaCp5 <= 11, 4,
ifelse(DeltaCp5 <= 15, 5,
ifelse(DeltaCp5 <= 20, 6,
ifelse(DeltaCp5 <= 25, 7, 8))))))))
rhino.features.neat.2$DeltaBinCp6 <- with(rhino.features.neat.2, ifelse(DeltaCp6 <= 2, 1,
ifelse(DeltaCp6 <= 5, 2,
ifelse(DeltaCp6 <= 8, 3,
ifelse(DeltaCp6 <= 11, 4,
ifelse(DeltaCp6 <= 15, 5,
ifelse(DeltaCp6 <= 20, 6,
ifelse(DeltaCp6 <= 25, 7, 8))))))))
head(rhino.features.neat.2)
ggplot(rhino.features.neat.2, aes(x=Date, y=RhinoRate, color=SequenceIndex)) + geom_point()
ggplot(rhino.features.neat.2, aes(x=Date, y=RhinoRate, color=as.factor(SequenceIndex))) + geom_point() + facet_wrap(~CustomerSiteId)
ggplot(rhino.features.neat.2, aes(x=Date, y=RhinoRate, color=as.factor(Assay1))) + geom_point() + facet_wrap(~CustomerSiteId)
head(rhino.features.neat.2)
library(RODBC)
library(lubridate)
library(ggplot2)
library(devtools)
require(dateManip)
library(cluster)
library(caret)
library(dbscan)
head(rhino.features.neat.2)
ggplot(rhino.features.neat.2, aes(x=Date, y=SequenceRate)) + geom_bar(stat='identity') + facet_wrap(~SequenceIndex)
ggplot(subset(rhino.features.neat.2, SequenceIndex < 52), aes(x=Date, y=SequenceRate)) + geom_bar(stat='identity') + facet_wrap(~SequenceIndex)
ggplot(subset(rhino.features.neat.2, SequenceIndex < 52), aes(x=Date, y=SequenceRate)) + geom_bar(stat='identity') + facet_wrap(~SequenceIndex, scales='free_y')
head(rhino.sequence.index)
grep('^HRV4', rhino.sequence.index$Sequence)
rhino.sequence.index[grep('^HRV4', rhino.sequence.index$Sequence),]
rhino.sequence.index[grep('^HRV4', rhino.sequence.index$Sequence),'SequenceIndex']
ggplot(subset(rhino.features.neat.2, SequenceIndex %in% rhino.sequence.index[grep('^HRV4', rhino.sequence.index$Sequence),'SequenceIndex']), aes(x=Date, y=SequenceRate)) + geom_bar(stat='identity') + facet_wrap(~SequenceIndex, scales='free_y')
max(rhino.sequence.index$SequenceIndex)
rhino.features.neat.2[rhino.features.neat.2$SequenceIndex==270,]
rhino.sequence.index[rhino.sequence.index$SequenceIndex==9, ]
head(rhino.features.neat.2)
ggplot(rhino.features.neat.2, aes(x=Date, y=SequenceRate, fill=SequenceIndex)) + geom_bar(stat='identity')
ggplot(rhino.features.neat.2, aes(x=Date, y=SequenceRate, fill=as.factor(SequenceIndex))) + geom_bar(stat='identity')
head(rhino.features.neat.2)
head(run.count)
run.count[run.count$Run < 5, ]
a <- run.count[run.count$Run < 5, ]
head(a)
length(a$Date)
length(rhino.features.neat.2$Date)
263/46492
remove.data <- run.count[run.count$Run < 5, ]
merge(rhino.features.neat.2, remove.data, by=c('Date','CustomerSiteId'), all.x=TRUE)
rhino.features.neat.2 <- merge(rhino.features.neat.2, remove.data, by=c('Date','CustomerSiteId'), all.x=TRUE)
rhino.features.neat.2[is.na(rhino.features.neat.2$Run.y), ]
head(rhino.features.neat.2)
head(rhino.features.neat.2[is.na(rhino.features.neat.2$Run.y), colnames(rhino.features.neat.2)!='Run.y'])
rhino.features.neat.2 <- rhino.features.neat.2[is.na(rhino.features.neat.2$Run.y), colnames(rhino.features.neat.2)!='Run.y']
head(rhino.featuers.neat.2)
head(rhino.features.neat.2)
year(rhino.features.neat.2$Date)
head(rhino.features.neat.2)
ggplot(rhino.features.neat.2[year(rhino.features.neat.2$Date)==2013, ], aes(x=Date, y=SequenceRate, fill=as.factor(SequenceIndex))) + geom_bar(stat='identity')
ggplot(rhino.features.neat.2[year(rhino.features.neat.2$Date)==2014, ], aes(x=Date, y=SequenceRate, fill=as.factor(SequenceIndex))) + geom_bar(stat='identity')
rhino.sequence.index[grep('^HRV4', rhino.sequence.index$Sequence),'SequenceIndex']
rhino.sequence.index[grep('^HRV4', rhino.sequence.index$Sequence),]
rhino.sequence.index[grep('HRV4, HRV1', rhino.sequence.index$Sequence),]
ggplot(rhino.features.neat.2[year(rhino.features.neat.2$Date)==2013 & rhino.features.neat.2$SequenceIndex %in% c(3,9,18,73), ], aes(x=Date, y=SequenceRate, fill=as.factor(SequenceIndex))) + geom_bar(stat='identity')
ggplot(rhino.features.neat.2[year(rhino.features.neat.2$Date)==2014 & rhino.features.neat.2$SequenceIndex %in% c(3,9,18,73), ], aes(x=Date, y=SequenceRate, fill=as.factor(SequenceIndex))) + geom_bar(stat='identity')
ggplot(rhino.features.neat.2, aes(x=Date, y=Run)) + geom_bar(stat='identity')
ggplot(rhino.features.neat.2, aes(x=Date, y=Run.x)) + geom_bar(stat='identity')
ggplot(rhino.features.neat.2, aes(x=Date, y=PositiveRate)) + geom_bar(stat='identity')
ggplot(with(rhino.features.neat.2, aggregate(PositiveRate~Date, FUN=mean)), aes(x=Date, y=PositiveRate)) + geom_bar(stat='identity')
ggplot(with(rhino.features.neat.2, aggregate(RhinoRate~Date, FUN=mean)), aes(x=Date, y=RhinoRate)) + geom_bar(stat='identity')
head(rhino.features.neat.2)
lm(SequenceIndex~Cp1+Cp2+Cp3+Cp4+Cp5+Cp6, data=rhino.features.neat.2)
cp.fit.sequence <- lm(SequenceIndex~Cp1+Cp2+Cp3+Cp4+Cp5+Cp6, data=rhino.features.neat.2)
summary(cp.fit.sequence)
cp.fit.sequence <- lm(SequenceIndex~Cp1+Cp2+Cp3+Cp4+Cp5+Cp6, data=rhino.features.neat.2[year(rhino.features.neat.2$Date)<2016, ])
predict(cp.fit.sequence, newdata = rhino.features.neat.2[year(rhino.features.neat.2$Date)>=2016, ])
predicted.sequence <- predict(cp.fit.sequence, newdata = rhino.features.neat.2[year(rhino.features.neat.2$Date)>=2016, ])
a <- cbind(rhino.features.neat.2[year(rhino.features.neat.2$Date)<2016, ], predicted.sequence)
a <- cbind(rhino.features.neat.2[year(rhino.features.neat.2$Date)>=2016, ], predicted.sequence)
head(a)
range(a$predicted.sequence)
range(a$SequenceIndex)
123/6
cp.fit.sequence <- lm(SequenceIndex~Assay1+Assay2+Assay3+Assay4+Assay5+Assay6, data=rhino.features.neat.2[year(rhino.features.neat.2$Date)<2016, ])
predicted.sequence <- predict(cp.fit.sequence, newdata = rhino.features.neat.2[year(rhino.features.neat.2$Date)>=2016, ])
a <- cbind(rhino.features.neat.2[year(rhino.features.neat.2$Date)>=2016, ], predicted.sequence)
head(a)
range(a$predicted.sequence)
summary(cp.fit.sequence)
rm(cp.fit.sequence, a)
rm(predicted.sequence)
poisson.test(100)
poisson.test(3)
head(cp.rhino.median)
head(rhino.features)
head(cp.rhino.sequence)
head(cp.rhino.median)
head(cp.rhino.ordered)
head(rhino.assays)
write.csv(cp.rhino.ordered, file='rhinoMedianCp.csv', row.names = FALSE, col.names = TRUE)
head(rhino.features)
rhino.features.neat.3 <- rhino.features[,c('Cp1','Cp2','Cp3','Cp4','Cp5','Cp6')]
head(rhino.features.neat.3)
library(RODBC)
library(lubridate)
library(ggplot2)
library(devtools)
require(dateManip)
library(cluster)
library(caret)
library(dbscan)
install.packages('C50', dependencies = TRUE)
library(C50)
head(rhino.features.neat.3)
head(iris)
length(iris$Sepal.Length)
trainIndex <- createDataPartition(rhino.features.neat.3, p=0.3, list=FALSE, times=1)
trainIndex <- createDataPartition(rhino.features.neat.3$Cp1, p=0.3, list=FALSE, times=1)
set.seed(3456)
trainIndex <- createDataPartition(rhino.features.neat.3$Cp1, p=0.3, list=FALSE, times=1)
head(trainIndex)
rhino.train <- rhino.features.neat.3[trainIndex, ]
rhino.test <- rhino.features.neat.3[-trainIndex, ]
head(rhino.train)
kmeans(rhino.train, 12)
kmeans.rhino.3 <- kmeans(rhino.train, 12)
predict(kmeans.rhino.3, rhino.test)
predict(kmeans.rhino.3, newdata = rhino.test)
predict(kmeans.rhino.3, newdata = rhino.test, method='kmeans')
summary(kmeans.rhino.3)
kmeans.rhino.3$cluster
a <- cbind(rhino.features.neat.3, kmeans.rhino.3$cluster)
a <- cbind(rhino.train, kmeans.rhino.3$cluster)
head(a)
a <- cbind(rhino.train, Cluster = kmeans.rhino.3$cluster)
head(a)
head(rhino.reatures.neat.2)
head(rhino.features.neat.2)
head(rhino.features.neat)
head(cp.rhino.ordered)
head(rhino.features)
head(cp.rhino.sequence)
head(cp.rhino.sequence)
head(rhino.featurse)
head(rhino.features)
grep('^HRV4, HRV1, HRV2, HRV3', cp.rhino.sequence$Sequence)
grep('^HRV4', cp.rhino.sequence$Sequence)
cp.rhino.sequence[grep('^HRV4', cp.rhino.sequence$Sequence), ]
unique(cp.rhino.sequence[grep('^HRV4', cp.rhino.sequence$Sequence), 'SequenceIndex'])
unique(cp.rhino.sequence[grep('^HRV4', cp.rhino.sequence$Sequence), c('Sequence','SequenceIndex')])
unique(cp.rhino.sequence[grep('^HRV4.', cp.rhino.sequence$Sequence), c('Sequence','SequenceIndex')])
unique(cp.rhino.sequence[grep('^HRV4$', cp.rhino.sequence$Sequence), c('Sequence','SequenceIndex')])
unique(cp.rhino.sequence[grep('^HRV4$|^HRV4, HRV1, HRV2, HRV3, HRV4$|^HRV4, HRV1, HRV2$|^HRV4, HRV1$', cp.rhino.sequence$Sequence), c('Sequence','SequenceIndex')])
unique(cp.rhino.sequence[grep('^HRV4$|^HRV4, HRV1, HRV2, HRV3$|^HRV4, HRV1, HRV2$|^HRV4, HRV1$', cp.rhino.sequence$Sequence), c('Sequence','SequenceIndex')])
evd68.ids <- unique(cp.rhino.sequence[grep('^HRV4$|^HRV4, HRV1, HRV2, HRV3$|^HRV4, HRV1, HRV2$|^HRV4, HRV1$', cp.rhino.sequence$Sequence), 'SequenceIndex'])
head(rhino.features)
rhino.features[rhino.features$SequenceIndex %in% evd68.ids, ]
head(rhino.features[rhino.features$SequenceIndex %in% evd68.ids, ])
b <- rhino.features[rhino.features$SequenceIndex %in% evd68.ids, ]
head(b)
with(data.frame(b, SequencePositives = 1), aggregate(cbind(Run, SequencePositives)~Date, FUN=sum))
head(with(data.frame(b, SequencePositives = 1), aggregate(cbind(Run, SequencePositives)~Date, FUN=sum)))
d <- with(data.frame(b, SequencePositives = 1), aggregate(cbind(Run, SequencePositives)~Date, FUN=sum))
d$Rate <- with(d, SequencePositives/Run)
ggplot(d, aes(x=Date, y=Rate)) + geom_bar(stat='identity')
ggplot(subset(d, year(Date) > 2013), aes(x=Date, y=Rate)) + geom_bar(stat='identity')
head(rhino.features.neat)
rhino.features.neat[,c('Cp1','Cp2','Cp3','Cp4','Cp5','Cp6')]
a <- rhino.features.neat[,c('Cp1','Cp2','Cp3','Cp4','Cp5','Cp6')]
write.csv(a, 'rhinoMedianCpPivoted.csv')
head(rhino.features.neat.2)
head(rhino.features.neat.2[,c(1:3,6,8,10,12,14,16)])
head(rhino.features.neat.2[,c(1:3,6,8,10,12,14,16, 17, 18, 19, 20)])
data.frame(rhino.features.neat.2[,c(1:3,6,8,10,12,14,16, 17, 18, 19, 20)], SequencePositives = 1)
csv.data.export <- data.frame(rhino.features.neat.2[,c(1:3,6,8,10,12,14,16, 17, 18, 19, 20)], SequencePositives = 1)
head(csv.data.export)
grep('Run.x', colnames(csv.data.export))
colnames(csv.data.export)[grep('Run.x', colnames(csv.data.export))]
colnames(csv.data.export)[grep('Run.x', colnames(csv.data.export))] <- 'Runs'
write.csv(csv.data.export, 'rhinoMedianCpFeatures.csv')
head(d)
head(a)
rhino.features.neat.3 <- rhino.features[,c('Cp1','Cp2','Cp3','Cp4','Cp5','Cp6')]
set.seed(3456)
trainIndex <- createDataPartition(rhino.features.neat.3$Cp1, p=0.3, list=FALSE, times=1)
rhino.train <- rhino.features.neat.3[trainIndex, ]
rhino.test <- rhino.features.neat.3[-trainIndex, ]
kmeans.rhino.3 <- kmeans(rhino.train, 12)
a <- cbind(rhino.train, Cluster = kmeans.rhino.3$cluster)
evd68.ids <- unique(cp.rhino.sequence[grep('^HRV4$|^HRV4, HRV1, HRV2, HRV3$|^HRV4, HRV1, HRV2$|^HRV4, HRV1$', cp.rhino.sequence$Sequence), 'SequenceIndex'])
b <- rhino.features[rhino.features$SequenceIndex %in% evd68.ids, ]
d <- with(data.frame(b, SequencePositives = 1), aggregate(cbind(Run, SequencePositives)~Date, FUN=sum))
d$Rate <- with(d, SequencePositives/Run)
library(RODBC)
library(lubridate)
library(ggplot2)
library(devtools)
require(dateManip)
library(cluster)
library(caret)
library(dbscan)
library(C50)
rhino.features.neat.3 <- rhino.features[,c('Cp1','Cp2','Cp3','Cp4','Cp5','Cp6')]
set.seed(3456)
trainIndex <- createDataPartition(rhino.features.neat.3$Cp1, p=0.3, list=FALSE, times=1)
rhino.train <- rhino.features.neat.3[trainIndex, ]
rhino.test <- rhino.features.neat.3[-trainIndex, ]
kmeans.rhino.3 <- kmeans(rhino.train, 12)
a <- cbind(rhino.train, Cluster = kmeans.rhino.3$cluster)
evd68.ids <- unique(cp.rhino.sequence[grep('^HRV4$|^HRV4, HRV1, HRV2, HRV3$|^HRV4, HRV1, HRV2$|^HRV4, HRV1$', cp.rhino.sequence$Sequence), 'SequenceIndex'])
b <- rhino.features[rhino.features$SequenceIndex %in% evd68.ids, ]
d <- with(data.frame(b, SequencePositives = 1), aggregate(cbind(Run, SequencePositives)~Date, FUN=sum))
d$Rate <- with(d, SequencePositives/Run)
head(a)
head(rhino.train)
trainIndex
length(trainIndex)
head(a)
head(rhino.features)
rhino.features[trainIndex, ]
head(rhino.features[trainIndex, ])
head(rhino.features[trainIndex, 'Date'])
rhino.features[trainIndex, 'Date']
a <- cbind(a, Date = rhino.features[trainIndex, 'Date'])
head(a)
with(data.frame(a, Record = 1), aggregate(Record~Date+Cluster, FUN=sum))
cluster.count.by.date <- with(data.frame(a, Record = 1), aggregate(Record~Date+Cluster, FUN=sum))
head(a)
head(cluster.count.by.date)
obs.count.by.date <- with(data.frame(a, Total = 1), aggregate(Total~Date, FUN=sum))
merge(obs.count.by.date, cluster.count.by.date, by=c('Date'))
f <- merge(obs.count.by.date, cluster.count.by.date, by=c('Date'))
head(f)
ggplot(f, aes(x=Date, y=Record/Total, color=Cluster)) + geom_point()
ggplot(subset(f, Cluster = 3), aes(x=Date, y=Record/Total, color=Cluster)) + geom_point()
ggplot(subset(f, Cluster = 3), aes(x=Date, y=Record/Total, color=as.factor(Cluster))) + geom_point()
ggplot(subset(f, Cluster == 3), aes(x=Date, y=Record/Total, color=as.factor(Cluster))) + geom_point()
ggplot(subset(f, Cluster == 1), aes(x=Date, y=Record/Total, color=as.factor(Cluster))) + geom_point()
ggplot(f, aes(x=Date, y=Record/Total)) + geom_point() + facet_wrap(~Cluster)
ggplot(f, aes(x=Date, y=Record/Total, group=Cluster)) + geom_line() + facet_wrap(~Cluster)
ggplot(subset(f, year(Date) > 2013), aes(x=Date, y=Record/Total, group=Cluster)) + geom_line() + facet_wrap(~Cluster)
