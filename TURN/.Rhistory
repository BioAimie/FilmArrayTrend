ggplot(site.turn.adj, aes(x=YearWeek, y=SpecRuns, fill=Panels)) + geom_bar(stat='identity') + facet_wrap(~CustomerSiteId, scale='free_y') + labs(title='TURN_omega') + scale_x_discrete(breaks = dateBreaks, labels = dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1))
ggplot(site.turn.adj, aes(x=YearWeek, y=adjTURN, group='SiteTURN', color='SiteTURN')) + geom_line(size=1.5) + geom_line(aes(x=YearWeek, y=adjTURN, group='NationalTURN', color='NationalTURN'), data=natn.turn.adj, size=1.5) + scale_color_manual(values=c('black','blue')) + facet_wrap(~CustomerSiteId, scale='free_y') + labs(title='TURN_omega') + scale_x_discrete(breaks = dateBreaks, labels = dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1))
head(site.turn.adj)
source('~/FilmArrayTrend/Rfunctions/TURN_omega.R', echo=TRUE)
site.turn.adj <- do.call(rbind, lapply(1:length(sites), function(x) turn(runs.reg.date, 'CustomerSiteId', sites[x], 'RP', calendar.df, 30)))
source('~/FilmArrayTrend/Rfunctions/TURN_omega.R', echo=TRUE)
turn(runs.reg.date, 'CustomerSiteId', '31', 'RP', calendar.df, 30)
source('~/FilmArrayTrend/Rfunctions/TURN_omega.R', echo=TRUE)
turn(runs.reg.date, 'CustomerSiteId', '31', 'RP', calendar.df, 30)
head(turn(runs.reg.date, 'CustomerSiteId', '31', 'RP', calendar.df, 30))
source('~/FilmArrayTrend/Rfunctions/TURN_omega.R', echo=TRUE)
head(turn(runs.reg.date, 'CustomerSiteId', '31', 'RP', calendar.df, 30))
source('~/FilmArrayTrend/Rfunctions/TURN_omega.R', echo=TRUE)
head(turn(runs.reg.date, 'CustomerSiteId', '31', 'RP', calendar.df, 30))
source('~/FilmArrayTrend/Rfunctions/TURN_omega.R', echo=TRUE)
head(turn(runs.reg.date, 'CustomerSiteId', '31', 'RP', calendar.df, 30))
source('~/FilmArrayTrend/Rfunctions/TURN_omega.R', echo=TRUE)
head(turn(runs.reg.date, 'CustomerSiteId', '31', 'RP', calendar.df, 30))
source('~/FilmArrayTrend/Rfunctions/TURN_omega.R', echo=TRUE)
a <- turn(runs.reg.date, 'CustomerSiteId', '31', 'RP', calendar.df, 30)
source('~/FilmArrayTrend/Rfunctions/TURN_omega.R', echo=TRUE)
b <- turn(runs.reg.date, 'CustomerSiteId', '31', 'RP', calendar.df, 30)
head(a)
head(b)
rbind(a, b)
source('~/FilmArrayTrend/Rfunctions/TURN_omega.R', echo=TRUE)
rm(a, b)
turn(runs.reg.date, 'CustomerSiteId', '31', 'RP', calendar.df, 30)
source('~/FilmArrayTrend/Rfunctions/TURN_omega.R', echo=TRUE)
turn(runs.reg.date, 'CustomerSiteId', '31', 'RP', calendar.df, 30)
source('~/FilmArrayTrend/Rfunctions/TURN_omega.R', echo=TRUE)
turn(runs.reg.date, 'CustomerSiteId', '31', 'RP', calendar.df, 30)
source('~/FilmArrayTrend/Rfunctions/TURN_omega.R', echo=TRUE)
turn(runs.reg.date, 'CustomerSiteId', '31', 'RP', calendar.df, 30)
source('~/FilmArrayTrend/Rfunctions/TURN_omega.R', echo=TRUE)
turn(runs.reg.date, 'CustomerSiteId', '31', 'RP', calendar.df, 30)
source('~/FilmArrayTrend/Rfunctions/TURN_omega.R', echo=TRUE)
turn(runs.reg.date, 'CustomerSiteId', '31', 'RP', calendar.df, 30)
a <- turn(runs.reg.date, 'CustomerSiteId', '31', 'RP', calendar.df, 30)
head(a)
View(a)
a$Try <- a$TURN/a$TPRN
ggplot(a, aes(x=YearWeek, y=Try)) + geom_bar(stat='identity')
ggplot(a, aes(x=YearWeek, y=Try)) + geom_bar(stat='identity') + geom_line(data=a, aes(x=YearWeek, y=SpecRuns/10, group=1), lwd=1.5)
ggplot(a, aes(x=YearWeek, y=Try)) + geom_bar(stat='identity') + geom_line(data=a, aes(x=YearWeek, y=SpecRuns/100, group=1), lwd=1.5)
source('~/FilmArrayTrend/Rfunctions/TURN_omega.R', echo=TRUE)
a <- turn(runs.reg.date, 'CustomerSiteId', '31', 'RP', calendar.df, 30)
head(a)
View(a)
source('~/FilmArrayTrend/Rfunctions/TURN_omega.R', echo=TRUE)
a <- turn(runs.reg.date, 'CustomerSiteId', '31', 'RP', calendar.df, 30)
ggplot(a, aes(x=YearWeek, y=adjTURN, group='TURN', color='TURN')) + geom_line(lwd=1.5) + geom_line(data=a, aes(x=YearWeek, y=adjTPRN, group='TPRN', color='TPRN'), lwd=1.5)
ggplot(a, aes(x=YearWeek, y=adjTURN, group='TURN', color='TURN')) + geom_line(lwd=1.5) + geom_line(data=a, aes(x=YearWeek, y=adjTPRN, group='TPRN', color='TPRN'), lwd=1.5) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0.5))
source('~/FilmArrayTrend/Rfunctions/TURN_omega.R', echo=TRUE)
a <- turn(runs.reg.date, 'CustomerSiteId', '31', 'RP', calendar.df, 30)
ggplot(a, aes(x=YearWeek, y=adjTURN, group='TURN', color='TURN')) + geom_line(lwd=1.5) + geom_line(data=a, aes(x=YearWeek, y=adjTPRN, group='TPRN', color='TPRN'), lwd=1.5) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0.5))
head(a)
ggplot(a, aes(x=YearWeek, y=adjTURN, group='TURN', color='TURN')) + geom_line(lwd=1.5) + geom_line(data=a, aes(x=YearWeek, y=adjTPRN, group='TPRN', color='TPRN'), lwd=1.5) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0.5)) + geom_line(data=a, aes(x=YearWeek, y=SpecRuns/25, group='Runs'), lwd=1.5, color='black')
workDir <-'~/FilmArrayTrend/TURN/'
setwd(workDir)
# load libraries
library(RODBC)
library(lubridate)
library(xlsx)
library(ggplot2)
library(grid)
library(gridExtra)
library(scales)
library(gtable)
library(RColorBrewer)
library(devtools)
library(dplyr)
library(tidyr)
require(dateManip)
ggplot(a, aes(x=YearWeek, y=adjTURN, group='TURN', color='TURN')) + geom_line(lwd=1.5) + geom_line(data=a, aes(x=YearWeek, y=adjTPRN, group='TPRN', color='TPRN'), lwd=1.5) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0.5)) + geom_line(data=a, aes(x=YearWeek, y=SpecRuns/25, group='Runs'), lwd=1.5, color='black')
head(a)
with(a, plot(x=SpecRuns, y=SpecPositives))
s <- subset(a, YearWeek > '2014-52' & YearWeek < 2016-26)
s <- subset(a, as.character(YearWeek) > '2014-52' & as.character(YearWeek) < 2016-26)
s <- a[as.character(a$YearWeek) > '2014-52' & as.character(a$YearWeek) < 2016-26, ]
as.character(a$YearWeek)
s <- a[as.character(a$YearWeek) > '2014-52' & as.character(a$YearWeek) < '2016-26', ]
View(s)
s$Detection <- s$SpecPositives/s$SpecRuns
ggplot(a, aes(x=YearWeek, y=adjTURN, group='TURN', color='TURN')) + geom_line(lwd=1.5) + geom_line(data=a, aes(x=YearWeek, y=adjTPRN, group='TPRN', color='TPRN'), lwd=1.5) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0.5)) + geom_line(data=a, aes(x=YearWeek, y=SpecRuns/25, group='Runs'), lwd=1.5, color='black') + geom_line(data=a, aes(x=YearWeek, y=Detection*100, group='PercentDetection'), lwd=1.5, color='blue')
ggplot(a, aes(x=YearWeek, y=adjTURN, group='TURN', color='TURN')) + geom_line(lwd=1.5) + geom_line(data=a, aes(x=YearWeek, y=adjTPRN, group='TPRN', color='TPRN'), lwd=1.5) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0.5)) + geom_line(data=a, aes(x=YearWeek, y=SpecRuns/25, group='Runs'), lwd=1.5, color='black') + geom_line(data=s, aes(x=YearWeek, y=Detection*100, group='PercentDetection'), lwd=1.5, color='blue')
ggplot(a, aes(x=YearWeek, y=adjTURN, group='TURN', color='TURN')) + geom_line(lwd=1.5) + geom_line(data=a, aes(x=YearWeek, y=adjTPRN, group='TPRN', color='TPRN'), lwd=1.5) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0.5)) + geom_line(data=a, aes(x=YearWeek, y=SpecRuns/25, group='Runs'), lwd=1.5, color='black') + geom_line(data=s, aes(x=YearWeek, y=Detection*50, group='PercentDetection'), lwd=1.5, color='blue')
a$Detection <- with(a, SpecPositives/SpecRuns)
ggplot(a, aes(x=YearWeek, y=adjTURN, group='TURN', color='TURN')) + geom_line(lwd=1.5) + geom_line(data=a, aes(x=YearWeek, y=adjTPRN, group='TPRN', color='TPRN'), lwd=1.5) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0.5)) + geom_line(data=a, aes(x=YearWeek, y=SpecRuns/25, group='Runs'), lwd=1.5, color='black') + geom_line(data=a, aes(x=YearWeek, y=Detection*50, group='PercentDetection'), lwd=1.5, color='blue')
head(a)
sapply(1:nrow(a), function(x) sum(a[1:x,'SpecPositives'])/sum(a[1:x,'SpecRuns']))
a$CummulativePD <- sapply(1:nrow(a), function(x) sum(a[1:x,'SpecPositives'])/sum(a[1:x,'SpecRuns']))
ggplot(a, aes(x=YearWeek, y=adjTURN, group='TURN', color='TURN')) + geom_line(lwd=1.5) + geom_line(data=a, aes(x=YearWeek, y=adjTPRN, group='TPRN', color='TPRN'), lwd=1.5) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0.5)) + geom_line(data=a, aes(x=YearWeek, y=SpecRuns/25, group='Runs'), lwd=1.5, color='black') + geom_line(data=a, aes(x=YearWeek, y=CummulativePD*20, group='PercentDetection'), lwd=1.5, color='blue')
ggplot(site.turn, aes(x=YearWeek, y=TURN, group='SiteTURN', color='SiteTURN')) + geom_line(size=1.5) + geom_line(aes(x=YearWeek, y=TURN, group='NationalTURN', color='NationalTURN'), data=natn.turn, size=1.5) + scale_color_manual(values=c('black','blue')) + facet_wrap(~CustomerSiteId, scale='free_y') + labs(title='TURN_v3') + scale_x_discrete(breaks = dateBreaks, labels = dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1))
ggplot(site.turn.adj, aes(x=YearWeek, y=adjTURN, group='SiteTURN', color='SiteTURN')) + geom_line(size=1.5) + geom_line(aes(x=YearWeek, y=adjTURN, group='NationalTURN', color='NationalTURN'), data=natn.turn.adj, size=1.5) + scale_color_manual(values=c('black','blue')) + facet_wrap(~CustomerSiteId, scale='free_y') + labs(title='TURN_omega') + scale_x_discrete(breaks = dateBreaks, labels = dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1))
heaD(a)
head(a)
rm(s)
sapply(2:(nrow(a)-2), function(x) sum(a[(x-2):(x+2),'Gap']))
source('~/FilmArrayTrend/Rfunctions/TURN_omega.R', echo=TRUE)
turn(runs.reg.date, 'CustomerSiteId','24','RP', calendar.df, 30)
t <- turn(runs.reg.date, 'CustomerSiteId','24','RP', calendar.df, 30)
head(t)
sapply(2:(nrow(t)-2), function(x) sum(t[(x-2):(x+2),'Gap']))
sapply(2:(nrow(t)-2), function(x) sum(t[(x-2):(x+2),'Gap']))
source('~/FilmArrayTrend/Rfunctions/TURN_omega.R', echo=TRUE)
site.turn.adj <- do.call(rbind, lapply(1:length(sites), function(x) turn(runs.reg.date, 'CustomerSiteId', sites[x], 'RP', calendar.df, 30)))
regn.turn.adj <- merge(site.turn.adj[,c('CustomerSiteId','YearWeek','adjTURN')], names.df[,c('CustomerSiteId','CensusRegionNational')], by='CustomerSiteId') # merge(site.turn[,c('CustomerSiteId','YearWeek','TURN')], unique(runs.reg[,c('CustomerSiteId','Region')]), by='CustomerSiteId')
regn.turn.adj <- with(regn.turn.adj, aggregate(adjTURN~YearWeek+CensusRegionNational, FUN=mean)) # with(regn.turn, aggregate(TURN~YearWeek+Region, FUN=mean))
natn.turn.adj <- with(site.turn.adj, aggregate(adjTURN~YearWeek, FUN=mean))
ggplot(site.turn.adj, aes(x=YearWeek, y=adjTURN, group='SiteTURN', color='SiteTURN')) + geom_line(size=1.5) + geom_line(aes(x=YearWeek, y=adjTURN, group='NationalTURN', color='NationalTURN'), data=natn.turn.adj, size=1.5) + scale_color_manual(values=c('black','blue')) + facet_wrap(~CustomerSiteId, scale='free_y') + labs(title='TURN_omega') + scale_x_discrete(breaks = dateBreaks, labels = dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1))
head(site.turn.adj)
a <- merge(site.turn.adj, with(site.turn.adj, aggregate(adjTURN~YearWeek, FUN=median)), by='YearWeek')
head(a)
ggplot(a, aes(x=YearWeek, y=adjTURN.x, color='Site', group='Site')) + geom_line(lwd=1.5) + geom_line(aes(x=YearWeek, y=adjTURN.y, color='National', group='National'), lwd=1.5, data=a) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0.5)) + facet_wrap(~CustomerSiteId)
ggplot(a, aes(x=YearWeek, y=adjTURN.x, color='Site', group='Site')) + geom_line(lwd=1.5) + geom_line(aes(x=YearWeek, y=adjTURN.y, color='National', group='National'), lwd=1.5, data=a) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0.5)) + facet_wrap(~CustomerSiteId, scale='free_y')
library(RODBC)
library(lubridate)
library(xlsx)
library(ggplot2)
library(grid)
library(gridExtra)
library(scales)
library(gtable)
library(RColorBrewer)
library(devtools)
library(dplyr)
library(tidyr)
require(dateManip)
# load custom functions
source('../Rfunctions/TURN_v3.R')
source('~/WebHub/AnalyticsWebHub/Rfunctions/createPaletteOfVariableLength.R')
source('~/FilmArrayTrend/Rfunctions/normalizeBurnRate.R', echo=TRUE)
library(RODBC)
library(lubridate)
library(xlsx)
library(ggplot2)
library(grid)
library(gridExtra)
library(scales)
library(gtable)
library(RColorBrewer)
library(devtools)
library(dplyr)
library(tidyr)
require(dateManip)
head(a)
class(a$CustomerSiteId)
a$CustomerSiteId <- as.numeric(a$CustomerSiteId)
ggplot(a, aes(x=YearWeek, y=adjTURN.x, color='Site', group='Site')) + geom_line(lwd=1.5) + geom_line(aes(x=YearWeek, y=adjTURN.y, color='National', group='National'), lwd=1.5, data=a) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0.5)) + facet_wrap(~CustomerSiteId)
ggplot(a, aes(x=YearWeek, y=adjTURN.x, color='Site', group='Site')) + geom_line(lwd=1.5) + geom_line(aes(x=YearWeek, y=adjTURN.y, color='National', group='National'), lwd=1.5, data=a) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0.5)) + facet_wrap(~CustomerSiteId, scale='free_y')
source('~/FilmArrayTrend/Rfunctions/TURN_omega.R', echo=TRUE)
source('~/FilmArrayTrend/Rfunctions/TURN_omega.R', echo=TRUE)
site.turn.adj <- do.call(rbind, lapply(1:length(sites), function(x) turn(runs.reg.date, 'CustomerSiteId', sites[x], 'RP', calendar.df, 30)))
regn.turn.adj <- merge(site.turn.adj[,c('CustomerSiteId','YearWeek','adjTURN')], names.df[,c('CustomerSiteId','CensusRegionNational')], by='CustomerSiteId') # merge(site.turn[,c('CustomerSiteId','YearWeek','TURN')], unique(runs.reg[,c('CustomerSiteId','Region')]), by='CustomerSiteId')
regn.turn.adj <- with(regn.turn.adj, aggregate(adjTURN~YearWeek+CensusRegionNational, FUN=mean)) # with(regn.turn, aggregate(TURN~YearWeek+Region, FUN=mean))
natn.turn.adj <- with(site.turn.adj, aggregate(adjTURN~YearWeek, FUN=mean))
ggplot(site.turn.adj, aes(x=YearWeek, y=adjTURN, group='SiteTURN', color='SiteTURN')) + geom_line(size=1.5) + geom_line(aes(x=YearWeek, y=adjTURN, group='NationalTURN', color='NationalTURN'), data=natn.turn.adj, size=1.5) + scale_color_manual(values=c('black','blue')) + facet_wrap(~CustomerSiteId, scale='free_y') + labs(title='TURN_omega') + scale_x_discrete(breaks = dateBreaks, labels = dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1))
source('~/FilmArrayTrend/Rfunctions/TURN_omega.R', echo=TRUE)
site.turn.adj <- do.call(rbind, lapply(1:length(sites), function(x) turn(runs.reg.date, 'CustomerSiteId', sites[x], 'RP', calendar.df, 30)))
regn.turn.adj <- merge(site.turn.adj[,c('CustomerSiteId','YearWeek','adjTURN')], names.df[,c('CustomerSiteId','CensusRegionNational')], by='CustomerSiteId') # merge(site.turn[,c('CustomerSiteId','YearWeek','TURN')], unique(runs.reg[,c('CustomerSiteId','Region')]), by='CustomerSiteId')
regn.turn.adj <- with(regn.turn.adj, aggregate(adjTURN~YearWeek+CensusRegionNational, FUN=mean)) # with(regn.turn, aggregate(TURN~YearWeek+Region, FUN=mean))
natn.turn.adj <- with(site.turn.adj, aggregate(adjTURN~YearWeek, FUN=mean))
ggplot(site.turn.adj, aes(x=YearWeek, y=adjTURN, group='SiteTURN', color='SiteTURN')) + geom_line(size=1.5) + geom_line(aes(x=YearWeek, y=adjTURN, group='NationalTURN', color='NationalTURN'), data=natn.turn.adj, size=1.5) + scale_color_manual(values=c('black','blue')) + facet_wrap(~CustomerSiteId, scale='free_y') + labs(title='TURN_omega') + scale_x_discrete(breaks = dateBreaks, labels = dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1))
names.df
source('~/FilmArrayTrend/Rfunctions/TURN_omega.R', echo=TRUE)
site.turn.adj <- do.call(rbind, lapply(1:length(sites), function(x) turn(runs.reg.date, 'CustomerSiteId', sites[x], 'RP', calendar.df, 30)))
regn.turn.adj <- merge(site.turn.adj[,c('CustomerSiteId','YearWeek','adjTURN')], names.df[,c('CustomerSiteId','CensusRegionNational')], by='CustomerSiteId') # merge(site.turn[,c('CustomerSiteId','YearWeek','TURN')], unique(runs.reg[,c('CustomerSiteId','Region')]), by='CustomerSiteId')
regn.turn.adj <- with(regn.turn.adj, aggregate(adjTURN~YearWeek+CensusRegionNational, FUN=mean)) # with(regn.turn, aggregate(TURN~YearWeek+Region, FUN=mean))
natn.turn.adj <- with(site.turn.adj, aggregate(adjTURN~YearWeek, FUN=mean))
ggplot(site.turn.adj, aes(x=YearWeek, y=adjTURN, group='SiteTURN', color='SiteTURN')) + geom_line(size=1.5) + geom_line(aes(x=YearWeek, y=adjTURN, group='NationalTURN', color='NationalTURN'), data=natn.turn.adj, size=1.5) + scale_color_manual(values=c('black','blue')) + facet_wrap(~CustomerSiteId, scale='free_y') + labs(title='TURN_omega') + scale_x_discrete(breaks = dateBreaks, labels = dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1))
site.turn.adj$CustomerSiteId <- as.numeric(site.turn.adj$CustomerSiteId)
ggplot(site.turn.adj, aes(x=YearWeek, y=adjTURN, group='SiteTURN', color='SiteTURN')) + geom_line(size=1.5) + geom_line(aes(x=YearWeek, y=adjTURN, group='NationalTURN', color='NationalTURN'), data=natn.turn.adj, size=1.5) + scale_color_manual(values=c('black','blue')) + facet_wrap(~CustomerSiteId, scale='free_y') + labs(title='TURN_omega') + scale_x_discrete(breaks = dateBreaks, labels = dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1))
source('~/FilmArrayTrend/Rfunctions/TURN_omega.R', echo=TRUE)
site.turn.adj <- do.call(rbind, lapply(1:length(sites), function(x) turn(runs.reg.date, 'CustomerSiteId', sites[x], 'RP', calendar.df, 30)))
site.turn.adj$CustomerSiteId <- as.numeric(site.turn.adj$CustomerSiteId)
regn.turn.adj <- merge(site.turn.adj[,c('CustomerSiteId','YearWeek','adjTURN')], names.df[,c('CustomerSiteId','CensusRegionNational')], by='CustomerSiteId') # merge(site.turn[,c('CustomerSiteId','YearWeek','TURN')], unique(runs.reg[,c('CustomerSiteId','Region')]), by='CustomerSiteId')
regn.turn.adj <- with(regn.turn.adj, aggregate(adjTURN~YearWeek+CensusRegionNational, FUN=mean)) # with(regn.turn, aggregate(TURN~YearWeek+Region, FUN=mean))
natn.turn.adj <- with(site.turn.adj, aggregate(adjTURN~YearWeek, FUN=mean))
ggplot(site.turn.adj, aes(x=YearWeek, y=adjTURN, group='SiteTURN', color='SiteTURN')) + geom_line(size=1.5) + geom_line(aes(x=YearWeek, y=adjTURN, group='NationalTURN', color='NationalTURN'), data=natn.turn.adj, size=1.5) + scale_color_manual(values=c('black','blue')) + facet_wrap(~CustomerSiteId, scale='free_y') + labs(title='TURN_omega') + scale_x_discrete(breaks = dateBreaks, labels = dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1))
source('~/FilmArrayTrend/Rfunctions/TURN_omega.R', echo=TRUE)
site.turn.adj <- do.call(rbind, lapply(1:length(sites), function(x) turn(runs.reg.date, 'CustomerSiteId', sites[x], 'RP', calendar.df, 30)))
site.turn.adj$CustomerSiteId <- as.numeric(site.turn.adj$CustomerSiteId)
regn.turn.adj <- merge(site.turn.adj[,c('CustomerSiteId','YearWeek','adjTURN')], names.df[,c('CustomerSiteId','CensusRegionNational')], by='CustomerSiteId') # merge(site.turn[,c('CustomerSiteId','YearWeek','TURN')], unique(runs.reg[,c('CustomerSiteId','Region')]), by='CustomerSiteId')
regn.turn.adj <- with(regn.turn.adj, aggregate(adjTURN~YearWeek+CensusRegionNational, FUN=mean)) # with(regn.turn, aggregate(TURN~YearWeek+Region, FUN=mean))
natn.turn.adj <- with(site.turn.adj, aggregate(adjTURN~YearWeek, FUN=mean))
ggplot(site.turn.adj, aes(x=YearWeek, y=adjTURN, group='SiteTURN', color='SiteTURN')) + geom_line(size=1.5) + geom_line(aes(x=YearWeek, y=adjTURN, group='NationalTURN', color='NationalTURN'), data=natn.turn.adj, size=1.5) + scale_color_manual(values=c('black','blue')) + facet_wrap(~CustomerSiteId, scale='free_y') + labs(title='TURN_omega') + scale_x_discrete(breaks = dateBreaks, labels = dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1))
head(site.turn.adj)
ggplot(site.turn.adj, aes(x=YearWeek, y=adjTURN, group='TURN', color='TURN')) + geom_line(size=1.5) + geom_line(aes(x=YearWeek, y=adjTPRN, group='TPRN', color='TPRN'), data=site.turn.adj, size=1.5) + scale_color_manual(values=c('black','blue')) + facet_wrap(~CustomerSiteId, scale='free_y') + labs(title='TURN_omega') + scale_x_discrete(breaks = dateBreaks, labels = dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1))
library(RODBC)
library(lubridate)
library(xlsx)
library(ggplot2)
library(grid)
library(gridExtra)
library(scales)
library(gtable)
library(RColorBrewer)
library(devtools)
library(dplyr)
library(tidyr)
require(dateManip)
ggplot(site.turn.adj, aes(x=YearWeek, y=adjTURN, group='TURN', color='TURN')) + geom_line(size=1.5) + geom_line(aes(x=YearWeek, y=adjTPRN, group='TPRN', color='TPRN'), data=site.turn.adj, size=1.5) + scale_color_manual(values=c('black','blue')) + facet_wrap(~CustomerSiteId, scale='free_y') + labs(title='TURN_omega') + scale_x_discrete(breaks = dateBreaks, labels = dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1))
head(site.turn.adj)
head(runs.reg.date)
head(site.turn.adj)
ggplot(site.turn.adj, aes(x=YearWeek, y=SpecPositives/SpecRuns, group='Detection')) + geom_line(lwd=1.5) + facet_wrap(~CustomerSiteId) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0.5))
head(site.turn.adj)
site.turn.adj$Detection <- with(site.turn.adj, SpecPositives/SpecRuns)
head(site.turn.adj)
a <- subset(site.turn.adj, CustomerSiteId==29)
head(a)
a <- subset(site.turn.adj, CustomerSiteId==39)
head(a)
head(a)
sapply(2:(nrow(a)-1), function(x) (a[(x+1),'Detection']-a[(x-1),'Detection'])/2)
a$dD <- sapply(2:(nrow(a)-1), function(x) (a[(x+1),'Detection']-a[(x-1),'Detection'])/2)
a[2:(nrow(a)-1),'dD'] <- sapply(2:(nrow(a)-1), function(x) (a[(x+1),'Detection']-a[(x-1),'Detection'])/2)
head(a)
ggplot(a, aes(x=YearWeek, y=adjTURN, color='TURN', group='TURN')) + geom_line() + geom_line(data=a, aes(x=YearWeek, y=dD, color='dD/dt', group='dD/dt')) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0.5))
ggplot(a, aes(x=YearWeek, y=adjTURN, color='TURN', group='TURN')) + geom_line(lwd=1.5) + geom_line(data=a, aes(x=YearWeek, y=dD, color='dD/dt', group='dD/dt'), lwd=1.5) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0.5)) + scale_color_manual(values=c('black','red'))
ggplot(a, aes(x=YearWeek, y=10*adjTURN, color='TURN', group='TURN')) + geom_line(lwd=1.5) + geom_line(data=a, aes(x=YearWeek, y=dD, color='dD/dt', group='dD/dt'), lwd=1.5) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0.5)) + scale_color_manual(values=c('black','red'))
ggplot(a, aes(x=YearWeek, y=adjTURN/10, color='TURN', group='TURN')) + geom_line(lwd=1.5) + geom_line(data=a, aes(x=YearWeek, y=dD, color='dD/dt', group='dD/dt'), lwd=1.5) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0.5)) + scale_color_manual(values=c('red','black'))
install.packages('robustHD')
library(robustHD)
winsorize(a$dD)
winsorize(a[!(is.nan(a$dD)), 'dD'])
head(a)
class(a$dD)
a$dD
winsorize(a[!(is.nan(a$dD)) & !(is.na(a$dD)), 'dD'])
a$dD
b <- a[!(is.nan(a$dD)) & !(is.na(a$dD)), 'dD']
head(b)
b
b <- a[!(is.nan(a$dD)) & !(is.na(a$dD)), 'dD']
b
library(RODBC)
library(lubridate)
library(xlsx)
library(ggplot2)
library(grid)
library(gridExtra)
library(scales)
library(gtable)
library(RColorBrewer)
library(devtools)
library(dplyr)
library(tidyr)
require(dateManip)
source('../Rfunctions/TURN_omega.R')
source('~/WebHub/AnalyticsWebHub/Rfunctions/createPaletteOfVariableLength.R')
hinvert_title_grob <- function(grob){
# Swap the widths
widths <- grob$widths
grob$widths[1] <- widths[3]
grob$widths[3] <- widths[1]
grob$vp[[1]]$layout$widths[1] <- widths[3]
grob$vp[[1]]$layout$widths[3] <- widths[1]
# Fix the justification
grob$children[[1]]$hjust <- 1 - grob$children[[1]]$hjust
grob$children[[1]]$vjust <- 1 - grob$children[[1]]$vjust
grob$children[[1]]$x <- unit(1, "npc") - grob$children[[1]]$x
grob
}
# read in the data from FilmArray Data Warehouse DB (ODBC object in Windows "FA_DW" with Lindsay's credentials)
FADWcxn <- odbcConnect(dsn = 'FA_DW', uid = 'afaucett', pwd = 'ThisIsAPassword-BAD')
queryVector <- readLines('../DataSources/SQL/TURN/RunDataBySite.sql')
query <- paste(queryVector,collapse="\n")
runs.df <- sqlQuery(FADWcxn,query)
queryVector <- readLines('../DataSources/SQL/TURN/rpBugData.sql')
query <- paste(queryVector,collapse="\n")
bugs.df <- sqlQuery(FADWcxn,query)
bugs.df <- bugs.df[bugs.df$Target != 'Bocavirus',]
queryVector <- readLines('../DataSources/CustomerSiteIdsWithNames.sql')
query <- paste(queryVector,collapse="\n")
names.df <- sqlQuery(FADWcxn,query)
queryVector <- readLines('../DataSources/ShortNames.sql')
query <- paste(queryVector,collapse="\n")
abvs.df <- sqlQuery(FADWcxn,query)
odbcClose(FADWcxn)
PMScxn <- odbcConnect('PMS_PROD')
queryVector <- scan('../DataSources/AllSitesRegionKey.txt',what=character(),quote="")
query <- paste(queryVector,collapse=" ")
regions.df <- sqlQuery(PMScxn,query)
odbcClose(PMScxn)
# read in data from Excel files
# census regional ILI for 2013-2017 (can compare to TURN in regions and over all time)
cdc.reg.df <- read.csv('../DataSources/Epidemics/CensusRegionalILI.csv', header=TRUE, sep=',')
# HHS region data for ILI and influenza for 2013-2014 season (can compare three reported metrics to TURN)
cdc.ili.df <- read.csv('../DataSources/Epidemics/HHSregionalILI.csv', header=TRUE, sep=',')
goog.flu.df <- read.xlsx('../DataSources/Epidemics/GoogleFlu.xlsx', sheetName='Sheet1', colIndex = c(1,2,3))
goog.flu.df$Date <- as.character(goog.flu.df$Date)
goog.flu.df[grep('41896', goog.flu.df$Date), 'Date'] <- '2014-09-14'
goog.flu.df$Date <- as.Date(goog.flu.df$Date, format='%Y-%m-%d')
goog.flu.df <- goog.flu.df[!(is.na(goog.flu.df$Date)), ]
cdc.flu.df <- read.csv('../DataSources/Epidemics/HHSregionalInfluenza_CombinedFor2013-14.csv', header=TRUE, sep=',')
# make an epi calendar
calendar.df <- transformToEpiWeeks(createCalendarLikeMicrosoft(2012, 'Week'))
calendar.df$YearWeek <- with(calendar.df, ifelse(Week < 10, paste(Year, Week, sep='-0'), paste(Year, Week, sep='-')))
calendar.df <- calendar.df[calendar.df$YearWeek > '2012-51', ]
calendar.df$Days <- 1
# add on regions and date information to the data frames
runs.reg <- merge(merge(runs.df, names.df[,c('CustomerSiteId','State')], by='CustomerSiteId'), data.frame(Province = regions.df$StateAbv, Region = regions.df$CensusRegionLocal, hhsRegion = regions.df$CDCRegion), by.x='State', by.y='Province')
runs.reg <- merge(runs.reg, names.df[,c('CustomerSiteId','CensusRegionNational')], by='CustomerSiteId')
runs.reg.date <- merge(runs.reg, calendar.df[,c('Date','Year','Week','YearWeek')], by='Date')
cdc.reg.df$YearWeek <- with(cdc.reg.df, ifelse(WEEK < 10, paste(YEAR, WEEK, sep='-0'), paste(YEAR, WEEK, sep='-')))
# cdc.reg.df <- data.frame(YearWeek = cdc.reg.df$YearWeek, Region = cdc.reg.df$REGION, iliRate = cdc.reg.df$ILITOTAL/cdc.reg.df$TOTAL.PATIENTS)
cdc.flu.df$YearWeek <- with(cdc.flu.df, ifelse(WEEK < 10, paste(YEAR, WEEK, sep='-0'), paste(YEAR, WEEK, sep='-')))
cdc.flu.df <- data.frame(YearWeek = cdc.flu.df$YearWeek, hhsRegion = as.numeric(substring(cdc.flu.df$REGION, 8, 10)), TotalObs = cdc.flu.df$TOTAL.SPECIMENS, aH1N109 = cdc.flu.df$A..2009.H1N1., aH1 = cdc.flu.df$A..H1., aH3 = cdc.flu.df$A..H3., aNoSubtype = cdc.flu.df$A..Subtyping.not.Performed., aUnableToSubtype = cdc.flu.df$A..Unable.to.Subtype., b = cdc.flu.df$B, H3N2v = cdc.flu.df$H3N2v)
cdc.ili.df$YearWeek <- with(cdc.ili.df, ifelse(WEEK < 10, paste(YEAR, WEEK, sep='-0'), paste(YEAR, WEEK, sep='-')))
cdc.ili.df <- data.frame(YearWeek = cdc.ili.df$YearWeek, hhsRegion = as.numeric(substring(cdc.ili.df$REGION, 8, 10)), iliRate = cdc.ili.df$ILITOTAL/cdc.ili.df$TOTAL.PATIENTS)
goog.flu.df <- merge(calendar.df, goog.flu.df, by='Date')
cdc.reg.df <- data.frame(Year = cdc.reg.df$YEAR, Week = cdc.reg.df$WEEK, Region = cdc.reg.df$REGION, ILITotal = cdc.reg.df$ILITOTAL, TotalPatients = cdc.reg.df$TOTAL.PATIENTS)
cdc.reg.df$YearWeek <- with(cdc.reg.df, ifelse(Week < 10, paste(Year, Week, sep='-0'), paste(Year, Week, sep='-')))
cdc.reg.count.df <- do.call(rbind, lapply(1:length(unique(cdc.reg.df$Region)), function(x)  data.frame(YearWeek =  cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x], 'YearWeek'][2:(length(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x], 'YearWeek'])-1)], Region = unique(cdc.reg.df$Region)[x], TotalPatients = sapply(2:(length(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],'YearWeek'])-1), function(y) sum(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],][(y-1):(y+1), 'TotalPatients'])), ILITotal = sapply(2:(length(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],'YearWeek'])-1), function(y) sum(cdc.reg.df[cdc.reg.df$Region == unique(cdc.reg.df$Region)[x],][(y-1):(y+1), 'ILITotal'])))))
cdc.reg.count.df$Rate <- with(cdc.reg.count.df, ILITotal/TotalPatients)
cdc.trend.rate <- merge(unique(regions.df[,c('CensusRegionLocal','CensusRegionNational')]), cdc.reg.count.df, by.y='Region', by.x='CensusRegionLocal') # merge(unique(runs.reg.date[,c('CustomerSiteId','Region')]), cdc.reg.count.df, by='Region')
cdc.trend.rate.reg <- with(cdc.trend.rate, aggregate(Rate~YearWeek+CensusRegionNational, FUN=mean)) # with(cdc.trend.rate, aggregate(Rate~YearWeek+Region, FUN=mean))
cdc.trend.rate.nat <- with(cdc.trend.rate, aggregate(Rate~YearWeek, FUN=mean))
sites <- as.character(unique(runs.reg.date$CustomerSiteId))
sites <- sites[order(as.numeric(sites))]
site.turn <- do.call(rbind, lapply(1:length(sites), function(x) turn(runs.reg.date, 'CustomerSiteId', sites[x], 'RP', calendar.df, 30)))
regn.turn <- merge(site.turn[,c('CustomerSiteId','YearWeek','TURN')], names.df[,c('CustomerSiteId','CensusRegionNational')], by='CustomerSiteId') # merge(site.turn[,c('CustomerSiteId','YearWeek','TURN')], unique(runs.reg[,c('CustomerSiteId','Region')]), by='CustomerSiteId')
regn.turn <- with(regn.turn, aggregate(TURN~YearWeek+CensusRegionNational, FUN=mean)) # with(regn.turn, aggregate(TURN~YearWeek+Region, FUN=mean))
natn.turn <- with(site.turn, aggregate(TURN~YearWeek, FUN=mean))
ili.turn.mrg <- merge(regn.turn, cdc.trend.rate.reg, by=c('YearWeek','CensusRegionNational'), all.x=TRUE)
# Make a chart showing TURN and ILI overlaid (national)
dateBreaks <- c('2013-27','2013-40','2014-01', '2014-14','2014-27','2014-40','2015-01', '2015-14','2015-27','2015-40','2016-01','2016-14','2016-27','2016-40','2017-01','2017-14','2017-27')
dateLabels <- c('Jul-2013','-','Jan-2014','-','Jul-2014','-','Jan-2015','-','Jul-2015','-','Jan-2016','-','Jul-2016','-','Jan-2017','-','Jul-2017')
ggplot(site.turn, aes(x=YearWeek, y=TURN, group='SiteTURN', color='SiteTURN')) + geom_line(size=1.5) + geom_line(aes(x=YearWeek, y=TURN, group='NationalTURN', color='NationalTURN'), data=natn.turn, size=1.5) + scale_color_manual(values=c('black','blue')) + facet_wrap(~CustomerSiteId, scale='free_y') + labs(title='TURN_v3') + scale_x_discrete(breaks = dateBreaks, labels = dateLabels) + theme(axis.text.x=element_text(angle=90, hjust=1))
a <- subset(site.turn.adj, CustomerSiteId==39)
a[2:(nrow(a)-1),'dD'] <- sapply(2:(nrow(a)-1), function(x) (a[(x+1),'Detection']-a[(x-1),'Detection'])/2)
b <- a[!(is.nan(a$dD)) & !(is.na(a$dD)), 'dD']
b
hist(b)
hist(b, breaks = 12)
hist(b, breaks = 20)
hist(b, breaks = 30)
max(abs(b-mean(b)))
b-mean(b)
abs(b-mean(b))
max(abs(b-mean(b)))
dt(0.95, length(b)-1)
dt(0.95, df=length(b)-1)
dt(0.975, df=length(b)-1)
dt(0.975, df=1)
dt(0.025, df=1)
qt(0.025, df=1)
qt(0.975, df=1)
qt(0.975, df=length(b)-1)
qt(0.975, df=29)
qt(0.975, df=length(b)-1)
p <- 1 - 0.05/(2*(length(b)-1+1))
lambda <- (length(b)-1)*qt(0.975, df=length(b)-1)
p
qt(p = p, df = length(b))
qt(p = p, df = (length(b)-1))
t <- qt(p = p, df = (length(b)-i))
sqrt(length(b)-i-1+t^2)
lambda <- (length(b)-i)*t/(sqrt(length(b)-i-1+t^2)*(length(b)-i+1))
R > lambda
i <- 1
R <- max(abs(b-mean(b)))
p <- 1 - 0.05/(2*(length(b)-i+1))
v <- length(b) - i
t <- qt(p = p, df = (length(b)-i))
lambda <- (length(b)-i)*t/(sqrt(length(b)-i-1+t^2)*(length(b)-i+1))
R > lambda
c(-0.25, 0.68, 0.94, 1.15, 1.20, 1.26, 1.26, 1.34, 1.38, 1.43, 1.49, 1.49, 1.55, 1.56,
1.58, 1.65, 1.69, 1.70, 1.76, 1.77, 1.81,
1.91, 1.94, 1.96, 1.99, 2.06, 2.09, 2.10,
2.14, 2.15, 2.23, 2.24, 2.26, 2.35, 2.37,
2.40, 2.47, 2.54, 2.62, 2.64, 2.90, 2.92,
2.92, 2.93, 3.21, 3.26, 3.30, 3.59, 3.68,
4.30, 4.64, 5.34, 5.42, 6.01)
b <- c(-0.25, 0.68, 0.94, 1.15, 1.20, 1.26, 1.26, 1.34, 1.38, 1.43, 1.49, 1.49, 1.55, 1.56,
1.58, 1.65, 1.69, 1.70, 1.76, 1.77, 1.81,
1.91, 1.94, 1.96, 1.99, 2.06, 2.09, 2.10,
2.14, 2.15, 2.23, 2.24, 2.26, 2.35, 2.37,
2.40, 2.47, 2.54, 2.62, 2.64, 2.90, 2.92,
2.92, 2.93, 3.21, 3.26, 3.30, 3.59, 3.68,
4.30, 4.64, 5.34, 5.42, 6.01)
for(i in 1:length(b)) {
R <- max(abs(b-mean(b)))
p <- 1 - 0.05/(2*(length(b)-i+1))
v <- length(b) - i
t <- qt(p = p, df = (length(b)-i))
lambda <- (length(b)-i)*t/(sqrt(length(b)-i-1+t^2)*(length(b)-i+1))
if(R > lambda) {return(i)}  # FIND THE MAX i FOR WHICH R > lambda
}
b <- c(-0.25, 0.68, 0.94, 1.15, 1.20, 1.26, 1.26, 1.34, 1.38, 1.43, 1.49, 1.49, 1.55, 1.56,
1.58, 1.65, 1.69, 1.70, 1.76, 1.77, 1.81, 1.91, 1.94, 1.96, 1.99, 2.06, 2.09, 2.10,
2.14, 2.15, 2.23, 2.24, 2.26, 2.35, 2.37, 2.40, 2.47, 2.54, 2.62, 2.64, 2.90, 2.92,
2.92, 2.93, 3.21, 3.26, 3.30, 3.59, 3.68, 4.30, 4.64, 5.34, 5.42, 6.01)
esd.test <- c()
for(i in 1:length(b)) {
R <- max(abs(b-mean(b)))
p <- 1 - 0.05/(2*(length(b)-i+1))
v <- length(b) - i
t <- qt(p = p, df = (length(b)-i))
lambda <- (length(b)-i)*t/(sqrt(length(b)-i-1+t^2)*(length(b)-i+1))
R > lambda # FIND THE MAX i FOR WHICH R > lambda
temp <- data.frame(Outliers = i, tValue = t, lambda = lambda)
esd.test <- rbind(esd.test, temp)
}
esd.test <- c()
for(i in 1:10) {
R <- max(abs(b-mean(b)))
p <- 1 - 0.05/(2*(length(b)-i+1))
v <- length(b) - i
t <- qt(p = p, df = (length(b)-i))
lambda <- (length(b)-i)*t/(sqrt(length(b)-i-1+t^2)*(length(b)-i+1))
R > lambda # FIND THE MAX i FOR WHICH R > lambda
temp <- data.frame(Outliers = i, tValue = t, lambda = lambda)
esd.test <- rbind(esd.test, temp)
}
esd.test
esd.test <- c()
for(i in 1:10) {
R <- max(abs(b-mean(b)))
p <- 1 - 0.05/(2*(length(b)-i+1))
v <- length(b) - i
t <- qt(p = p, df = (length(b)-i))
lambda <- (length(b)-i)*t/(sqrt(length(b)-i-1+t^2)*(length(b)-i+1))
R > lambda # FIND THE MAX i FOR WHICH R > lambda
temp <- data.frame(Outliers = i, testValue = R, criticalValue = lambda)
esd.test <- rbind(esd.test, temp)
}
esd.test
max(abs(b-mean(b)))
which(abs(b-mean(b)) == max(abs(b-mean(b))))
b[which(abs(b-mean(b)) == max(abs(b-mean(b))))]
which(abs(b-mean(b)) == max(abs(b-mean(b))))
remove.index <- which(abs(b-mean(b)) == max(abs(b-mean(b))))
b[!(54)]
b[which(abs(b-mean(b)) == max(abs(b-mean(b))))]
b
b[54]
b[!(abs(b-mean(b)) == max(abs(b-mean(b))))]
b <- c(-0.25, 0.68, 0.94, 1.15, 1.20, 1.26, 1.26, 1.34, 1.38, 1.43, 1.49, 1.49, 1.55, 1.56,
1.58, 1.65, 1.69, 1.70, 1.76, 1.77, 1.81, 1.91, 1.94, 1.96, 1.99, 2.06, 2.09, 2.10,
2.14, 2.15, 2.23, 2.24, 2.26, 2.35, 2.37, 2.40, 2.47, 2.54, 2.62, 2.64, 2.90, 2.92,
2.92, 2.93, 3.21, 3.26, 3.30, 3.59, 3.68, 4.30, 4.64, 5.34, 5.42, 6.01)
esd.test <- c()
for(i in 1:10) {
R <- max(abs(b-mean(b)))
p <- 1 - 0.05/(2*(length(b)-i+1))
v <- length(b) - i
t <- qt(p = p, df = (length(b)-i))
lambda <- (length(b)-i)*t/(sqrt(length(b)-i-1+t^2)*(length(b)-i+1))
R > lambda # FIND THE MAX i FOR WHICH R > lambda
temp <- data.frame(Outliers = i, testValue = R, criticalValue = lambda)
esd.test <- rbind(esd.test, temp)
# adjust b to remove the observation
remove.index <- which(abs(b-mean(b)) == max(abs(b-mean(b))))
b <- b[!(abs(b-mean(b)) == max(abs(b-mean(b))))]
}
esd.test
b <- c(-0.25, 0.68, 0.94, 1.15, 1.20, 1.26, 1.26, 1.34, 1.38, 1.43, 1.49, 1.49, 1.55, 1.56,
1.58, 1.65, 1.69, 1.70, 1.76, 1.77, 1.81, 1.91, 1.94, 1.96, 1.99, 2.06, 2.09, 2.10,
2.14, 2.15, 2.23, 2.24, 2.26, 2.35, 2.37, 2.40, 2.47, 2.54, 2.62, 2.64, 2.90, 2.92,
2.92, 2.93, 3.21, 3.26, 3.30, 3.59, 3.68, 4.30, 4.64, 5.34, 5.42, 6.01)
esd.test <- c()
n <- length(b)
alpha <- 0.05
b <- c(-0.25, 0.68, 0.94, 1.15, 1.20, 1.26, 1.26, 1.34, 1.38, 1.43, 1.49, 1.49, 1.55, 1.56,
1.58, 1.65, 1.69, 1.70, 1.76, 1.77, 1.81, 1.91, 1.94, 1.96, 1.99, 2.06, 2.09, 2.10,
2.14, 2.15, 2.23, 2.24, 2.26, 2.35, 2.37, 2.40, 2.47, 2.54, 2.62, 2.64, 2.90, 2.92,
2.92, 2.93, 3.21, 3.26, 3.30, 3.59, 3.68, 4.30, 4.64, 5.34, 5.42, 6.01)
esd.test <- c()
n <- length(b)
alpha <- 0.05
for(i in 1:10) {
R <- max(abs(b-mean(b)))
p <- 1 - alpha/(2*(n-i+1))
v <- n - i
t <- qt(p = p, df = (n-1))
lambda <- (n-i)*t/(sqrt(n-i-1+t^2)*(n-i+1))
R > lambda # FIND THE MAX i FOR WHICH R > lambda
temp <- data.frame(Outliers = i, testValue = R, criticalValue = lambda)
esd.test <- rbind(esd.test, temp)
# adjust b to remove the observation
remove.index <- which(abs(b-mean(b)) == max(abs(b-mean(b))))
b <- b[!(abs(b-mean(b)) == max(abs(b-mean(b))))]
}
esd.test
b <- c(-0.25, 0.68, 0.94, 1.15, 1.20, 1.26, 1.26, 1.34, 1.38, 1.43, 1.49, 1.49, 1.55, 1.56, 1.58, 1.65, 1.69, 1.70, 1.76, 1.77, 1.81, 1.91, 1.94, 1.96, 1.99, 2.06, 2.09, 2.10, 2.14, 2.15, 2.23, 2.24, 2.26, 2.35, 2.37, 2.40, 2.47, 2.54, 2.62, 2.64, 2.90, 2.92, 2.92, 2.93, 3.21, 3.26, 3.30, 3.59, 3.68, 4.30, 4.64, 5.34, 5.42, 6.01)
esd.test <- c()
n <- length(b)
s <- sd(b)
alpha <- 0.05
for(i in 1:10) {
R <- max(abs(b-mean(b)))/s
p <- 1 - alpha/(2*(n-i+1))
v <- n - i
t <- qt(p = p, df = (n-1))
lambda <- (n-i)*t/(sqrt(n-i-1+t^2)*(n-i+1))
R > lambda # FIND THE MAX i FOR WHICH R > lambda
temp <- data.frame(Outliers = i, testValue = R, criticalValue = lambda)
esd.test <- rbind(esd.test, temp)
# adjust b to remove the observation
remove.index <- which(abs(b-mean(b)) == max(abs(b-mean(b))))
b <- b[!(abs(b-mean(b)) == max(abs(b-mean(b))))]
}
esd.test
library(robustHD)
winsorize(b)
hist(b, 30)
hist(b, 20)
hist(b, 10)
esd.test
