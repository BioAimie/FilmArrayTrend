# Get the ggplot grobs
g1 <- ggplotGrob(p1)
g2 <- ggplotGrob(p2)
# Get the location of the plot panel in g1.
# These are used later when transformed elements of g2 are put back into g1
pp <- c(subset(g1$layout, name == "panel", se = t:r))
# Overlap panel for second plot on that of the first plot
g1 <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t, pp$l, pp$b, pp$l)
# Get the y axis title from g2
index <- which(g2$layout$name == "ylab") # Which grob contains the y axis title?
ylab <- g2$grobs[[index]]                # Extract that grob
ylab <- hinvert_title_grob(ylab)         # Swap margins and fix justifications
# Put the transformed label on the right side of g1
g1 <- gtable_add_cols(g1, g2$widths[g2$layout[index, ]$l], pp$r)
g1 <- gtable_add_grob(g1, ylab, pp$t, pp$r + 1, pp$b, pp$r + 1, clip = "off", name = "ylab-r")
# Get the y axis from g2 (axis line, tick marks, and tick mark labels)
index <- which(g2$layout$name == "axis-l")  # Which grob
yaxis <- g2$grobs[[index]]                  # Extract the grob
# yaxis is a complex of grobs containing the axis line, the tick marks, and the tick mark labels.
# The relevant grobs are contained in axis$children:
#   axis$children[[1]] contains the axis line;
#   axis$children[[2]] contains the tick marks and tick mark labels.
# First, move the axis line to the left
yaxis$children[[1]]$x <- unit.c(unit(0, "npc"), unit(0, "npc"))
# Second, swap tick marks and tick mark labels
ticks <- yaxis$children[[2]]
ticks$widths <- rev(ticks$widths)
ticks$grobs <- rev(ticks$grobs)
# Third, move the tick marks
ticks$grobs[[1]]$x <- ticks$grobs[[1]]$x - unit(1, "npc") + unit(3, "pt")
# Fourth, swap margins and fix justifications for the tick mark labels
ticks$grobs[[2]] <- hinvert_title_grob(ticks$grobs[[2]])
# Fifth, put ticks back into yaxis
yaxis$children[[2]] <- ticks
# Put the transformed yaxis on the right side of g1
g1 <- gtable_add_cols(g1, g2$widths[g2$layout[index, ]$l], pp$r)
tripleOverlay <- gtable_add_grob(g1, yaxis, pp$t, pp$r + 1, pp$b, pp$r + 1, clip = "off", name = "axis-r")
# Draw it
grid.newpage()
grid.draw(tripleOverlay)
plot(risk.count.cos.agg$DateGroup, risk.count.cos.agg$RiskRatio*100)
p1 <- ggplot(risk.count.cos.agg, aes(x=DateGroup, y=100*CoDetectionRate, group='Co-Detection Rate', fill='Co-Detection Rate')) + geom_bar(stat='identity') + geom_line(aes(x=DateGroup, y=25*RiskRatio, group='TCPM', color='TCPM'), data=risk.count.cos.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,14), breaks=c(0, 2, 4, 6, 8, 10, 12, 14)) + scale_color_manual(values=c('red','blue','black'), name='') + scale_fill_manual(values='grey', name='') + labs(y='Co-Detection Rate (%)', x='Date')
p2 <- ggplot(risk.count.cos.agg, aes(x=DateGroup, y=25*RiskRatio, group=1)) + geom_line(color='transparent') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,14), breaks=c(0, 2, 4, 6, 8, 10, 12, 14), labels=c('0','8','16','24','32','40','48','56')) + theme(panel.background=element_rect(fill='transparent', color='transparent'), panel.grid=element_blank(), text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5)) + labs(y='People at Risk per 100 Patients')
# Get the ggplot grobs
g1 <- ggplotGrob(p1)
g2 <- ggplotGrob(p2)
# Get the location of the plot panel in g1.
# These are used later when transformed elements of g2 are put back into g1
pp <- c(subset(g1$layout, name == "panel", se = t:r))
# Overlap panel for second plot on that of the first plot
g1 <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t, pp$l, pp$b, pp$l)
# Get the y axis title from g2
index <- which(g2$layout$name == "ylab") # Which grob contains the y axis title?
ylab <- g2$grobs[[index]]                # Extract that grob
ylab <- hinvert_title_grob(ylab)         # Swap margins and fix justifications
# Put the transformed label on the right side of g1
g1 <- gtable_add_cols(g1, g2$widths[g2$layout[index, ]$l], pp$r)
g1 <- gtable_add_grob(g1, ylab, pp$t, pp$r + 1, pp$b, pp$r + 1, clip = "off", name = "ylab-r")
# Get the y axis from g2 (axis line, tick marks, and tick mark labels)
index <- which(g2$layout$name == "axis-l")  # Which grob
yaxis <- g2$grobs[[index]]                  # Extract the grob
# yaxis is a complex of grobs containing the axis line, the tick marks, and the tick mark labels.
# The relevant grobs are contained in axis$children:
#   axis$children[[1]] contains the axis line;
#   axis$children[[2]] contains the tick marks and tick mark labels.
# First, move the axis line to the left
yaxis$children[[1]]$x <- unit.c(unit(0, "npc"), unit(0, "npc"))
# Second, swap tick marks and tick mark labels
ticks <- yaxis$children[[2]]
ticks$widths <- rev(ticks$widths)
ticks$grobs <- rev(ticks$grobs)
# Third, move the tick marks
ticks$grobs[[1]]$x <- ticks$grobs[[1]]$x - unit(1, "npc") + unit(3, "pt")
# Fourth, swap margins and fix justifications for the tick mark labels
ticks$grobs[[2]] <- hinvert_title_grob(ticks$grobs[[2]])
# Fifth, put ticks back into yaxis
yaxis$children[[2]] <- ticks
# Put the transformed yaxis on the right side of g1
g1 <- gtable_add_cols(g1, g2$widths[g2$layout[index, ]$l], pp$r)
tripleOverlay <- gtable_add_grob(g1, yaxis, pp$t, pp$r + 1, pp$b, pp$r + 1, clip = "off", name = "axis-r")
# Draw it
grid.newpage()
grid.draw(tripleOverlay)
hinvert_title_grob <- function(grob){
# Swap the widths
widths <- grob$widths
grob$widths[1] <- widths[3]
grob$widths[3] <- widths[1]
grob$vp[[1]]$layout$widths[1] <- widths[3]
grob$vp[[1]]$layout$widths[3] <- widths[1]
# Fix the justification
grob$children[[1]]$hjust <- 1 - grob$children[[1]]$hjust
grob$children[[1]]$vjust <- 1 - grob$children[[1]]$vjust
grob$children[[1]]$x <- unit(1, "npc") - grob$children[[1]]$x
grob
}
dateBreaks <- c('2013-27','2013-40','2014-01', '2014-14','2014-27','2014-40','2015-01', '2015-14','2015-27','2015-40','2016-01','2016-14','2016-27','2016-40','2017-01')
dateLabels <- c('Jul-2013','-','Jan-2014','-','Jul-2014','-','Jan-2015','-','Jul-2015','-','Jan-2016','-','Jul-2016','-','Jan-2017')
# p1 <- ggplot(risk.count.cos.agg, aes(x=DateGroup, y=100*CoDetectionRate, group='Co-Detections Rate', color='Co-Detections Rate')) + geom_line(size=2) + geom_line(aes(x=DateGroup, y=25*RiskRatio, group='Aggregate Risk Ratio', color='Aggregate Risk Ratio'), data=risk.count.cos.agg, size=2) + geom_line(aes(x=DateGroup, y=UniquePositives, group='Unique Positive Organisms', color='Unique Positive Organisms'), data=risk.count.cos.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,14), breaks=c(0, 2, 4, 6, 8, 10, 12, 14)) + scale_color_manual(values=c('red','blue','black'), name='') + scale_fill_manual(values='grey', name='') + labs(y='Co-Detection (%), Unique Positives', x='Date')
# p2 <- ggplot(risk.count.cos.agg, aes(x=DateGroup, y=25*RiskRatio, group=1)) + geom_line(color='transparent') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,14), breaks=c(0, 2, 4, 6, 8, 10, 12, 14), labels=c('0','8','16','24','32','40','48','56')) + theme(panel.background=element_rect(fill='transparent', color='transparent'), panel.grid=element_blank(), text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5)) + labs(y='People at Risk per 100 Patients')
p1 <- ggplot(risk.count.cos.agg, aes(x=DateGroup, y=100*CoDetectionRate, group='Co-Detection Rate', fill='Co-Detection Rate')) + geom_bar(stat='identity') + geom_line(aes(x=DateGroup, y=25*RiskRatio, group='TCPM', color='TCPM'), data=risk.count.cos.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,14), breaks=c(0, 2, 4, 6, 8, 10, 12, 14)) + scale_color_manual(values=c('red','blue','black'), name='') + scale_fill_manual(values='grey', name='') + labs(y='Co-Detection Rate (%)', x='Date')
p2 <- ggplot(risk.count.cos.agg, aes(x=DateGroup, y=25*RiskRatio, group=1)) + geom_line(color='transparent') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,14), breaks=c(0, 2, 4, 6, 8, 10, 12, 14), labels=c('0','8','16','24','32','40','48','56')) + theme(panel.background=element_rect(fill='transparent', color='transparent'), panel.grid=element_blank(), text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5)) + labs(y='People at Risk per 100 Patients')
# Get the ggplot grobs
g1 <- ggplotGrob(p1)
g2 <- ggplotGrob(p2)
# Get the location of the plot panel in g1.
# These are used later when transformed elements of g2 are put back into g1
pp <- c(subset(g1$layout, name == "panel", se = t:r))
# Overlap panel for second plot on that of the first plot
g1 <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t, pp$l, pp$b, pp$l)
# Get the y axis title from g2
index <- which(g2$layout$name == "ylab-l") # Which grob contains the y axis title?
ylab <- g2$grobs[[index]]                # Extract that grob
ylab <- hinvert_title_grob(ylab)         # Swap margins and fix justifications
# Put the transformed label on the right side of g1
g1 <- gtable_add_cols(g1, g2$widths[g2$layout[index, ]$l], pp$r)
g1 <- gtable_add_grob(g1, ylab, pp$t, pp$r + 1, pp$b, pp$r + 1, clip = "off", name = "ylab-r")
# Get the y axis from g2 (axis line, tick marks, and tick mark labels)
index <- which(g2$layout$name == "axis-l")  # Which grob
yaxis <- g2$grobs[[index]]                  # Extract the grob
# First, move the axis line to the left
yaxis$children[[1]]$x <- unit.c(unit(0, "npc"), unit(0, "npc"))
# Second, swap tick marks and tick mark labels
ticks <- yaxis$children[[2]]
ticks$widths <- rev(ticks$widths)
ticks$grobs <- rev(ticks$grobs)
# Third, move the tick marks
ticks$grobs[[1]]$x <- ticks$grobs[[1]]$x - unit(1, "npc") + unit(3, "pt")
# Fourth, swap margins and fix justifications for the tick mark labels
ticks$grobs[[2]] <- hinvert_title_grob(ticks$grobs[[2]])
# Fifth, put ticks back into yaxis
yaxis$children[[2]] <- ticks
# Put the transformed yaxis on the right side of g1
g1 <- gtable_add_cols(g1, g2$widths[g2$layout[index, ]$l], pp$r)
tripleOverlay <- gtable_add_grob(g1, yaxis, pp$t, pp$r + 1, pp$b, pp$r + 1, clip = "off", name = "axis-r")
# Draw it
grid.newpage()
grid.draw(tripleOverlay)
grid.newpage()
png('Figures/CoDetectionRiskMetrics.png', height=800, width=1400)
grid.draw(tripleOverlay)
dev.off()
dev.off()
grid.newpage()
png('Figures/CoDetectionRiskMetrics.png', height=800, width=1400)
grid.draw(tripleOverlay)
dev.off()
ggplot(aes(x=DateGroup, y=UniquePositives, group='Unique Positive Organisms', color='Unique Positive Organisms'), data=risk.count.cos.agg) + geom_line(size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,14), breaks=c(0, 2, 4, 6, 8, 10, 12, 14)) + scale_color_manual(values=c('black'), name='') + labs(y='Count of Unique Organisms Circulating', x='Date')
ggplot(aes(x=DateGroup, y=UniquePositives, group='Unique Positive Organisms', color='Unique Positive Organisms'), data=risk.count.cos.agg) + geom_line(size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,14), breaks=c(0, 2, 4, 6, 8, 10, 12, 14)) + scale_color_manual(values=c('black'), name='', guide=FALSE) + labs(y='Count of Unique Organisms Circulating', x='Date')
ggplot(aes(x=DateGroup, y=UniquePositives, group='Unique Positive Organisms', color='Unique Positive Organisms'), data=risk.count.cos.agg) + geom_line(size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,14), breaks=c(0, 2, 4, 6, 8, 10, 12, 14)) + scale_color_manual(values=c('black'), name='', guide=FALSE) + labs(y='Count of Unique Organisms Circulating', x='Date')
p.UniquePositives <- ggplot(aes(x=DateGroup, y=UniquePositives, group='Unique Positive Organisms', color='Unique Positive Organisms'), data=risk.count.cos.agg) + geom_line(size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,14), breaks=c(0, 2, 4, 6, 8, 10, 12, 14)) + scale_color_manual(values=c('black'), name='', guide=FALSE) + labs(y='Count of Unique Organisms Circulating', x='Date')
head(risk.count.cos.agg)
cor(risk.count.cos.agg$RiskRatio, risk.count.cos.agg$CoDetectionRate)
library(RODBC)
library(lubridate)
library(ggplot2)
library(scales)
library(grid)
library(gridExtra)
library(gtable)
library(devtools)
install_github('BioAimie/dateManip')
library(dateManip)
grid.draw(tripleOverlay)
ggplot(aes(x=DateGroup, y=UniquePositives, group='Unique Positive Organisms', color='Unique Positive Organisms'), data=risk.count.cos.agg) + geom_line(size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,14), breaks=c(0, 2, 4, 6, 8, 10, 12, 14)) + scale_color_manual(values=c('black'), name='', guide=FALSE) + labs(y='Count of Unique Organisms Circulating', x='Date')
library(RODBC)
library(lubridate)
library(ggplot2)
library(scales)
library(grid)
library(gridExtra)
library(gtable)
library(devtools)
install_github('BioAimie/dateManip')
library(dateManip)
head(percent.det.site)
tail(percent.det.site)
periods
tail(percent.det.site)
do.call(rbind, lapply(1:1, function(x) do.call(rbind, lapply(1:1, function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(DateGroup = periods[y], CustomerSiteId = sites[x], ShortName = bugs[z], RiskRatio = percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection']))))))))
do.call(rbind, lapply(1:1, function(x) do.call(rbind, lapply(1:1, function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(DateGroup = periods[y], CustomerSiteId = sites[x], ShortName = bugs[z], RiskRatio = percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection']))))))))
head(percent.det.site)
tail(percent.det.site)
head(riskratio.site)
head(riskratio.site)
head(percent.det.site)
tail(percent.det.site)
head(risk.count.cos)
head(risk.count.cos.agg)
head(percent.det.site)
unique(percent.det.site[,c('DateGroup','CustomerSiteId','Runs')])
head(percent.det.site)
merge(unique(percent.det.site[,c('DateGroup','CustomerSiteId','Runs')]), with(percent.det.site, aggregate(Positives~DateGroup+CustomerSiteId+ShortName, FUN=sum)), by=c('DateGroup','CustomerSiteId'))
a <- merge(unique(percent.det.site[,c('DateGroup','CustomerSiteId','Runs')]), with(percent.det.site, aggregate(Positives~DateGroup+CustomerSiteId+ShortName, FUN=sum)), by=c('DateGroup','CustomerSiteId'))
head(a)
tail(a)
b <- a[a$DateGroup=='2017-05', ]
b
b <- a[a$DateGroup=='2017-05' & a$CustomerSiteId==7, ]
b
((b$Positives/b$Runs)*(1-b$Positives/b$Runs))/b$Runs
do.call(1:length(b$ShortName))
bugs
do.call(1:length(b$ShortName))
b$ShortName
bugs
do.call(rbind, lapply(1:length(bugs), function(x) (((b[b$ShortName==bugs[x], 'Positives']/b[b$ShortName==bugs[x], 'Runs'])*(1-b[b$ShortName==bugs[x], 'Positives']/b[b$ShortName==bugs[x], 'Runs']))/b[b$ShortName==bugs[x], 'Runs'])*(sum(b[b$ShortName!=bugs[x],'Positives'])/b[b$ShortName==bugs[x], 'Runs'])^2))
do.call(rbind, lapply(1:length(bugs), function(x) sum((((b[b$ShortName==bugs[x], 'Positives']/b[b$ShortName==bugs[x], 'Runs'])*(1-b[b$ShortName==bugs[x], 'Positives']/b[b$ShortName==bugs[x], 'Runs']))/b[b$ShortName==bugs[x], 'Runs'])*(sum(b[b$ShortName!=bugs[x],'Positives'])/b[b$ShortName==bugs[x], 'Runs'])^2))
)
do.call(rbind, lapply(1:length(bugs), function(x) sum((((b[b$ShortName==bugs[x], 'Positives']/b[b$ShortName==bugs[x], 'Runs'])*(1-b[b$ShortName==bugs[x], 'Positives']/b[b$ShortName==bugs[x], 'Runs']))/b[b$ShortName==bugs[x], 'Runs'])*(sum(b[b$ShortName!=bugs[x],'Positives'])/b[b$ShortName==bugs[x], 'Runs'])^2)))
do.call(rbind, lapply(1:length(bugs), function(x) (((b[b$ShortName==bugs[x], 'Positives']/b[b$ShortName==bugs[x], 'Runs'])*(1-b[b$ShortName==bugs[x], 'Positives']/b[b$ShortName==bugs[x], 'Runs']))/b[b$ShortName==bugs[x], 'Runs'])*(sum(b[b$ShortName!=bugs[x],'Positives'])/b[b$ShortName==bugs[x], 'Runs'])^2))
sum(do.call(rbind, lapply(1:length(bugs), function(x) (((b[b$ShortName==bugs[x], 'Positives']/b[b$ShortName==bugs[x], 'Runs'])*(1-b[b$ShortName==bugs[x], 'Positives']/b[b$ShortName==bugs[x], 'Runs']))/b[b$ShortName==bugs[x], 'Runs'])*(sum(b[b$ShortName!=bugs[x],'Positives'])/b[b$ShortName==bugs[x], 'Runs'])^2)))
4*sum(do.call(rbind, lapply(1:length(bugs), function(x) (((b[b$ShortName==bugs[x], 'Positives']/b[b$ShortName==bugs[x], 'Runs'])*(1-b[b$ShortName==bugs[x], 'Positives']/b[b$ShortName==bugs[x], 'Runs']))/b[b$ShortName==bugs[x], 'Runs'])*(sum(b[b$ShortName!=bugs[x],'Positives'])/b[b$ShortName==bugs[x], 'Runs'])^2)))
1.96*sqrt(4*sum(do.call(rbind, lapply(1:length(bugs), function(x) (((b[b$ShortName==bugs[x], 'Positives']/b[b$ShortName==bugs[x], 'Runs'])*(1-b[b$ShortName==bugs[x], 'Positives']/b[b$ShortName==bugs[x], 'Runs']))/b[b$ShortName==bugs[x], 'Runs'])*(sum(b[b$ShortName!=bugs[x],'Positives'])/b[b$ShortName==bugs[x], 'Runs'])^2))))
do.call(rbind, lapply(1:length(bugs), function(x) (((b[b$ShortName==bugs[x], 'Positives']/b[b$ShortName==bugs[x], 'Runs'])*(1-b[b$ShortName==bugs[x], 'Positives']/b[b$ShortName==bugs[x], 'Runs']))/b[b$ShortName==bugs[x], 'Runs'])*(sum(b[b$ShortName!=bugs[x],'Positives'])/b[b$ShortName==bugs[x], 'Runs'])^2))
tail(percent.det.site)
a <- do.call(rbind, lapply(1:length(sites), function(x) do.call(rbind, lapply(1:length(periods), function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(DateGroup = periods[y], CustomerSiteId = sites[x], ShortName = bugs[z], RiskRatio = percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection']), mVariance = (percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*(1-percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection'])/percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'Runs'])*(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection'])^2)))))))
do.call(rbind, lapply(1:length(bugs), function(x) (((b[b$ShortName==bugs[x], 'Positives']/b[b$ShortName==bugs[x], 'Runs'])*(1-b[b$ShortName==bugs[x], 'Positives']/b[b$ShortName==bugs[x], 'Runs']))/b[b$ShortName==bugs[x], 'Runs'])*(sum(b[b$ShortName!=bugs[x],'Positives'])/b[b$ShortName==bugs[x], 'Runs'])^2))
a <- do.call(rbind, lapply(1:1, function(x) do.call(rbind, lapply(1:4, function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(DateGroup = periods[y], CustomerSiteId = sites[x], ShortName = bugs[z], RiskRatio = percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection']), mVariance = (percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*(1-percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection'])/percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'Runs'])*(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection'])^2)))))))
head(b)
sites[1]
sites[3]
a <- do.call(rbind, lapply(3:3, function(x) do.call(rbind, lapply(150:154, function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(DateGroup = periods[y], CustomerSiteId = sites[x], ShortName = bugs[z], RiskRatio = percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection']), mVariance = (percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*(1-percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection'])/percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'Runs'])*(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection'])^2)))))))
yearweeks
periods
length(periods)
a <- do.call(rbind, lapply(3:3, function(x) do.call(rbind, lapply(180:182, function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(DateGroup = periods[y], CustomerSiteId = sites[x], ShortName = bugs[z], RiskRatio = percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection']), mVariance = (percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*(1-percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection'])/percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'Runs'])*(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection'])^2)))))))
do.call(rbind, lapply(1:length(bugs), function(x) (((b[b$ShortName==bugs[x], 'Positives']/b[b$ShortName==bugs[x], 'Runs'])*(1-b[b$ShortName==bugs[x], 'Positives']/b[b$ShortName==bugs[x], 'Runs']))/b[b$ShortName==bugs[x], 'Runs'])*(sum(b[b$ShortName!=bugs[x],'Positives'])/b[b$ShortName==bugs[x], 'Runs'])^2))
tail(a)
a[a$DateGroup=='2017-05', ]
a <- do.call(rbind, lapply(3:3, function(x) do.call(rbind, lapply(182:182, function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(DateGroup = periods[y], CustomerSiteId = sites[x], ShortName = bugs[z], RiskRatio = percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection']), mVariance = (percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*(1-percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection'])/percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'Runs'])*(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection'])^2)))))))
unique(a$ShortName)
length(unique(a$ShortName))
length(unique(a$ShortName))*19
View(a)
length(unique(as.character(a$ShortName)))
361-342
with(data.frame(a, Count=1), aggregate(Count~ShortName, FUN=sum))
18*18
do.call(rbind, lapply(3:3, function(x) do.call(rbind, lapply(182:182, function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(DateGroup = periods[y], CustomerSiteId = sites[x], ShortName = bugs[z], RiskRatio = percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection']), mVariance = ((percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*(1-percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection'])/percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'Runs'])*(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection'])^2)[z])))))))
do.call(rbind, lapply(3:3, function(x) do.call(rbind, lapply(182:182, function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(DateGroup = periods[y], CustomerSiteId = sites[x], ShortName = bugs[z], RiskRatio = percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection']), mVariance = ((percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*(1-percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection'])/percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'Runs'])*(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection'])^2)[z])))))))$ShortName
bugs
length(bugs)
19*19
a$ShortName
do.call(rbind, lapply(1:length(bugs), function(x) (((b[b$ShortName==bugs[x], 'Positives']/b[b$ShortName==bugs[x], 'Runs'])*(1-b[b$ShortName==bugs[x], 'Positives']/b[b$ShortName==bugs[x], 'Runs']))/b[b$ShortName==bugs[x], 'Runs'])*(sum(b[b$ShortName!=bugs[x],'Positives'])/b[b$ShortName==bugs[x], 'Runs'])^2))
do.call(rbind, lapply(3:3, function(x) do.call(rbind, lapply(182:182, function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(DateGroup = periods[y], CustomerSiteId = sites[x], ShortName = bugs[z], RiskRatio = percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection']), mVariance = ((percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*(1-percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection'])/percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'Runs'])*(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection'])^2)[z])))))))
head(b)
b
(3/10)*(1-3/10)
((3/819)*(1-3/819)/819)*((11+35+44+14+0+4+0+13+0+3+4+75+105+6+13+39)/819)^2
do.call(rbind, lapply(1:length(bugs), function(x) (((b[b$ShortName==bugs[x], 'Positives']/b[b$ShortName==bugs[x], 'Runs'])*(1-b[b$ShortName==bugs[x], 'Positives']/b[b$ShortName==bugs[x], 'Runs']))/b[b$ShortName==bugs[x], 'Runs'])*(sum(b[b$ShortName!=bugs[x],'Positives'])/b[b$ShortName==bugs[x], 'Runs'])^2))
((3/819)*(1-3/819)/819)*((11+35+44+14+0+4+0+13+0+3+4+75+105+6+13+39)/819)^2
(((b[b$ShortName==bugs[1], 'Positives']/b[b$ShortName==bugs[1], 'Runs'])*(1-b[b$ShortName==bugs[1], 'Positives']/b[b$ShortName==bugs[1], 'Runs']))/b[b$ShortName==bugs[1], 'Runs'])*(sum(b[b$ShortName!=bugs[1],'Positives'])/b[b$ShortName==bugs[1], 'Runs'])^2
bugs
(((b[b$ShortName==bugs[9], 'Positives']/b[b$ShortName==bugs[9], 'Runs'])*(1-b[b$ShortName==bugs[9], 'Positives']/b[b$ShortName==bugs[9], 'Runs']))/b[b$ShortName==bugs[9], 'Runs'])*(sum(b[b$ShortName!=bugs[9],'Positives'])/b[b$ShortName==bugs[9], 'Runs'])^2
do.call(rbind, lapply(1:length(bugs), function(x) (((b[b$ShortName==bugs[x], 'Positives']/b[b$ShortName==bugs[x], 'Runs'])*(1-b[b$ShortName==bugs[x], 'Positives']/b[b$ShortName==bugs[x], 'Runs']))/b[b$ShortName==bugs[x], 'Runs'])*(sum(b[b$ShortName!=bugs[x],'Positives'])/b[b$ShortName==bugs[x], 'Runs'])^2))
do.call(rbind, lapply(3:3, function(x) do.call(rbind, lapply(182:182, function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(DateGroup = periods[y], CustomerSiteId = sites[x], ShortName = bugs[z], RiskRatio = percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection']), mVariance = ((percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*(1-percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection'])/percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'Runs'])*(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection'])^2)[z])))))))
do.call(rbind, lapply(3:3, function(x) do.call(rbind, lapply(182:182, function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(DateGroup = periods[y], CustomerSiteId = sites[x], ShortName = bugs[z], RiskRatio = percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection']), mVariance = (((percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*(1-percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']))/percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'Runs'])*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection'])^2)[z])))))))
do.call(rbind, lapply(3:3, function(x) do.call(rbind, lapply(182:182, function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(DateGroup = periods[y], CustomerSiteId = sites[x], ShortName = bugs[z], RiskRatio = percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection']), mVariance = (((percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*(1-percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']))/percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'Runs'])*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection'])^2)[z])))))))
b
tail(percent.det.site)
(((percent.det.site[percent.det.site$CustomerSiteId==sites[3] & percent.det.site$DateGroup==periods[182] & percent.det.site$ShortName==bugs[9],'PercentDetection']*(1-percent.det.site[percent.det.site$CustomerSiteId==sites[3] & percent.det.site$DateGroup==periods[182] & percent.det.site$ShortName==bugs[9],'PercentDetection']))/percent.det.site[percent.det.site$CustomerSiteId==sites[3] & percent.det.site$DateGroup==periods[182] & percent.det.site$ShortName==bugs[9],'Runs'])*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[3] & percent.det.site$DateGroup==periods[182] & percent.det.site$ShortName!=bugs[9],'PercentDetection'])^2))
(((percent.det.site[percent.det.site$CustomerSiteId==sites[3] & percent.det.site$DateGroup==periods[182] & percent.det.site$ShortName==bugs[9],'PercentDetection']*(1-percent.det.site[percent.det.site$CustomerSiteId==sites[3] & percent.det.site$DateGroup==periods[182] & percent.det.site$ShortName==bugs[9],'PercentDetection']))/percent.det.site[percent.det.site$CustomerSiteId==sites[3] & percent.det.site$DateGroup==periods[182] & percent.det.site$ShortName==bugs[9],'Runs'])*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[3] & percent.det.site$DateGroup==periods[182] & percent.det.site$ShortName!=bugs[9],'PercentDetection'])^2)
do.call(rbind, lapply(3:3, function(x) do.call(rbind, lapply(182:182, function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(DateGroup = periods[y], CustomerSiteId = sites[x], ShortName = bugs[z], RiskRatio = percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection']), mVariance = (((percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*(1-percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']))/percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'Runs'])*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection'])^2)[z])))))))
do.call(rbind, lapply(3:3, function(x) do.call(rbind, lapply(182:182, function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(DateGroup = periods[y], CustomerSiteId = sites[x], ShortName = bugs[z], mVariance = (((percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*(1-percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']))/percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'Runs'])*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection'])^2)[z])))))))
(((b[b$ShortName==bugs[9], 'Positives']/b[b$ShortName==bugs[9], 'Runs'])*(1-b[b$ShortName==bugs[9], 'Positives']/b[b$ShortName==bugs[9], 'Runs']))/b[b$ShortName==bugs[9], 'Runs'])*(sum(b[b$ShortName!=bugs[9],'Positives'])/b[b$ShortName==bugs[9], 'Runs'])^2
do.call(rbind, lapply(3:3, function(x) do.call(rbind, lapply(182:182, function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(DateGroup = periods[y], CustomerSiteId = sites[x], ShortName = bugs[z], mVariance = (((percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*(1-percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']))/percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'Runs'])*(sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection']))^2)[z])))))))
(((percent.det.site[percent.det.site$CustomerSiteId==sites[3] & percent.det.site$DateGroup==periods[182] & percent.det.site$ShortName==bugs[9],'PercentDetection']*(1-percent.det.site[percent.det.site$CustomerSiteId==sites[3] & percent.det.site$DateGroup==periods[182] & percent.det.site$ShortName==bugs[9],'PercentDetection']))/percent.det.site[percent.det.site$CustomerSiteId==sites[3] & percent.det.site$DateGroup==periods[182] & percent.det.site$ShortName==bugs[9],'Runs'])*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[3] & percent.det.site$DateGroup==periods[182] & percent.det.site$ShortName!=bugs[9],'PercentDetection'])^2)
do.call(rbind, lapply(3:3, function(x) do.call(rbind, lapply(182:182, function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(DateGroup = periods[y], CustomerSiteId = sites[x], ShortName = bugs[z], mVariance = (((percent.det.site[percent.det.site$CustomerSiteId==sites[3] & percent.det.site$DateGroup==periods[182] & percent.det.site$ShortName==bugs[z],'PercentDetection']*(1-percent.det.site[percent.det.site$CustomerSiteId==sites[3] & percent.det.site$DateGroup==periods[182] & percent.det.site$ShortName==bugs[z],'PercentDetection']))/percent.det.site[percent.det.site$CustomerSiteId==sites[3] & percent.det.site$DateGroup==periods[182] & percent.det.site$ShortName==bugs[z],'Runs'])*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[3] & percent.det.site$DateGroup==periods[182] & percent.det.site$ShortName!=bugs[z],'PercentDetection'])^2))))))))
do.call(rbind, lapply(3:3, function(x) do.call(rbind, lapply(182:182, function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(DateGroup = periods[y], CustomerSiteId = sites[x], ShortName = bugs[z], mVariance = (((percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*(1-percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']))/percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'Runs'])*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection'])^2))))))))
do.call(rbind, lapply(3:3, function(x) do.call(rbind, lapply(182:182, function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(DateGroup = periods[y], CustomerSiteId = sites[x], ShortName = bugs[z], RiskRatio = percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection']), mVariance = mVariance = (((percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*(1-percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']))/percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'Runs'])*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection'])^2))))))))
do.call(rbind, lapply(3:3, function(x) do.call(rbind, lapply(182:182, function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(DateGroup = periods[y], CustomerSiteId = sites[x], ShortName = bugs[z], RiskRatio = percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection']), mVariance = (((percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*(1-percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']))/percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'Runs'])*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection'])^2))))))))
do.call(rbind, lapply(3:3, function(x) do.call(rbind, lapply(182:182, function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(DateGroup = periods[y], CustomerSiteId = sites[x], ShortName = bugs[z], RiskRatio = percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection']), mVariance = (((percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*(1-percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']))/percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'Runs'])*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection'])^2))))))))
do.call(rbind, lapply(1:length(bugs), function(x) (((b[b$ShortName==bugs[x], 'Positives']/b[b$ShortName==bugs[x], 'Runs'])*(1-b[b$ShortName==bugs[x], 'Positives']/b[b$ShortName==bugs[x], 'Runs']))/b[b$ShortName==bugs[x], 'Runs'])*(sum(b[b$ShortName!=bugs[x],'Positives'])/b[b$ShortName==bugs[x], 'Runs'])^2))
a <- do.call(rbind, lapply(3:3, function(x) do.call(rbind, lapply(180:182, function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(DateGroup = periods[y], CustomerSiteId = sites[x], ShortName = bugs[z], RiskRatio = percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection']), mVariance = (((percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*(1-percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']))/percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'Runs'])*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection'])^2))))))))
View(a)
19*3
a <- do.call(rbind, lapply(3:3, function(x) do.call(rbind, lapply(1:length(periods), function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(DateGroup = periods[y], CustomerSiteId = sites[x], ShortName = bugs[z], RiskRatio = percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection']), mVariance = (((percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*(1-percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']))/percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'Runs'])*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection'])^2))))))))
View(a)
periods
length(periods)
length(periods)*19
View(a)
riskratio.site.ci <- do.call(rbind, lapply(1:length(sites), function(x) do.call(rbind, lapply(1:length(periods), function(y) do.call(rbind, lapply(1:length(bugs), function(z) data.frame(DateGroup = periods[y], CustomerSiteId = sites[x], ShortName = bugs[z], RiskRatio = percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection']), mVariance = (((percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']*(1-percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'PercentDetection']))/percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName==bugs[z],'Runs'])*sum(percent.det.site[percent.det.site$CustomerSiteId==sites[x] & percent.det.site$DateGroup==periods[y] & percent.det.site$ShortName!=bugs[z],'PercentDetection'])^2))))))))
head(riskratio.site.ci)
library(RODBC)
library(lubridate)
library(ggplot2)
library(scales)
library(grid)
library(gridExtra)
library(gtable)
library(devtools)
install_github('BioAimie/dateManip')
library(dateManip)
head(riskration.site.ci)
head(riskratio.site.ci)
head(riskratio.site)
head(riskratio.site.ci)
with(riskratio.site.ci, aggregate(mVariance~DateGroup+CustomerSiteId, FUN=sum))
ci.bounds <- with(riskratio.site.ci, aggregate(mVariance~DateGroup+CustomerSiteId, FUN=sum))
head(ci.bounds)
ci.bounds$mVariance <- 4*ci.bounds$mVariance
head(riskratio.site.ci)
head(runs.roll)
riskratio.site.ci.mrg <- merge(runs.roll, riskratio.site.ci, by=c('DateGroup','CustomerSiteId'))
riskratio.site.ci.mrg[riskratio.site.ci.mrg$Runs <= threshold, 'RiskRatio'] <- NA
riskratio.site.ci.mrg[riskratio.site.ci.mrg$Runs <= threshold, 'mVariance'] <- NA
ci.bounds <- with(riskratio.site.ci.mrg, aggregate(mVariance~DateGroup+CustomerSiteId, FUN=sum))
ci.bounds$mVariance <- 4*ci.bounds$mVariance
head(ci.bounds)
head(riskratio.site.ci)
ci.bounds <- with(riskratio.site.ci.mrg, aggregate(mVariance~DateGroup+CustomerSiteId, FUN=sum))
ci.bounds$mVariance <- 4*ci.bounds$mVariance
riskratio.ci.avg <- with(riskratio.site.ci.mrg, aggregate(RiskRatio~DateGroup+ShortName, FUN=mean))
head(riskratio.ci.avg)
head(ci.bounds)
ci.bounds <- with(riskratio.site.ci.mrg, aggregate(mVariance~DateGroup+CustomerSiteId, FUN=sum))
head(ci.bounds)
ci.bounds$mVariance <- 4*ci.bounds$mVariance
head(ci.bounds)
ci.bounds$sdev <- sqrt(ci.bounds$mVariance)
riskratio.ci.avg <- with(riskratio.site.ci.mrg, aggregate(RiskRatio~DateGroup+ShortName, FUN=mean))
head(ci.bounds)
risk.count.cos.ci <- merge(merge(merge(bug.count.avg, cos.rate.avg, by='DateGroup'), riskratio.ci.avg, by='DateGroup'), with(ci.bounds, aggregate(sdev~DateGroup, FUN=mean)), by='DateGroup')
risk.count.cos.ci.trim <- subset(risk.count.cos.ci, as.character(DateGroup) >= '2013-33')
head(risk.count.cos.ci.trim)
cor(with(risk.count.cos.trim, aggregate(UniquePositives~DateGroup, FUN=mean))$UniquePositives, with(risk.count.cos.trim, aggregate(RiskRatio~DateGroup, FUN=sum))$RiskRatio)
ggplot(risk.count.cos.trim[with(risk.count.cos.trim, order(DateGroup, ShortName, decreasing=TRUE)), ], aes(x=DateGroup)) + geom_area(aes(y=RiskRatio*25, fill=ShortName, order=ShortName, group=ShortName), stat='identity', position='stack') + geom_line(aes(x=DateGroup, y=CoDetectionRate*100, group='Co-Detections/Total Tests', color='Co-Detections/Total Tests'), size=2, data=risk.count.cos.trim) + geom_line(aes(x=DateGroup, y=UniquePositives, group='Unique Detections', color='Unique Detections'), size=2, data=risk.count.cos.trim) + scale_fill_manual(values=createPaletteOfVariableLength(risk.count.cos.trim, 'ShortName'), name='') + scale_color_manual(values=c('black','blue'), name='') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = as.character(unique(risk.count.cos.trim$DateGroup))[order(as.character(unique(risk.count.cos.trim$DateGroup)))][seq(1, length(as.character(unique(risk.count.cos.trim$DateGroup))), 8)]) + labs(title='Co-Detections, Unique Organism Detections, and Risk Ratio\n(5-week centered rolling average)', x='Year-Week', y='% Co-Detections, Organism Count, Risk Ratio')
head(risk.count.cos.ci.trim)
head(risk.count.cos.agg)
risk.count.cos.ci.agg <- merge(with(risk.count.cos.ci.trim, aggregate(UniquePositives~DateGroup, FUN=mean)), with(risk.count.cos.ci.trim, aggregate(RiskRatio~DateGroup, FUN=sum)), by='DateGroup')
risk.count.cos.ci.agg <- merge(risk.count.cos.ci.agg, with(risk.count.cos.ci.trim, aggregate(CoDetectionRate~DateGroup, FUN=mean)), by='DateGroup')
risk.count.cos.ci.agg <- merge(risk.count.cos.ci.agg, with(risk.count.cos.ci.trim, aggregate(sdev~DateGroup, FUN=mean)), by='DateGroup')
head(risk.count.cos.ci.agg)
qnorm(0.95)
qnorm(0.975)
risk.count.cos.ci.agg$UL <- risk.count.cos.ci.agg$RiskRatio + qnorm(0.975)*risk.count.cos.ci.agg$sdev
risk.count.cos.ci.agg$LL <- risk.count.cos.ci.agg$RiskRatio - qnorm(0.975)*risk.count.cos.ci.agg$sdev
risk.count.cos.ci.agg$UL <- risk.count.cos.ci.agg$RiskRatio + qnorm(0.975)*risk.count.cos.ci.agg$sdev
head(risk.count.cos.ci.agg)
ggplot(risk.count.cos.ci.agg, aes(x=DateGroup, y=100*CoDetectionRate, fill='Co-Detections/Total Runs')) + geom_bar(stat='identity') + geom_line(aes(x=DateGroup, y=25*RiskRatio, group='Aggregate Risk Ratio', color='Aggregate Risk Ratio'), data=risk.count.cos.ci.agg, size=2) + geom_line(aes(x=DateGroup, y=UniquePositives, group='Unique Positive Organisms', color='Unique Positive Organisms'), data=risk.count.cos.ci.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = as.character(unique(risk.count.cos.trim$DateGroup))[order(as.character(unique(risk.count.cos.trim$DateGroup)))][seq(1, length(as.character(unique(risk.count.cos.trim$DateGroup))), 8)]) + scale_color_manual(values=c('blue','black'), name='') + scale_fill_manual(values='grey', name='')
hinvert_title_grob <- function(grob){
# Swap the widths
widths <- grob$widths
grob$widths[1] <- widths[3]
grob$widths[3] <- widths[1]
grob$vp[[1]]$layout$widths[1] <- widths[3]
grob$vp[[1]]$layout$widths[3] <- widths[1]
# Fix the justification
grob$children[[1]]$hjust <- 1 - grob$children[[1]]$hjust
grob$children[[1]]$vjust <- 1 - grob$children[[1]]$vjust
grob$children[[1]]$x <- unit(1, "npc") - grob$children[[1]]$x
grob
}
dateBreaks <- c('2013-27','2013-40','2014-01', '2014-14','2014-27','2014-40','2015-01', '2015-14','2015-27','2015-40','2016-01','2016-14','2016-27','2016-40','2017-01')
dateLabels <- c('Jul-2013','-','Jan-2014','-','Jul-2014','-','Jan-2015','-','Jul-2015','-','Jan-2016','-','Jul-2016','-','Jan-2017')
# p1 <- ggplot(risk.count.cos.agg, aes(x=DateGroup, y=100*CoDetectionRate, group='Co-Detections Rate', color='Co-Detections Rate')) + geom_line(size=2) + geom_line(aes(x=DateGroup, y=25*RiskRatio, group='Aggregate Risk Ratio', color='Aggregate Risk Ratio'), data=risk.count.cos.agg, size=2) + geom_line(aes(x=DateGroup, y=UniquePositives, group='Unique Positive Organisms', color='Unique Positive Organisms'), data=risk.count.cos.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,14), breaks=c(0, 2, 4, 6, 8, 10, 12, 14)) + scale_color_manual(values=c('red','blue','black'), name='') + scale_fill_manual(values='grey', name='') + labs(y='Co-Detection (%), Unique Positives', x='Date')
# p2 <- ggplot(risk.count.cos.agg, aes(x=DateGroup, y=25*RiskRatio, group=1)) + geom_line(color='transparent') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,14), breaks=c(0, 2, 4, 6, 8, 10, 12, 14), labels=c('0','8','16','24','32','40','48','56')) + theme(panel.background=element_rect(fill='transparent', color='transparent'), panel.grid=element_blank(), text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5)) + labs(y='People at Risk per 100 Patients')
p1 <- ggplot(risk.count.cos.agg, aes(x=DateGroup, y=100*CoDetectionRate, group='Co-Detection Rate', fill='Co-Detection Rate')) + geom_bar(stat='identity') + geom_line(aes(x=DateGroup, y=25*RiskRatio, group='TCPM', color='TCPM'), data=risk.count.cos.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,14), breaks=c(0, 2, 4, 6, 8, 10, 12, 14)) + scale_color_manual(values=c('red','blue','black'), name='') + scale_fill_manual(values='grey', name='') + labs(y='Co-Detection Rate (%)', x='Date')
p2 <- ggplot(risk.count.cos.agg, aes(x=DateGroup, y=25*RiskRatio, group=1)) + geom_line(color='transparent') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,14), breaks=c(0, 2, 4, 6, 8, 10, 12, 14), labels=c('0','8','16','24','32','40','48','56')) + theme(panel.background=element_rect(fill='transparent', color='transparent'), panel.grid=element_blank(), text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5)) + labs(y='People at Risk per 100 Patients')
# Get the ggplot grobs
g1 <- ggplotGrob(p1)
g2 <- ggplotGrob(p2)
# Get the location of the plot panel in g1.
# These are used later when transformed elements of g2 are put back into g1
pp <- c(subset(g1$layout, name == "panel", se = t:r))
# Overlap panel for second plot on that of the first plot
g1 <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t, pp$l, pp$b, pp$l)
# Get the y axis title from g2
index <- which(g2$layout$name == "ylab-l") # Which grob contains the y axis title?
ylab <- g2$grobs[[index]]                # Extract that grob
ylab <- hinvert_title_grob(ylab)         # Swap margins and fix justifications
# Put the transformed label on the right side of g1
g1 <- gtable_add_cols(g1, g2$widths[g2$layout[index, ]$l], pp$r)
g1 <- gtable_add_grob(g1, ylab, pp$t, pp$r + 1, pp$b, pp$r + 1, clip = "off", name = "ylab-r")
# Get the y axis from g2 (axis line, tick marks, and tick mark labels)
index <- which(g2$layout$name == "axis-l")  # Which grob
yaxis <- g2$grobs[[index]]                  # Extract the grob
# First, move the axis line to the left
yaxis$children[[1]]$x <- unit.c(unit(0, "npc"), unit(0, "npc"))
# Second, swap tick marks and tick mark labels
ticks <- yaxis$children[[2]]
ticks$widths <- rev(ticks$widths)
ticks$grobs <- rev(ticks$grobs)
# Third, move the tick marks
ticks$grobs[[1]]$x <- ticks$grobs[[1]]$x - unit(1, "npc") + unit(3, "pt")
# Fourth, swap margins and fix justifications for the tick mark labels
ticks$grobs[[2]] <- hinvert_title_grob(ticks$grobs[[2]])
# Fifth, put ticks back into yaxis
yaxis$children[[2]] <- ticks
# Put the transformed yaxis on the right side of g1
g1 <- gtable_add_cols(g1, g2$widths[g2$layout[index, ]$l], pp$r)
tripleOverlay <- gtable_add_grob(g1, yaxis, pp$t, pp$r + 1, pp$b, pp$r + 1, clip = "off", name = "axis-r")
# Draw it
grid.newpage()
grid.draw(tripleOverlay)
ggplot(aes(x=DateGroup, y=UniquePositives, group='Unique Positive Organisms', color='Unique Positive Organisms'), data=risk.count.cos.agg) + geom_line(size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,14), breaks=c(0, 2, 4, 6, 8, 10, 12, 14)) + scale_color_manual(values=c('black'), name='', guide=FALSE) + labs(y='Count of Unique Organisms Circulating', x='Date')
ggplot(risk.count.cos.ci.agg, aes(x=DateGroup, y=100*CoDetectionRate, fill='Co-Detections/Total Runs')) + geom_bar(stat='identity') + geom_line(aes(x=DateGroup, y=25*RiskRatio, group='Aggregate Risk Ratio', color='Aggregate Risk Ratio'), data=risk.count.cos.ci.agg, size=2) + geom_ribbon(aes(ymin=LL, ymax=UL), alpha=0.2, data=risk.count.cos.ci.agg) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = as.character(unique(risk.count.cos.trim$DateGroup))[order(as.character(unique(risk.count.cos.trim$DateGroup)))][seq(1, length(as.character(unique(risk.count.cos.trim$DateGroup))), 8)]) + scale_color_manual(values=c('blue','black'), name='') + scale_fill_manual(values='grey', name='')
ggplot(risk.count.cos.ci.agg, aes(x=DateGroup, y=100*CoDetectionRate, fill='Co-Detections/Total Runs')) + geom_bar(stat='identity') + geom_line(aes(x=DateGroup, y=25*RiskRatio, group='Aggregate Risk Ratio', color='Aggregate Risk Ratio'), data=risk.count.cos.ci.agg, size=2) + geom_ribbon(aes(ymin=25*LL, ymax=25*UL), alpha=0.2, data=risk.count.cos.ci.agg) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = as.character(unique(risk.count.cos.trim$DateGroup))[order(as.character(unique(risk.count.cos.trim$DateGroup)))][seq(1, length(as.character(unique(risk.count.cos.trim$DateGroup))), 8)]) + scale_color_manual(values=c('blue','black'), name='') + scale_fill_manual(values='grey', name='')
ggplot(aes(x=DateGroup, y=25*RiskRatio, group='Aggregate Risk Ratio', color='Aggregate Risk Ratio'), data=risk.count.cos.ci.agg) + geom_line(size=2) + geom_ribbon(aes(ymin=25*LL, ymax=25*UL), alpha=0.2, data=risk.count.cos.ci.agg) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = as.character(unique(risk.count.cos.trim$DateGroup))[order(as.character(unique(risk.count.cos.trim$DateGroup)))][seq(1, length(as.character(unique(risk.count.cos.trim$DateGroup))), 8)]) + scale_color_manual(values=c('blue','black'), name='') + scale_fill_manual(values='grey', name='')
ggplot(aes(x=DateGroup, y=25*RiskRatio, group='Aggregate Risk Ratio', color='Aggregate Risk Ratio'), data=risk.count.cos.ci.agg) + geom_line(size=2) + geom_ribbon(aes(ymin=25*LL, ymax=25*UL), alpha=0.2, data=risk.count.cos.ci.agg, color='grey') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = as.character(unique(risk.count.cos.trim$DateGroup))[order(as.character(unique(risk.count.cos.trim$DateGroup)))][seq(1, length(as.character(unique(risk.count.cos.trim$DateGroup))), 8)]) + scale_color_manual(values=c('blue','black'), name='') + scale_fill_manual(values='grey', name='')
ggplot(risk.count.cos.ci.agg, aes(x=DateGroup, y=100*CoDetectionRate, fill='Co-Detections/Total Runs')) + geom_bar(stat='identity') + geom_line(aes(x=DateGroup, y=25*RiskRatio, group='Aggregate Risk Ratio', color='Aggregate Risk Ratio'), data=risk.count.cos.ci.agg, size=2) + geom_ribbon(aes(ymin=25*LL, ymax=25*UL), alpha=0.2, data=risk.count.cos.ci.agg, color='grey') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = as.character(unique(risk.count.cos.trim$DateGroup))[order(as.character(unique(risk.count.cos.trim$DateGroup)))][seq(1, length(as.character(unique(risk.count.cos.trim$DateGroup))), 8)]) + scale_color_manual(values=c('blue','black'), name='') + scale_fill_manual(values='grey', name='')
ggplot(risk.count.cos.ci.agg, aes(x=DateGroup, y=100*CoDetectionRate, fill='Co-Detections/Total Runs')) + geom_bar(stat='identity') + geom_line(aes(x=DateGroup, y=25*RiskRatio, group='Aggregate Risk Ratio', color='Aggregate Risk Ratio'), data=risk.count.cos.ci.agg, size=2) + geom_ribbon(aes(ymin=25*LL, ymax=25*UL), alpha=0.2, data=risk.count.cos.ci.agg, color='grey') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = as.character(unique(risk.count.cos.trim$DateGroup))[order(as.character(unique(risk.count.cos.trim$DateGroup)))][seq(1, length(as.character(unique(risk.count.cos.trim$DateGroup))), 8)]) + scale_color_manual(values=c('blue','black'), name='') + scale_fill_manual(values='dodgerblue', name='')
ggplot(risk.count.cos.ci.agg, aes(x=DateGroup, y=100*CoDetectionRate, fill='Co-Detections/Total Runs')) + geom_bar(stat='identity') + geom_line(aes(x=DateGroup, y=25*RiskRatio, group='Aggregate Risk Ratio', color='Aggregate Risk Ratio'), data=risk.count.cos.ci.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = as.character(unique(risk.count.cos.trim$DateGroup))[order(as.character(unique(risk.count.cos.trim$DateGroup)))][seq(1, length(as.character(unique(risk.count.cos.trim$DateGroup))), 8)]) + scale_color_manual(values=c('blue','black'), name='') + scale_fill_manual(values='dodgerblue', name='') + geom_ribbon(aes(ymin=25*LL, ymax=25*UL), alpha=0.2, data=risk.count.cos.ci.agg, color='grey')
ggplot(risk.count.cos.ci.agg, aes(x=DateGroup, y=100*CoDetectionRate, fill='Co-Detections/Total Runs')) + geom_bar(stat='identity') + geom_ribbon(aes(ymin=25*LL, ymax=25*UL), alpha=0.2, data=risk.count.cos.ci.agg, color='grey') + geom_line(aes(x=DateGroup, y=25*RiskRatio, group='Aggregate Risk Ratio', color='Aggregate Risk Ratio'), data=risk.count.cos.ci.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = as.character(unique(risk.count.cos.trim$DateGroup))[order(as.character(unique(risk.count.cos.trim$DateGroup)))][seq(1, length(as.character(unique(risk.count.cos.trim$DateGroup))), 8)]) + scale_color_manual(values=c('blue','black'), name='') + scale_fill_manual(values='dodgerblue', name='')
ggplot(risk.count.cos.ci.agg, aes(x=DateGroup, y=100*CoDetectionRate, color='Co-Detections/Total Runs')) + geom_line() + geom_line(aes(x=DateGroup, y=25*RiskRatio, group='TCPM', color='TCPM'), data=risk.count.cos.ci.agg, size=2) + geom_ribbon(aes(ymin=25*LL, ymax=25*UL), alpha=0.2, data=risk.count.cos.ci.agg, color='lightskyblue') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = as.character(unique(risk.count.cos.trim$DateGroup))[order(as.character(unique(risk.count.cos.trim$DateGroup)))][seq(1, length(as.character(unique(risk.count.cos.trim$DateGroup))), 8)]) + scale_color_manual(values=c('black','blue'), name='')
ggplot(risk.count.cos.ci.agg, aes(x=DateGroup, y=100*CoDetectionRate, color='Co-Detections/Total Runs', group='Co-Detections/Total Runs')) + geom_line() + geom_line(aes(x=DateGroup, y=25*RiskRatio, group='TCPM', color='TCPM'), data=risk.count.cos.ci.agg, size=2) + geom_ribbon(aes(ymin=25*LL, ymax=25*UL), alpha=0.2, data=risk.count.cos.ci.agg, color='lightskyblue') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = as.character(unique(risk.count.cos.trim$DateGroup))[order(as.character(unique(risk.count.cos.trim$DateGroup)))][seq(1, length(as.character(unique(risk.count.cos.trim$DateGroup))), 8)]) + scale_color_manual(values=c('black','blue'), name='')
ggplot(risk.count.cos.ci.agg, aes(x=DateGroup, y=100*CoDetectionRate, color='Co-Detections/Total Runs', group='Co-Detections/Total Runs')) + geom_line(size=2) + geom_line(aes(x=DateGroup, y=25*RiskRatio, group='TCPM', color='TCPM'), data=risk.count.cos.ci.agg, size=2) + geom_ribbon(aes(ymin=25*LL, ymax=25*UL), alpha=0.2, data=risk.count.cos.ci.agg, color='lightskyblue') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = as.character(unique(risk.count.cos.trim$DateGroup))[order(as.character(unique(risk.count.cos.trim$DateGroup)))][seq(1, length(as.character(unique(risk.count.cos.trim$DateGroup))), 8)]) + scale_color_manual(values=c('black','blue'), name='')
ggplot(risk.count.cos.ci.agg, aes(x=DateGroup, y=100*CoDetectionRate, color='Co-Detections/Total Runs', group='Co-Detections/Total Runs')) + geom_line(size=2) + geom_line(aes(x=DateGroup, y=25*RiskRatio, group='TCPM', color='TCPM'), data=risk.count.cos.ci.agg, size=2) + geom_ribbon(aes(ymin=25*LL, ymax=25*UL), alpha=0.2, data=risk.count.cos.ci.agg, color='lightskyblue', fill='lightskyblue') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = as.character(unique(risk.count.cos.trim$DateGroup))[order(as.character(unique(risk.count.cos.trim$DateGroup)))][seq(1, length(as.character(unique(risk.count.cos.trim$DateGroup))), 8)]) + scale_color_manual(values=c('black','blue'), name='')
ggplot(aes(x=DateGroup, y=25*RiskRatio, group='TCPM', color='TCPM'), data=risk.count.cos.ci.agg) + geom_line(size=2) + geom_ribbon(aes(ymin=25*LL, ymax=25*UL), alpha=0.2, data=risk.count.cos.ci.agg, color='lightskyblue', fill='lightskyblue') + geom_line(aes(x=DateGroup, y=100*CoDetectionRate, color='Co-Detections/Total Runs', group='Co-Detections/Total Runs'), data=risk.count.cos.ci.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = as.character(unique(risk.count.cos.trim$DateGroup))[order(as.character(unique(risk.count.cos.trim$DateGroup)))][seq(1, length(as.character(unique(risk.count.cos.trim$DateGroup))), 8)]) + scale_color_manual(values=c('black','blue'), name='')
library(RODBC)
library(lubridate)
library(ggplot2)
library(scales)
library(grid)
library(gridExtra)
library(gtable)
library(devtools)
install_github('BioAimie/dateManip')
library(dateManip)
ggplot(aes(x=DateGroup, y=25*RiskRatio, group='TCPM', color='TCPM'), data=risk.count.cos.ci.agg) + geom_line(size=2) + geom_ribbon(aes(ymin=25*LL, ymax=25*UL), alpha=0.2, data=risk.count.cos.ci.agg, color='lightskyblue', fill='lightskyblue') + geom_line(aes(x=DateGroup, y=100*CoDetectionRate, color='Co-Detections/Total Runs', group='Co-Detections/Total Runs'), data=risk.count.cos.ci.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = as.character(unique(risk.count.cos.trim$DateGroup))[order(as.character(unique(risk.count.cos.trim$DateGroup)))][seq(1, length(as.character(unique(risk.count.cos.trim$DateGroup))), 8)]) + scale_color_manual(values=c('black','blue'), name='')
head(risk.coutn.cos.ci.agg)
head(risk.count.cos.ci.agg)
head(risk.count.cos)
head(riskratio.site)
head(risk.count.cos.trim)
head(site.bugs.roll)
with(sites.bugs.roll, aggregate(UniquePositives~DateGroup, FUN=sd))
ggplot(aes(x=DateGroup, y=UniquePositives, group='Unique Positive Organisms', color='Unique Positive Organisms'), data=risk.count.cos.agg) + geom_line(size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,14), breaks=c(0, 2, 4, 6, 8, 10, 12, 14)) + scale_color_manual(values=c('black'), name='', guide=FALSE) + labs(y='Count of Unique Organisms Circulating', x='Date')
head(risk.count.cos.agg)
a <- merge(risk.count.cos.agg, with(sites.bugs.roll, aggregate(UniquePositives~DateGroup, FUN=sd)), by='DateGroup')
head(a)
risk.count.cos.agg <- merge(risk.count.cos.agg, with(sites.bugs.roll, aggregate(UniquePositives~DateGroup, FUN=sd)), by='DateGroup')
rm(a)
head(risk.count.cos.agg)
colnames(risk.count.cos.agg)[grep('Unique', colnames(risk.count.cos.agg))]
colnames(risk.count.cos.agg)[grep('Unique', colnames(risk.count.cos.agg))] <- c('UniquePositives','Sdev')
ggplot(aes(x=DateGroup, y=UniquePositives, group='Unique Positive Organisms', color='Unique Positive Organisms'), data=risk.count.cos.agg) + geom_line(size=2) + geom_ribbon(aes(ymin=UniquePositives-Sdev, ymax=UniquePositives+Sdev), data=risk.count.cos.agg) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,14), breaks=c(0, 2, 4, 6, 8, 10, 12, 14)) + scale_color_manual(values=c('black'), name='', guide=FALSE) + labs(y='Count of Unique Organisms Circulating', x='Date')
ggplot(aes(x=DateGroup, y=UniquePositives, group='Unique Positive Organisms', color='Unique Positive Organisms'), data=risk.count.cos.agg) + geom_line(size=2) + geom_ribbon(aes(ymin=UniquePositives-Sdev, ymax=UniquePositives+Sdev), data=risk.count.cos.agg, color='grey', fill='grey', alpaa=0.2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,14), breaks=c(0, 2, 4, 6, 8, 10, 12, 14)) + scale_color_manual(values=c('black'), name='', guide=FALSE) + labs(y='Count of Unique Organisms Circulating', x='Date')
ggplot(aes(x=DateGroup, y=UniquePositives, group='Unique Positive Organisms', color='Unique Positive Organisms'), data=risk.count.cos.agg) + geom_line(size=2) + geom_ribbon(aes(ymin=UniquePositives-Sdev, ymax=UniquePositives+Sdev), data=risk.count.cos.agg, color='grey', fill='grey', alpha=0.2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,14), breaks=c(0, 2, 4, 6, 8, 10, 12, 14)) + scale_color_manual(values=c('black'), name='', guide=FALSE) + labs(y='Count of Unique Organisms Circulating', x='Date')
ggplot(aes(x=DateGroup, y=UniquePositives, group='Unique Positive Organisms', color='Unique Positive Organisms'), data=risk.count.cos.agg) + geom_line(size=2) + geom_ribbon(aes(ymin=UniquePositives-Sdev, ymax=UniquePositives+Sdev), data=risk.count.cos.agg, color='transparent', fill='grey', alpha=0.3) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,14), breaks=c(0, 2, 4, 6, 8, 10, 12, 14)) + scale_color_manual(values=c('black'), name='', guide=FALSE) + labs(y='Count of Unique Organisms Circulating', x='Date')
ggplot(aes(x=DateGroup, y=UniquePositives, group='Unique Positive Organisms', color='Unique Positive Organisms'), data=risk.count.cos.agg) + geom_line(size=2) + geom_ribbon(aes(ymin=UniquePositives-Sdev, ymax=UniquePositives+Sdev), data=risk.count.cos.agg, color='transparent', fill='grey', alpha=0.5) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,14), breaks=c(0, 2, 4, 6, 8, 10, 12, 14)) + scale_color_manual(values=c('black'), name='', guide=FALSE) + labs(y='Count of Unique Organisms Circulating', x='Date')
head(risk.count.cos.agg)
risk.count.cos.agg[is.na(risk.count.cos.agg$Sdev), ]
View(risk.count.cos.agg)
ggplot(aes(x=DateGroup, y=UniquePositives, group='Unique Positive Organisms', color='Unique Positive Organisms'), data=risk.count.cos.agg) + geom_line(size=2) + geom_ribbon(aes(ymin=(UniquePositives-Sdev), ymax=(UniquePositives+Sdev)), data=risk.count.cos.agg, color='transparent', fill='grey', alpha=0.5) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,14), breaks=c(0, 2, 4, 6, 8, 10, 12, 14)) + scale_color_manual(values=c('black'), name='', guide=FALSE) + labs(y='Count of Unique Organisms Circulating', x='Date')
ggplot(aes(x=DateGroup, y=UniquePositives, group='Unique Positive Organisms', color='Unique Positive Organisms'), data=risk.count.cos.agg) + geom_line(size=2) + geom_ribbon(aes(x=DateGroup, ymin=(UniquePositives-Sdev), ymax=(UniquePositives+Sdev)), data=risk.count.cos.agg, color='transparent', fill='grey', alpha=0.5) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,14), breaks=c(0, 2, 4, 6, 8, 10, 12, 14)) + scale_color_manual(values=c('black'), name='', guide=FALSE) + labs(y='Count of Unique Organisms Circulating', x='Date')
ggplot(aes(x=DateGroup, y=UniquePositives, group='Unique Positive Organisms', color='Unique Positive Organisms'), data=risk.count.cos.agg) + geom_line(size=2) + geom_ribbon(aes(x=DateGroup, ymin=(UniquePositives-Sdev), ymax=(UniquePositives+Sdev)), data=risk.count.cos.agg, color='transparent', fill='grey', alpha=0.5) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,14), breaks=c(0, 2, 4, 6, 8, 10, 12, 14)) + scale_color_manual(values=c('black'), name='', guide=FALSE) + labs(y='Count of Unique Organisms Circulating', x='Date')
a <- risk.count.cos.agg
a$LL <- a$UniquePositives-a$Sdev
a$UL <- a$UniquePositives+a$Sdev
View(a)
ggplot(aes(x=DateGroup, y=UniquePositives, group='Unique Positive Organisms', color='Unique Positive Organisms'), data=risk.count.cos.agg) + geom_line(size=2) + geom_ribbon(aes(x=DateGroup, ymin=(UniquePositives-Sdev), ymax=(UniquePositives+Sdev)), data=risk.count.cos.agg, color='transparent', fill='grey', alpha=0.5) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,16), breaks=c(0, 2, 4, 6, 8, 10, 12, 14,16)) + scale_color_manual(values=c('black'), name='', guide=FALSE) + labs(y='Count of Unique Organisms Circulating', x='Date')
rm(a, b)
p.UniquePositives <- ggplot(aes(x=DateGroup, y=UniquePositives, group='Unique Positive Organisms', color='Unique Positive Organisms'), data=risk.count.cos.agg) + geom_line(size=2) + geom_ribbon(aes(x=DateGroup, ymin=(UniquePositives-Sdev), ymax=(UniquePositives+Sdev)), data=risk.count.cos.agg, color='transparent', fill='grey', alpha=0.5) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,16), breaks=c(0, 2, 4, 6, 8, 10, 12, 14,16)) + scale_color_manual(values=c('black'), name='', guide=FALSE) + labs(y='Count of Unique Organisms Circulating', x='Date')
ggplot(aes(x=DateGroup, y=25*RiskRatio, group='TCPM', color='TCPM'), data=risk.count.cos.ci.agg) + geom_line(size=2) + geom_ribbon(aes(ymin=25*LL, ymax=25*UL), alpha=0.2, data=risk.count.cos.ci.agg, color='lightskyblue', fill='lightskyblue') + geom_line(aes(x=DateGroup, y=100*CoDetectionRate, color='Co-Detections/Total Runs', group='Co-Detections/Total Runs'), data=risk.count.cos.ci.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = as.character(unique(risk.count.cos.trim$DateGroup))[order(as.character(unique(risk.count.cos.trim$DateGroup)))][seq(1, length(as.character(unique(risk.count.cos.trim$DateGroup))), 8)]) + scale_color_manual(values=c('black','blue'), name='')
ggplot(aes(x=DateGroup, y=25*RiskRatio, group='TCPM', color='TCPM'), data=risk.count.cos.ci.agg) + geom_line(size=2) + geom_ribbon(aes(ymin=25*LL, ymax=25*UL), alpha=0.2, data=risk.count.cos.ci.agg, color='transparent', fill='blue') + geom_line(aes(x=DateGroup, y=100*CoDetectionRate, color='Co-Detections/Total Runs', group='Co-Detections/Total Runs'), data=risk.count.cos.ci.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = as.character(unique(risk.count.cos.trim$DateGroup))[order(as.character(unique(risk.count.cos.trim$DateGroup)))][seq(1, length(as.character(unique(risk.count.cos.trim$DateGroup))), 8)]) + scale_color_manual(values=c('black','blue'), name='')
ggplot(aes(x=DateGroup, y=25*RiskRatio, group='TCPM', color='TCPM'), data=risk.count.cos.ci.agg) + geom_line(size=2) + geom_ribbon(aes(ymin=25*LL, ymax=25*UL), alpha=0.2, data=risk.count.cos.ci.agg, color='transparent', fill='blue') + geom_line(aes(x=DateGroup, y=100*CoDetectionRate, color='Co-Detections/Total Runs', group='Co-Detections/Total Runs'), data=risk.count.cos.ci.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = as.character(unique(risk.count.cos.trim$DateGroup))[order(as.character(unique(risk.count.cos.trim$DateGroup)))][seq(1, length(as.character(unique(risk.count.cos.trim$DateGroup))), 8)]) + scale_color_manual(values=c('black','blue'), name='')
ggplot(aes(x=DateGroup, y=25*RiskRatio, group='TCPM', color='TCPM'), data=risk.count.cos.ci.agg) + geom_line(size=2) + geom_ribbon(aes(ymin=25*LL, ymax=25*UL), alpha=0.2, data=risk.count.cos.ci.agg, color='transparent', fill='blue') + geom_line(aes(x=DateGroup, y=100*CoDetectionRate, color='Co-Detections/Total Runs', group='Co-Detections/Total Runs'), data=risk.count.cos.ci.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = as.character(unique(risk.count.cos.trim$DateGroup))[order(as.character(unique(risk.count.cos.trim$DateGroup)))][seq(1, length(as.character(unique(risk.count.cos.trim$DateGroup))), 8)]) + scale_color_manual(values=c('black','blue'), name='') + labs(title='', x='Date', y='Co-Detection Rate (%)') + scale_x_discrete(breaks=dateBreaks, labels=dateLabels)
ggplot(aes(x=DateGroup, y=25*RiskRatio, group='TCPM', color='TCPM'), data=risk.count.cos.ci.agg) + geom_line(size=2) + geom_ribbon(aes(ymin=25*LL, ymax=25*UL), alpha=0.2, data=risk.count.cos.ci.agg, color='transparent', fill='blue') + geom_line(aes(x=DateGroup, y=100*CoDetectionRate, color='Co-Detections/Total Runs', group='Co-Detections/Total Runs'), data=risk.count.cos.ci.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = as.character(unique(risk.count.cos.trim$DateGroup))[order(as.character(unique(risk.count.cos.trim$DateGroup)))][seq(1, length(as.character(unique(risk.count.cos.trim$DateGroup))), 8)]) + scale_color_manual(values=c('black','blue'), name='') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank())
ggplot(aes(x=DateGroup, y=25*RiskRatio, group='TCPM', color='TCPM'), data=risk.count.cos.ci.agg) + geom_line(size=2) + geom_ribbon(aes(ymin=25*LL, ymax=25*UL), alpha=0.2, data=risk.count.cos.ci.agg, color='lightskyblue', fill='lightskyblue') + geom_line(aes(x=DateGroup, y=100*CoDetectionRate, color='Co-Detections/Total Runs', group='Co-Detections/Total Runs'), data=risk.count.cos.ci.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = as.character(unique(risk.count.cos.trim$DateGroup))[order(as.character(unique(risk.count.cos.trim$DateGroup)))][seq(1, length(as.character(unique(risk.count.cos.trim$DateGroup))), 8)]) + scale_color_manual(values=c('black','blue'), name='')
ggplot(aes(x=DateGroup, y=25*RiskRatio, group='TCPM', color='TCPM'), data=risk.count.cos.ci.agg) + geom_line(size=2) + geom_ribbon(aes(ymin=25*LL, ymax=25*UL), alpha=0.2, data=risk.count.cos.ci.agg, color='transparent', fill='blue') + geom_line(aes(x=DateGroup, y=100*CoDetectionRate, color='Co-Detections/Total Runs', group='Co-Detections/Total Runs'), data=risk.count.cos.ci.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = as.character(unique(risk.count.cos.trim$DateGroup))[order(as.character(unique(risk.count.cos.trim$DateGroup)))][seq(1, length(as.character(unique(risk.count.cos.trim$DateGroup))), 8)]) + scale_color_manual(values=c('black','blue'), name='') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank())
ggplot(aes(x=DateGroup, y=25*RiskRatio, group='TCPM', color='TCPM'), data=risk.count.cos.ci.agg) + geom_line(size=2) + geom_ribbon(aes(ymin=25*LL, ymax=25*UL), alpha=0.2, data=risk.count.cos.ci.agg, color='transparent', fill='blue') + geom_line(aes(x=DateGroup, y=100*CoDetectionRate, color='Co-Detections/Total Runs', group='Co-Detections/Total Runs'), data=risk.count.cos.ci.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = as.character(unique(risk.count.cos.trim$DateGroup))[order(as.character(unique(risk.count.cos.trim$DateGroup)))][seq(1, length(as.character(unique(risk.count.cos.trim$DateGroup))), 8)]) + scale_color_manual(values=c('black','blue'), name='') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + labs(title='', y='Co-Detection Rate (%)', x='Date')
ggplot(aes(x=DateGroup, y=25*RiskRatio, group='TCPM', color='TCPM'), data=risk.count.cos.ci.agg) + geom_line(size=2) + geom_ribbon(aes(ymin=25*LL, ymax=25*UL), alpha=0.2, data=risk.count.cos.ci.agg, color='transparent', fill='blue') + geom_line(aes(x=DateGroup, y=100*CoDetectionRate, color='Co-Detections/Total Runs', group='Co-Detections/Total Runs'), data=risk.count.cos.ci.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = dateBreaks, labels=dateLabels) + scale_color_manual(values=c('black','blue'), name='') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + labs(title='', y='Co-Detection Rate (%)', x='Date')
ggplot(aes(x=DateGroup, y=25*RiskRatio, group='TCPM', color='TCPM'), data=risk.count.cos.ci.agg) + geom_line(size=2) + geom_ribbon(aes(ymin=25*LL, ymax=25*UL), alpha=0.2, data=risk.count.cos.ci.agg, color='transparent', fill='blue') + geom_line(aes(x=DateGroup, y=100*CoDetectionRate, color='Co-Detections/Total Runs', group='Co-Detections/Total Runs'), data=risk.count.cos.ci.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = dateBreaks, labels=dateLabels) + scale_color_manual(values=c('black','blue'), name='') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + labs(title='', y='Co-Detection Rate (%)', x='Date') + scale_y_continuous(limits=c(0, 16))
ggplot(aes(x=DateGroup, y=25*RiskRatio, group='TCPM', color='TCPM'), data=risk.count.cos.ci.agg) + geom_line(size=2) + geom_ribbon(aes(ymin=25*LL, ymax=25*UL), alpha=0.2, data=risk.count.cos.ci.agg, color='transparent', fill='blue') + geom_line(aes(x=DateGroup, y=100*CoDetectionRate, color='Co-Detections/Total Runs', group='Co-Detections/Total Runs'), data=risk.count.cos.ci.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = dateBreaks, labels=dateLabels) + scale_color_manual(values=c('black','blue'), name='') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + labs(title='', y='Co-Detection Rate (%)', x='Date') + scale_y_continuous(limits=c(0, 16), breaks=c(0,2,4,6,8,10,12,14,16))
p1 <- ggplot(aes(x=DateGroup, y=25*RiskRatio, group='TCPM', color='TCPM'), data=risk.count.cos.ci.agg) + geom_line(size=2) + geom_ribbon(aes(ymin=25*LL, ymax=25*UL), alpha=0.2, data=risk.count.cos.ci.agg, color='transparent', fill='blue') + geom_line(aes(x=DateGroup, y=100*CoDetectionRate, color='Co-Detections/Total Runs', group='Co-Detections/Total Runs'), data=risk.count.cos.ci.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = dateBreaks, labels=dateLabels) + scale_color_manual(values=c('black','blue'), name='') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + labs(title='', y='Co-Detection Rate (%)', x='Date') + scale_y_continuous(limits=c(0, 16), breaks=c(0,2,4,6,8,10,12,14,16))
p2 <- ggplot(risk.count.cos.ci.agg) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,16), breaks=c(0, 2, 4, 6, 8, 10, 12, 14, 16), labels=c('0','8','16','24','32','40','48','56','62')) + theme(panel.background=element_rect(fill='transparent', color='transparent'), panel.grid=element_blank(), text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5)) + labs(y='People at Risk per 100 Patients')
# Get the ggplot grobs
g1 <- ggplotGrob(p1)
g2 <- ggplotGrob(p2)
# Get the location of the plot panel in g1.
# These are used later when transformed elements of g2 are put back into g1
pp <- c(subset(g1$layout, name == "panel", se = t:r))
# Overlap panel for second plot on that of the first plot
g1 <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t, pp$l, pp$b, pp$l)
# Get the y axis title from g2
index <- which(g2$layout$name == "ylab-l") # Which grob contains the y axis title?
ylab <- g2$grobs[[index]]                # Extract that grob
ylab <- hinvert_title_grob(ylab)         # Swap margins and fix justifications
# Put the transformed label on the right side of g1
g1 <- gtable_add_cols(g1, g2$widths[g2$layout[index, ]$l], pp$r)
g1 <- gtable_add_grob(g1, ylab, pp$t, pp$r + 1, pp$b, pp$r + 1, clip = "off", name = "ylab-r")
# Get the y axis from g2 (axis line, tick marks, and tick mark labels)
index <- which(g2$layout$name == "axis-l")  # Which grob
yaxis <- g2$grobs[[index]]                  # Extract the grob
# First, move the axis line to the left
yaxis$children[[1]]$x <- unit.c(unit(0, "npc"), unit(0, "npc"))
# Second, swap tick marks and tick mark labels
ticks <- yaxis$children[[2]]
ticks$widths <- rev(ticks$widths)
ticks$grobs <- rev(ticks$grobs)
# Third, move the tick marks
ticks$grobs[[1]]$x <- ticks$grobs[[1]]$x - unit(1, "npc") + unit(3, "pt")
# Fourth, swap margins and fix justifications for the tick mark labels
ticks$grobs[[2]] <- hinvert_title_grob(ticks$grobs[[2]])
# Fifth, put ticks back into yaxis
yaxis$children[[2]] <- ticks
# Put the transformed yaxis on the right side of g1
g1 <- gtable_add_cols(g1, g2$widths[g2$layout[index, ]$l], pp$r)
overlayWithCI <- gtable_add_grob(g1, yaxis, pp$t, pp$r + 1, pp$b, pp$r + 1, clip = "off", name = "axis-r")
# Draw it
grid.newpage()
grid.draw(overlayWithCI)
# Draw it
grid.newpage()
png('Figures/CoDetectionRiskMetricWithConfidenceIntervals.png', height=800, width=1400)
grid.draw(overlayWithCI)
dev.off()
p.UniquePositives
