data.frame(YearWeek = periods.rand[i], CustomerSiteId = period.sites[j], SampleSize = size.sample.period.site, UniquePositives = unique.bugs.in.sample)
data.frame(YearWeek = periods.rand[i], CustomerSiteId = period.sites[j], SampleSize = size.sample.period.site)
data.frame(YearWeek = periods.rand[i], CustomerSiteId = period.sites[j])
data.frame(YearWeek = periods.rand[i])
period.sites[j]
j
rand.sample <- c()
for(i in 3:(length(periods.rand)-2)) {
# for a given five week period, keep the runs in that period with the associated site
runs.rand.period <- runs.rand[runs.rand$YearWeek %in% periods[(i-2):(i+2)], ]
# loop through all sites in the period and bin runs into group of threshold or less
period.threshold <- 100
period.sites <- unique(runs.rand.period$CustomerSiteId)
period.samples <- c()
for(j in 1:length(period.sites)) {
runs.rand.period.site <- runs.rand.period[runs.rand.period$CustomerSiteId==period.sites[j], ]
# if there are less than threshold runs in the period (centered 5 weeks, so < threshold/5 runs/week) for a given site, skip it
if(nrow(runs.rand.period.site) < period.threshold) { next() }
# if there are more than threshold runs in the period for a given site, split them out into multiple segements
divisor <- ceiling(nrow(runs.rand.period.site)/period.threshold)
sample.size <- round(nrow(runs.rand.period.site)/divisor, 0)
sample.ids.init <- sample(runs.rand.period.site$RunDataId, sample.size, FALSE)
sample.ids.free <- runs.rand.period.site[!(runs.rand.period.site$RunDataId %in% sample.ids.init), 'RunDataId']
# for the number of samples (divisor), loop through and randomly choose RunDataIds from the site in the period to determine:
# 1. the number of unique organisms in the period, 2. the co-detection rate, and 3. the risk metric
######################################## MAY ALSO WANT TO ADD IN THE CALCULATION FOR THE CI OF THE RISK METRIC
site.samples <- c()
for(k in 1:divisor) {
if(k == 1) {
sample.ids <- sample.ids.init
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
metric.var.in.sample <- 4*sum(sapply(1:length(bugs.sample), function(x) mVariance = (((percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*(1-percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']))/percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'Runs'])*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])^2)))
size.sample.period.site <- length(sample.ids)
temp <- data.frame(YearWeek = periods.rand[i], CustomerSiteId = period.sites[j], SampleSize = size.sample.period.site, UniquePositives = unique.bugs.in.sample, CoDetectionRate = co.detections.in.sample, RiskRatio = risk.metric.in.sample, RiskVariance = metric.var.in.sample)
site.samples <- rbind(site.samples, temp)
} else if (k < divisor) {
sample.ids <- sample(sample.ids.free, sample.size, FALSE)
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
metric.var.in.sample <- 4*sum(sapply(1:length(bugs.sample), function(x) mVariance = (((percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*(1-percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']))/percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'Runs'])*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])^2)))
size.sample.period.site <- length(sample.ids)
temp <- data.frame(YearWeek = periods.rand[i], CustomerSiteId = period.sites[j], SampleSize = size.sample.period.site, UniquePositives = unique.bugs.in.sample, CoDetectionRate = co.detections.in.sample, RiskRatio = risk.metric.in.sample, RiskVariance = metric.var.in.sample)
sample.ids.init <- c(sample.ids.init, sample.ids)
sample.ids.free <- sample.ids.free[!(sample.ids.free %in% sample.ids.init)]
site.samples <- rbind(site.samples, temp)
} else {
sample.ids <- sample.ids.free
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
metric.var.in.sample <- 4*sum(sapply(1:length(bugs.sample), function(x) mVariance = (((percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*(1-percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']))/percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'Runs'])*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])^2)))
size.sample.period.site <- length(sample.ids)
temp <- data.frame(YearWeek = periods.rand[i], CustomerSiteId = period.sites[j], SampleSize = size.sample.period.site, UniquePositives = unique.bugs.in.sample, CoDetectionRate = co.detections.in.sample, RiskRatio = risk.metric.in.sample, RiskVariance = metric.var.in.sample)
site.samples <- rbind(site.samples, temp)
}
}
period.samples <- rbind(period.samples, site.samples)
}
rand.sample <- rbind(rand.sample, period.samples)
}
head(rand.sample)
a <- runs.rand[runs.rand$YearWeek=='2013-26' & runs.rand$CustomerSiteId==7, ]
head(a)
nrow(a)
View(rand.sample)
a <- runs.rand[runs.rand$YearWeek %in% c('2013-24','2013-25','2013-26','2013-27','2013-28') & runs.rand$CustomerSiteId==7, ]
View(a)
periods.rand
i <- 3
period.sites
runs.rand.period <- runs.rand[runs.rand$YearWeek %in% periods[(i-2):(i+2)], ]
period.threshold <- 100
period.sites <- unique(runs.rand.period$CustomerSiteId)
period.sites
j <- 2
period.sites[j]
runs.rand.period.site <- runs.rand.period[runs.rand.period$CustomerSiteId==period.sites[j], ]
periods.rand[(i-2):(i+2)]
periods[(i-2):(i+2)]
runs.rand.period <- runs.rand[runs.rand$YearWeek %in% periods.rand[(i-2):(i+2)], ]
# loop through all sites in the period and bin runs into group of threshold or less
period.threshold <- 100
period.sites <- unique(runs.rand.period$CustomerSiteId)
period.samples <- c()
runs.rand.period.site <- runs.rand.period[runs.rand.period$CustomerSiteId==period.sites[j], ]
# if there are less than threshold runs in the period (centered 5 weeks, so < threshold/5 runs/week) for a given site, skip it
if(nrow(runs.rand.period.site) < period.threshold) { next() }
# if there are more than threshold runs in the period for a given site, split them out into multiple segements
divisor <- ceiling(nrow(runs.rand.period.site)/period.threshold)
sample.size <- round(nrow(runs.rand.period.site)/divisor, 0)
sample.ids.init <- sample(runs.rand.period.site$RunDataId, sample.size, FALSE)
sample.ids.free <- runs.rand.period.site[!(runs.rand.period.site$RunDataId %in% sample.ids.init), 'RunDataId']
# for the number of samples (divisor), loop through and randomly choose RunDataIds from the site in the period to determine:
# 1. the number of unique organisms in the period, 2. the co-detection rate, and 3. the risk metric
######################################## MAY ALSO WANT TO ADD IN THE CALCULATION FOR THE CI OF THE RISK METRIC
site.samples <- c()
for(k in 1:divisor) {
if(k == 1) {
sample.ids <- sample.ids.init
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
metric.var.in.sample <- 4*sum(sapply(1:length(bugs.sample), function(x) mVariance = (((percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*(1-percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']))/percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'Runs'])*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])^2)))
size.sample.period.site <- length(sample.ids)
temp <- data.frame(YearWeek = periods.rand[i], CustomerSiteId = period.sites[j], SampleSize = size.sample.period.site, UniquePositives = unique.bugs.in.sample, CoDetectionRate = co.detections.in.sample, RiskRatio = risk.metric.in.sample, RiskVariance = metric.var.in.sample)
site.samples <- rbind(site.samples, temp)
} else if (k < divisor) {
sample.ids <- sample(sample.ids.free, sample.size, FALSE)
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
metric.var.in.sample <- 4*sum(sapply(1:length(bugs.sample), function(x) mVariance = (((percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*(1-percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']))/percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'Runs'])*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])^2)))
size.sample.period.site <- length(sample.ids)
temp <- data.frame(YearWeek = periods.rand[i], CustomerSiteId = period.sites[j], SampleSize = size.sample.period.site, UniquePositives = unique.bugs.in.sample, CoDetectionRate = co.detections.in.sample, RiskRatio = risk.metric.in.sample, RiskVariance = metric.var.in.sample)
sample.ids.init <- c(sample.ids.init, sample.ids)
sample.ids.free <- sample.ids.free[!(sample.ids.free %in% sample.ids.init)]
site.samples <- rbind(site.samples, temp)
} else {
sample.ids <- sample.ids.free
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
metric.var.in.sample <- 4*sum(sapply(1:length(bugs.sample), function(x) mVariance = (((percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*(1-percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']))/percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'Runs'])*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])^2)))
size.sample.period.site <- length(sample.ids)
temp <- data.frame(YearWeek = periods.rand[i], CustomerSiteId = period.sites[j], SampleSize = size.sample.period.site, UniquePositives = unique.bugs.in.sample, CoDetectionRate = co.detections.in.sample, RiskRatio = risk.metric.in.sample, RiskVariance = metric.var.in.sample)
site.samples <- rbind(site.samples, temp)
}
}
period.samples <- rbind(period.samples, site.samples)
View(period.samples)
93+93
j
period.sites[j]
period.sites
period.sites[1]
j <- 1
period.samples <- c()
runs.rand.period.site <- runs.rand.period[runs.rand.period$CustomerSiteId==period.sites[j], ]
# if there are less than threshold runs in the period (centered 5 weeks, so < threshold/5 runs/week) for a given site, skip it
if(nrow(runs.rand.period.site) < period.threshold) { next() }
# if there are more than threshold runs in the period for a given site, split them out into multiple segements
divisor <- ceiling(nrow(runs.rand.period.site)/period.threshold)
sample.size <- round(nrow(runs.rand.period.site)/divisor, 0)
sample.ids.init <- sample(runs.rand.period.site$RunDataId, sample.size, FALSE)
sample.ids.free <- runs.rand.period.site[!(runs.rand.period.site$RunDataId %in% sample.ids.init), 'RunDataId']
# for the number of samples (divisor), loop through and randomly choose RunDataIds from the site in the period to determine:
# 1. the number of unique organisms in the period, 2. the co-detection rate, and 3. the risk metric
######################################## MAY ALSO WANT TO ADD IN THE CALCULATION FOR THE CI OF THE RISK METRIC
site.samples <- c()
for(k in 1:divisor) {
if(k == 1) {
sample.ids <- sample.ids.init
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
metric.var.in.sample <- 4*sum(sapply(1:length(bugs.sample), function(x) mVariance = (((percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*(1-percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']))/percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'Runs'])*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])^2)))
size.sample.period.site <- length(sample.ids)
temp <- data.frame(YearWeek = periods.rand[i], CustomerSiteId = period.sites[j], SampleSize = size.sample.period.site, UniquePositives = unique.bugs.in.sample, CoDetectionRate = co.detections.in.sample, RiskRatio = risk.metric.in.sample, RiskVariance = metric.var.in.sample)
site.samples <- rbind(site.samples, temp)
} else if (k < divisor) {
sample.ids <- sample(sample.ids.free, sample.size, FALSE)
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
metric.var.in.sample <- 4*sum(sapply(1:length(bugs.sample), function(x) mVariance = (((percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*(1-percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']))/percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'Runs'])*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])^2)))
size.sample.period.site <- length(sample.ids)
temp <- data.frame(YearWeek = periods.rand[i], CustomerSiteId = period.sites[j], SampleSize = size.sample.period.site, UniquePositives = unique.bugs.in.sample, CoDetectionRate = co.detections.in.sample, RiskRatio = risk.metric.in.sample, RiskVariance = metric.var.in.sample)
sample.ids.init <- c(sample.ids.init, sample.ids)
sample.ids.free <- sample.ids.free[!(sample.ids.free %in% sample.ids.init)]
site.samples <- rbind(site.samples, temp)
} else {
sample.ids <- sample.ids.free
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
metric.var.in.sample <- 4*sum(sapply(1:length(bugs.sample), function(x) mVariance = (((percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*(1-percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']))/percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'Runs'])*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])^2)))
size.sample.period.site <- length(sample.ids)
temp <- data.frame(YearWeek = periods.rand[i], CustomerSiteId = period.sites[j], SampleSize = size.sample.period.site, UniquePositives = unique.bugs.in.sample, CoDetectionRate = co.detections.in.sample, RiskRatio = risk.metric.in.sample, RiskVariance = metric.var.in.sample)
site.samples <- rbind(site.samples, temp)
}
}
period.samples <- rbind(period.samples, site.samples)
View(period.samples)
80*3+78
mean(period.samples$UniquePositives)
mean(period.samples$CoDetectionRate)
mean(period.samples$RiskRatio)
mean(period.samples$RiskVariance)
sqrt(mean(period.samples$RiskVariance))
mean(period.samples$RiskRatio) + 1.96*sqrt(mean(period.samples$RiskVariance))
mean(period.samples$RiskRatio) - 1.96*sqrt(mean(period.samples$RiskVariance))
head(a)
b <- bugs.df[bugs.df$RunDataId %in% a$RunDataId, ]
head(b)
unique(b$ShortName)
length(unique(b$ShortName))
with(data.frame(b, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))
d <- with(data.frame(b, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))
head(a)
head(b)
head(d)
d[d$Positives > 1, ]
length(d[d$Positives > 1, 'RunDataId'])
nrow(d[d$Positives > 1, ])/nrow(a)
mean(period.samples$CoDetectionRate)
period.sites[j]
period.samples <- c()
runs.rand.period.site <- runs.rand.period[runs.rand.period$CustomerSiteId==period.sites[j], ]
# if there are less than threshold runs in the period (centered 5 weeks, so < threshold/5 runs/week) for a given site, skip it
if(nrow(runs.rand.period.site) < period.threshold) { next() }
# if there are more than threshold runs in the period for a given site, split them out into multiple segements
divisor <- ceiling(nrow(runs.rand.period.site)/period.threshold)
sample.size <- round(nrow(runs.rand.period.site)/divisor, 0)
sample.ids.init <- sample(runs.rand.period.site$RunDataId, sample.size, FALSE)
sample.ids.free <- runs.rand.period.site[!(runs.rand.period.site$RunDataId %in% sample.ids.init), 'RunDataId']
# for the number of samples (divisor), loop through and randomly choose RunDataIds from the site in the period to determine:
# 1. the number of unique organisms in the period, 2. the co-detection rate, and 3. the risk metric
######################################## MAY ALSO WANT TO ADD IN THE CALCULATION FOR THE CI OF THE RISK METRIC
site.samples <- c()
for(k in 1:divisor) {
if(k == 1) {
sample.ids <- sample.ids.init
size.sample.period.site <- length(sample.ids)
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/size.sample.period.site
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
metric.var.in.sample <- 4*sum(sapply(1:length(bugs.sample), function(x) mVariance = (((percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*(1-percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']))/percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'Runs'])*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])^2)))
temp <- data.frame(YearWeek = periods.rand[i], CustomerSiteId = period.sites[j], SampleSize = size.sample.period.site, UniquePositives = unique.bugs.in.sample, CoDetectionRate = co.detections.in.sample, RiskRatio = risk.metric.in.sample, RiskVariance = metric.var.in.sample)
site.samples <- rbind(site.samples, temp)
} else if (k < divisor) {
sample.ids <- sample(sample.ids.free, sample.size, FALSE)
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/size.sample.period.site
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
metric.var.in.sample <- 4*sum(sapply(1:length(bugs.sample), function(x) mVariance = (((percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*(1-percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']))/percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'Runs'])*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])^2)))
temp <- data.frame(YearWeek = periods.rand[i], CustomerSiteId = period.sites[j], SampleSize = size.sample.period.site, UniquePositives = unique.bugs.in.sample, CoDetectionRate = co.detections.in.sample, RiskRatio = risk.metric.in.sample, RiskVariance = metric.var.in.sample)
sample.ids.init <- c(sample.ids.init, sample.ids)
sample.ids.free <- sample.ids.free[!(sample.ids.free %in% sample.ids.init)]
site.samples <- rbind(site.samples, temp)
} else {
sample.ids <- sample.ids.free
size.sample.period.site <- length(sample.ids)
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/size.sample.period.site
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
metric.var.in.sample <- 4*sum(sapply(1:length(bugs.sample), function(x) mVariance = (((percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*(1-percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']))/percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'Runs'])*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])^2)))
temp <- data.frame(YearWeek = periods.rand[i], CustomerSiteId = period.sites[j], SampleSize = size.sample.period.site, UniquePositives = unique.bugs.in.sample, CoDetectionRate = co.detections.in.sample, RiskRatio = risk.metric.in.sample, RiskVariance = metric.var.in.sample)
site.samples <- rbind(site.samples, temp)
}
}
period.samples <- rbind(period.samples, site.samples)
mean(period.samples$CoDetectionRate)
nrow(d[d$Positives > 1, ])/nrow(a)
rm(a, b, d)
rand.sample <- c()
for(i in 3:(length(periods.rand)-2)) {
# for a given five week period, keep the runs in that period with the associated site
runs.rand.period <- runs.rand[runs.rand$YearWeek %in% periods.rand[(i-2):(i+2)], ]
# loop through all sites in the period and bin runs into group of threshold or less
period.threshold <- 100
period.sites <- unique(runs.rand.period$CustomerSiteId)
period.samples <- c()
for(j in 1:length(period.sites)) {
runs.rand.period.site <- runs.rand.period[runs.rand.period$CustomerSiteId==period.sites[j], ]
# if there are less than threshold runs in the period (centered 5 weeks, so < threshold/5 runs/week) for a given site, skip it
if(nrow(runs.rand.period.site) < period.threshold) { next() }
# if there are more than threshold runs in the period for a given site, split them out into multiple segements
divisor <- ceiling(nrow(runs.rand.period.site)/period.threshold)
sample.size <- round(nrow(runs.rand.period.site)/divisor, 0)
sample.ids.init <- sample(runs.rand.period.site$RunDataId, sample.size, FALSE)
sample.ids.free <- runs.rand.period.site[!(runs.rand.period.site$RunDataId %in% sample.ids.init), 'RunDataId']
# for the number of samples (divisor), loop through and randomly choose RunDataIds from the site in the period to determine:
# 1. the number of unique organisms in the period, 2. the co-detection rate, and 3. the risk metric
######################################## MAY ALSO WANT TO ADD IN THE CALCULATION FOR THE CI OF THE RISK METRIC
site.samples <- c()
for(k in 1:divisor) {
if(k == 1) {
sample.ids <- sample.ids.init
size.sample.period.site <- length(sample.ids)
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/size.sample.period.site
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
metric.var.in.sample <- 4*sum(sapply(1:length(bugs.sample), function(x) mVariance = (((percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*(1-percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']))/percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'Runs'])*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])^2)))
temp <- data.frame(YearWeek = periods.rand[i], CustomerSiteId = period.sites[j], SampleSize = size.sample.period.site, UniquePositives = unique.bugs.in.sample, CoDetectionRate = co.detections.in.sample, RiskRatio = risk.metric.in.sample, RiskVariance = metric.var.in.sample)
site.samples <- rbind(site.samples, temp)
} else if (k < divisor) {
sample.ids <- sample(sample.ids.free, sample.size, FALSE)
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/size.sample.period.site
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
metric.var.in.sample <- 4*sum(sapply(1:length(bugs.sample), function(x) mVariance = (((percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*(1-percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']))/percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'Runs'])*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])^2)))
temp <- data.frame(YearWeek = periods.rand[i], CustomerSiteId = period.sites[j], SampleSize = size.sample.period.site, UniquePositives = unique.bugs.in.sample, CoDetectionRate = co.detections.in.sample, RiskRatio = risk.metric.in.sample, RiskVariance = metric.var.in.sample)
sample.ids.init <- c(sample.ids.init, sample.ids)
sample.ids.free <- sample.ids.free[!(sample.ids.free %in% sample.ids.init)]
site.samples <- rbind(site.samples, temp)
} else {
sample.ids <- sample.ids.free
size.sample.period.site <- length(sample.ids)
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/size.sample.period.site
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
metric.var.in.sample <- 4*sum(sapply(1:length(bugs.sample), function(x) mVariance = (((percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*(1-percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']))/percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'Runs'])*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])^2)))
temp <- data.frame(YearWeek = periods.rand[i], CustomerSiteId = period.sites[j], SampleSize = size.sample.period.site, UniquePositives = unique.bugs.in.sample, CoDetectionRate = co.detections.in.sample, RiskRatio = risk.metric.in.sample, RiskVariance = metric.var.in.sample)
site.samples <- rbind(site.samples, temp)
}
}
period.samples <- rbind(period.samples, site.samples)
}
rand.sample <- rbind(rand.sample, period.samples)
}
head(rand.sample)
rand.agg <- with(rand.sample, aggregate(cbind(UniquePositives, CoDetectionRate, RiskRatio)~YearWeek, FUN=mean))
ggplot(rand.agg, aes(x=YearWeek, y=100*CoDetectionRate, fill='Co-Detection Rate')) + geom_bar(stat='identity') + geom_line(aes(x=YearWeek, y=RiskRatio, group='Risk Metric', color='Risk Metric', fill='Risk Metric'), lwd=1.5, color='black', data=rand.agg) + scale_fill_manual(values=c('grey','black'))
ggplot(rand.agg, aes(x=YearWeek, y=100*CoDetectionRate, fill='Co-Detection Rate')) + geom_bar(stat='identity') + geom_line(aes(x=YearWeek, y=25*RiskRatio, group='Risk Metric', color='Risk Metric', fill='Risk Metric'), lwd=1.5, color='black', data=rand.agg) + scale_fill_manual(values=c('grey','black'))
ggplot(rand.agg, aes(x=YearWeek, y=CoDetectionRate, fill='Co-Detection Rate')) + geom_bar(stat='identity') + geom_line(aes(x=YearWeek, y=RiskRatio, group='Risk Metric', color='Risk Metric', fill='Risk Metric'), lwd=1.5, color='black', data=rand.agg) + scale_fill_manual(values=c('grey','black'))
ggplot(rand.agg, aes(x=YearWeek, y=CoDetectionRate, fill='Co-Detection Rate')) + geom_bar(stat='identity') + geom_line(aes(x=YearWeek, y=RiskRatio, group='Risk Metric', color='Risk Metric', fill='Risk Metric'), lwd=1.5, color='black', data=rand.agg) + scale_fill_manual(values=c('grey','black')) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = dateBreaks, labels=dateLabels)
ggplot(rand.agg, aes(x=YearWeek, y=CoDetectionRate, fill='Co-Detection Rate')) + geom_bar(stat='identity') + geom_line(aes(x=YearWeek, y=RiskRatio, group='Risk Metric', color='Risk Metric', fill='Risk Metric'), lwd=1.5, color='black', data=rand.agg) + scale_fill_manual(values=c('grey','black'), name='') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = dateBreaks, labels=dateLabels) + labs(y='Co-Detections/Tests, Risk Metric', x='Date')
ggplot(rand.agg, aes(x=YearWeek, y=CoDetectionRate, fill='Co-Detection Rate')) + geom_bar(stat='identity') + geom_line(aes(x=YearWeek, y=RiskRatio, group='Risk Metric', color='Risk Metric', fill='Risk Metric'), lwd=1.5, color='black', data=rand.agg) + scale_fill_manual(values=c('grey','black'), name='') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = dateBreaks, labels=dateLabels) + labs(y='Co-Detections/Tests, Risk Metric', x='Date') + scale_y_continuous(limits=c(0, 1), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0))
ggplot(rand.agg, aes(x=YearWeek, y=CoDetectionRate, fill='Co-Detection Rate')) + geom_bar(stat='identity') + geom_line(aes(x=YearWeek, y=RiskRatio, group='Risk Metric', color='Risk Metric', fill='Risk Metric'), lwd=1.5, color='black', data=rand.agg) + scale_fill_manual(values=c('grey','black'), name='') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = dateBreaks, labels=dateLabels) + labs(y='Co-Detections/Tests, Risk Metric', x='Date') + scale_y_continuous(limits=c(0, 0.6), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0))
p.CoDetectionsAndRiskMetricSingleAxis <- ggplot(rand.agg, aes(x=YearWeek, y=CoDetectionRate, fill='Co-Detection Rate')) + geom_bar(stat='identity') + geom_line(aes(x=YearWeek, y=RiskRatio, group='Risk Metric', color='Risk Metric', fill='Risk Metric'), lwd=1.5, color='black', data=rand.agg) + scale_fill_manual(values=c('grey','black'), name='') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = dateBreaks, labels=dateLabels) + labs(y='Co-Detections/Tests, Risk Metric', x='Date') + scale_y_continuous(limits=c(0, 0.6), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0))
head(rand.agg)
rand.agg <- with(rand.sample, aggregate(cbind(UniquePositives, CoDetectionRate, RiskRatio, RiskVariance)~YearWeek, FUN=mean))
head(rand.agg)
ggplot(rand.agg, aes(x=YearWeek, y=CoDetectionRate, fill='Co-Detection Rate')) + geom_bar(stat='identity') + geom_line(aes(x=YearWeek, y=RiskRatio, group='Risk Metric', color='Risk Metric', fill='Risk Metric'), lwd=1.5, color='black', data=rand.agg) + scale_fill_manual(values=c('grey','black'), name='') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = dateBreaks, labels=dateLabels) + labs(y='Co-Detections/Tests, Risk Metric', x='Date') + scale_y_continuous(limits=c(0, 0.6), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0))
p.CoDetectionsAndRiskMetricSingleAxis <- ggplot(rand.agg, aes(x=YearWeek, y=CoDetectionRate, fill='Co-Detection Rate')) + geom_bar(stat='identity') + geom_line(aes(x=YearWeek, y=RiskRatio, group='Risk Metric', color='Risk Metric', fill='Risk Metric'), lwd=1.5, color='black', data=rand.agg) + scale_fill_manual(values=c('grey','black'), name='') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = dateBreaks, labels=dateLabels) + labs(y='Co-Detections/Tests, Risk Metric', x='Date') + scale_y_continuous(limits=c(0, 0.6), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0))
head(rand.agg)
qnorm(0.975)
qnorm(0.025)
rand.agg$LowerCI <- rand.agg$RiskRatio + qnorm(0.025)*sqrt(rand.agg$RiskVariance)
rand.agg$UpperCI <- rand.agg$RiskRatio + qnorm(0.975)*sqrt(rand.agg$RiskVariance)
head(rand.agg)
head(rand.sample)
with(rand.sample, aggregate(UniquePositives~YearWeek, FUN=sd))
rand.unique.sdev <- with(rand.sample, aggregate(UniquePositives~YearWeek, FUN=sd))
rand.agg <- with(rand.sample, aggregate(cbind(UniquePositives, CoDetectionRate, RiskRatio, RiskVariance)~YearWeek, FUN=mean))
rand.unique.sdev <- with(rand.sample, aggregate(UniquePositives~YearWeek, FUN=sd))
merge(rand.agg, rand.unique.sdev, by='YearWeek')
rand.agg$LowerCI <- rand.agg$RiskRatio + qnorm(0.025)*sqrt(rand.agg$RiskVariance)
rand.agg$UpperCI <- rand.agg$RiskRatio + qnorm(0.975)*sqrt(rand.agg$RiskVariance)
rand.agg <- with(rand.sample, aggregate(cbind(UniquePositives, CoDetectionRate, RiskRatio, RiskVariance)~YearWeek, FUN=mean))
rand.unique.sdev <- with(rand.sample, aggregate(UniquePositives~YearWeek, FUN=sd))
rand.agg <- merge(rand.agg, rand.unique.sdev, by='YearWeek')
rand.agg$LowerCI <- rand.agg$RiskRatio + qnorm(0.025)*sqrt(rand.agg$RiskVariance)
rand.agg$UpperCI <- rand.agg$RiskRatio + qnorm(0.975)*sqrt(rand.agg$RiskVariance)
head(rand.agg)
colnames(rand.unique.sdev)[2]
rand.agg <- with(rand.sample, aggregate(cbind(UniquePositives, CoDetectionRate, RiskRatio, RiskVariance)~YearWeek, FUN=mean))
rand.unique.sdev <- with(rand.sample, aggregate(UniquePositives~YearWeek, FUN=sd))
colnames(rand.unique.sdev)[2] <- 'SdevUniquePositives'
rand.agg <- merge(rand.agg, rand.unique.sdev, by='YearWeek')
rand.agg$LowerCI <- rand.agg$RiskRatio + qnorm(0.025)*sqrt(rand.agg$RiskVariance)
rand.agg$UpperCI <- rand.agg$RiskRatio + qnorm(0.975)*sqrt(rand.agg$RiskVariance)
head(rand.agg)
ggplot(aes(x=YearWeek, y=UniquePositives, group='Unique Positive Organisms', color='Unique Positive Organisms'), data=rand.agg) + geom_line(size=2) + geom_ribbon(aes(x=YearWeek, ymin=(UniquePositives-SdevUniquePositives), ymax=(UniquePositives+SdevUniquePositives)), data=rand.agg, color='transparent', fill='grey', alpha=0.5) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,16), breaks=c(0, 2, 4, 6, 8, 10, 12, 14,16)) + scale_color_manual(values=c('black'), name='', guide=FALSE) + labs(y='Count of Unique Organisms Circulating', x='Date')
p.UniqueCirculatingOrganismsSampled <- ggplot(aes(x=YearWeek, y=UniquePositives, group='Unique Positive Organisms', color='Unique Positive Organisms'), data=rand.agg) + geom_line(size=2) + geom_ribbon(aes(x=YearWeek, ymin=(UniquePositives-SdevUniquePositives), ymax=(UniquePositives+SdevUniquePositives)), data=rand.agg, color='transparent', fill='grey', alpha=0.5) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,16), breaks=c(0, 2, 4, 6, 8, 10, 12, 14,16)) + scale_color_manual(values=c('black'), name='', guide=FALSE) + labs(y='Count of Unique Organisms Circulating', x='Date')
ggplot(aes(x=YearWeek, y=UniquePositives, group='Unique Positive Organisms', color='Unique Positive Organisms'), data=rand.agg) + geom_line(size=2) + geom_ribbon(aes(x=YearWeek, ymin=(UniquePositives-SdevUniquePositives), ymax=(UniquePositives+SdevUniquePositives)), data=rand.agg, color='transparent', fill='grey', alpha=0.5) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,16), breaks=c(0, 2, 4, 6, 8, 10, 12, 14,16)) + scale_color_manual(values=c('black'), name='', guide=FALSE) + labs(y='Unique Organisms +/- 1 Standard Deviation', x='Date')
p.UniqueCirculatingOrganismsSampled <- ggplot(aes(x=YearWeek, y=UniquePositives, group='Unique Positive Organisms', color='Unique Positive Organisms'), data=rand.agg) + geom_line(size=2) + geom_ribbon(aes(x=YearWeek, ymin=(UniquePositives-SdevUniquePositives), ymax=(UniquePositives+SdevUniquePositives)), data=rand.agg, color='transparent', fill='grey', alpha=0.5) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,16), breaks=c(0, 2, 4, 6, 8, 10, 12, 14,16)) + scale_color_manual(values=c('black'), name='', guide=FALSE) + labs(y='Unique Organisms +/- 1 Standard Deviation', x='Date')
p.CoDetectionsAndRiskMetricSingleAxis <- ggplot(rand.agg, aes(x=YearWeek, y=CoDetectionRate, fill='Co-Detection Rate')) + geom_bar(stat='identity') + geom_line(aes(x=YearWeek, y=RiskRatio, group='Risk Metric', color='Risk Metric', fill='Risk Metric'), lwd=1.5, color='black', data=rand.agg) + scale_fill_manual(values=c('grey','black'), name='') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = dateBreaks, labels=dateLabels) + labs(y='Co-Detections/Tests, Risk Metric', x='Date') + scale_y_continuous(limits=c(0, 0.6), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0))
p.UniqueCirculatingOrganismsSampled <- ggplot(aes(x=YearWeek, y=UniquePositives, group='Unique Positive Organisms', color='Unique Positive Organisms'), data=rand.agg) + geom_line(size=2) + geom_ribbon(aes(x=YearWeek, ymin=(UniquePositives-SdevUniquePositives), ymax=(UniquePositives+SdevUniquePositives)), data=rand.agg, color='transparent', fill='grey', alpha=0.5) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,16), breaks=c(0, 2, 4, 6, 8, 10, 12, 14,16)) + scale_color_manual(values=c('black'), name='', guide=FALSE) + labs(y='Unique Organisms +/- 1 Standard Deviation', x='Date')
head(rand.agg)
ggplot(rand.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point()
ggplot(rand.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_ribbon(aes(ymin=LowerCI, ymax=UpperCI), alpha=0.2, data=rand.agg)
workDir <-'~/FilmArrayTrend/DualDetectionInvestigation/'
setwd(workDir)
# load libraries
library(RODBC)
library(lubridate)
library(ggplot2)
library(scales)
library(grid)
library(gridExtra)
library(gtable)
library(devtools)
install_github('BioAimie/dateManip')
library(dateManip)
ggplot(rand.agg, aes(x=YearWeek, y=CoDetectionRate, fill='Co-Detection Rate')) + geom_bar(stat='identity') + geom_line(aes(x=YearWeek, y=RiskRatio, group='Risk Metric', color='Risk Metric', fill='Risk Metric'), lwd=1.5, color='black', data=rand.agg) + scale_fill_manual(values=c('grey','black'), name='') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = dateBreaks, labels=dateLabels) + labs(y='Co-Detections/Tests, Risk Metric', x='Date') + scale_y_continuous(limits=c(0, 0.6), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0))
ggplot(rand.agg, aes(x=YearWeek, y=100*CoDetectionRate, fill='Co-Detection Rate')) + geom_bar(stat='identity') + geom_line(aes(x=YearWeek, y=25*RiskRatio, group='Risk Metric', color='Risk Metric', fill='Risk Metric'), lwd=1.5, color='black', data=rand.agg) + scale_fill_manual(values=c('grey','black'), name='') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = dateBreaks, labels=dateLabels) + labs(y='Co-Detections/Tests, Risk Metric', x='Date')
ggplot(aes(x=DateGroup, y=25*RiskRatio, group='TCPM', color='TCPM'), data=risk.count.cos.ci.agg) + geom_line(size=2) + geom_ribbon(aes(ymin=25*LL, ymax=25*UL), alpha=0.2, data=risk.count.cos.ci.agg, color='transparent', fill='blue') + geom_line(aes(x=DateGroup, y=100*CoDetectionRate, color='Co-Detections/Total Runs', group='Co-Detections/Total Runs'), data=risk.count.cos.ci.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=12, color='black'), axis.title.y=element_text(size=12), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='white', fill='white'), legend.position='bottom') + scale_x_discrete(breaks = dateBreaks, labels=dateLabels) + scale_color_manual(values=c('black','blue'), name='') + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + labs(title='', y='Co-Detection Rate (%)', x='Date') + scale_y_continuous(limits=c(0, 16), breaks=c(0,2,4,6,8,10,12,14,16))
ggplot(aes(x=YearWeek, y=UniquePositives, group='Unique Positive Organisms', color='Unique Positive Organisms'), data=rand.agg) + geom_line(size=2) + geom_ribbon(aes(x=YearWeek, ymin=(UniquePositives-SdevUniquePositives), ymax=(UniquePositives+SdevUniquePositives)), data=rand.agg, color='transparent', fill='grey', alpha=0.5) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,16), breaks=c(0, 2, 4, 6, 8, 10, 12, 14,16)) + scale_color_manual(values=c('black'), name='', guide=FALSE) + labs(y='Unique Organisms +/- 1 Standard Deviation', x='Date')
ggplot(rand.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_ribbon(aes(ymin=LowerCI, ymax=UpperCI), alpha=0.2, data=rand.agg)
head(risk.count.cos.ci.agg)
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point()
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_ribbon(aes(ymin=LL, ymax=UL), alpha=0.2, data=risk.count.cos.ci.agg)
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_ribbon(aes(x=CoDetectionRate, ymin=LL, ymax=UL), alpha=0.2, data=risk.count.cos.ci.agg)
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_smooth()
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point()
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(aes(x=CoDetectionRate, y=lm(RiskRatio~CoDetectionRate)))
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point()
lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)
summary(lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg))
attributes(lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg))
lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients
lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]]
lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]]
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]])
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]], size=3)
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]], size=2)
ggplot(risk.count.cos.agg, aes(x=DateGroup, y=100*CoDetectionRate, group='Co-Detection Rate', fill='Co-Detection Rate')) + geom_bar(stat='identity') + geom_line(aes(x=DateGroup, y=25*RiskRatio, group='TCPM', color='TCPM'), data=risk.count.cos.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,14), breaks=c(0, 2, 4, 6, 8, 10, 12, 14)) + scale_color_manual(values=c('red','blue','black'), name='') + scale_fill_manual(values='grey', name='') + labs(y='Co-Detection Rate (%)', x='Date')
ggplot(risk.count.cos.ci.agg, aes(x=DateGroup, y=100*CoDetectionRate, group='Co-Detection Rate', fill='Co-Detection Rate')) + geom_bar(stat='identity') + geom_line(aes(x=DateGroup, y=100*RiskRatio, group='TCPM', color='TCPM'), data=risk.count.cos.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_y_continuous(limits=c(0,14), breaks=c(0, 2, 4, 6, 8, 10, 12, 14)) + scale_color_manual(values=c('red','blue','black'), name='') + scale_fill_manual(values='grey', name='') + labs(y='Co-Detection Rate (%)', x='Date')
ggplot(risk.count.cos.ci.agg, aes(x=DateGroup, y=100*CoDetectionRate, group='Co-Detection Rate', fill='Co-Detection Rate')) + geom_bar(stat='identity') + geom_line(aes(x=DateGroup, y=100*RiskRatio, group='TCPM', color='TCPM'), data=risk.count.cos.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_color_manual(values=c('red','blue','black'), name='') + scale_fill_manual(values='grey', name='') + labs(y='Co-Detection Rate (%)', x='Date')
ggplot(risk.count.cos.ci.agg, aes(x=DateGroup, y=100*CoDetectionRate, group='Co-Detection Rate', fill='Co-Detection Rate')) + geom_bar(stat='identity') + geom_line(aes(x=DateGroup, y=100*RiskRatio, group='TCPM', color='TCPM'), data=risk.count.cos.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_color_manual(values=c('red','blue','black'), name='') + scale_fill_manual(values='grey', name='') + labs(y='Co-Detection Rate (%), TCPM (%)', x='Date')
p.CosAndRiskOnSingleAxisFinalFormat <- ggplot(risk.count.cos.ci.agg, aes(x=DateGroup, y=100*CoDetectionRate, group='Co-Detection Rate', fill='Co-Detection Rate')) + geom_bar(stat='identity') + geom_line(aes(x=DateGroup, y=100*RiskRatio, group='TCPM', color='TCPM'), data=risk.count.cos.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_color_manual(values=c('red','blue','black'), name='') + scale_fill_manual(values='grey', name='') + labs(y='Co-Detection Rate (%), TCPM (%)', x='Date')
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]], size=2)
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]], size=2)+ theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank())
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]], size=2)+ theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_continuous(limits=c(0, 0.125), breaks=c(0, 0.025, 0.05, 0.075, 0.1), labels=c('0.0%','2.5%','5.0%','7.5%','10.0%','12.5%'))
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]], size=2)+ theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_continuous(limits=c(0, 0.125), breaks=c(0, 0.025, 0.05, 0.075, 0.1, 0.125), labels=c('0.0%','2.5%','5.0%','7.5%','10.0%','12.5%'))
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]], size=2)+ theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_continuous(limits=c(0, 0.125), breaks=c(0, 0.025, 0.05, 0.075, 0.1, 0.125), labels=c('0.0%','2.5%','5.0%','7.5%','10.0%','12.5%')) + scale_y_continuous(limits=c(0, 0.5))
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]], size=2)+ theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_continuous(limits=c(0, 0.125), breaks=c(0, 0.025, 0.05, 0.075, 0.1, 0.125), labels=c('0.0%','2.5%','5.0%','7.5%','10.0%','12.5%')) + scale_y_continuous(limits=c(0, 0.55))
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]], size=2)+ theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_continuous(limits=c(0, 0.125), breaks=c(0, 0.025, 0.05, 0.075, 0.1, 0.125), labels=c('0.0%','2.5%','5.0%','7.5%','10.0%','12.5%')) + scale_y_continuous(limits=c(0, 0.5))
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]], size=2)+ theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_continuous(limits=c(0, 0.125), breaks=c(0, 0.025, 0.05, 0.075, 0.1, 0.125), labels=c('0.0%','2.5%','5.0%','7.5%','10.0%','12.5%'))
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]], size=2)+ theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank())
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]], size=2)+ theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_continuous(limits=c(0, 0.15), breaks=c(0, 0.025, 0.05, 0.075, 0.1, 0.125, 0.15), labels=c('0.0%','2.5%','5.0%','7.5%','10.0%','12.5%','15.0%'))
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]], size=2)+ theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_continuous(limits=c(0, 0.15), breaks=c(0, 0.025, 0.05, 0.075, 0.1, 0.125, 0.15), labels=c('0.0%','2.5%','5.0%','7.5%','10.0%','12.5%','15.0%')) + scale_y_continuous(limits=c(0, 0.5))
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]], size=2)+ theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_continuous(limits=c(0, 0.15), breaks=c(0, 0.025, 0.05, 0.075, 0.1, 0.125, 0.15), labels=c('0.0%','2.5%','5.0%','7.5%','10.0%','12.5%','15.0%')) + scale_y_continuous(limits=c(0, 1))
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]], size=2)+ theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_continuous(limits=c(0, 0.15), breaks=c(0, 0.025, 0.05, 0.075, 0.1, 0.125, 0.15), labels=c('0.0%','2.5%','5.0%','7.5%','10.0%','12.5%','15.0%')) + scale_y_continuous(limits=c(0, 1), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5))
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]], size=2)+ theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_continuous(limits=c(0, 0.15), breaks=c(0, 0.025, 0.05, 0.075, 0.1, 0.125, 0.15), labels=c('0.0%','2.5%','5.0%','7.5%','10.0%','12.5%','15.0%')) + scale_y_continuous(limits=c(0, 1), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6))
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]], size=2)+ theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_continuous(limits=c(0, 0.15), breaks=c(0, 0.025, 0.05, 0.075, 0.1, 0.125, 0.15), labels=c('0.0%','2.5%','5.0%','7.5%','10.0%','12.5%','15.0%')) + scale_y_continuous(limits=c(0, 1), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7))
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]], size=2)+ theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_continuous(limits=c(0, 0.15), breaks=c(0, 0.025, 0.05, 0.075, 0.1, 0.125, 0.15), labels=c('0.0%','2.5%','5.0%','7.5%','10.0%','12.5%','15.0%')) + scale_y_continuous(limits=c(0, 0.7), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7))
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]], size=2)+ theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_continuous(limits=c(0, 0.15), breaks=c(0, 0.025, 0.05, 0.075, 0.1, 0.125, 0.15), labels=c('0.0%','2.5%','5.0%','7.5%','10.0%','12.5%','15.0%')) + scale_y_continuous(limits=c(0, 0.7), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7), labels=c('0.0%','10.0%','20.0%','30.0%','40.0%','50.0%','60.0%','70.0%'))
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]], size=2, color='grey')+ theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_continuous(limits=c(0, 0.15), breaks=c(0, 0.025, 0.05, 0.075, 0.1, 0.125, 0.15), labels=c('0.0%','2.5%','5.0%','7.5%','10.0%','12.5%','15.0%')) + scale_y_continuous(limits=c(0, 0.7), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7), labels=c('0.0%','10.0%','20.0%','30.0%','40.0%','50.0%','60.0%','70.0%'))
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]], size=2, color='black', alpha=0.2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_continuous(limits=c(0, 0.15), breaks=c(0, 0.025, 0.05, 0.075, 0.1, 0.125, 0.15), labels=c('0.0%','2.5%','5.0%','7.5%','10.0%','12.5%','15.0%')) + scale_y_continuous(limits=c(0, 0.7), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7), labels=c('0.0%','10.0%','20.0%','30.0%','40.0%','50.0%','60.0%','70.0%'))
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]], size=2, color='black', alpha=0.2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_continuous(limits=c(0, 0.15), breaks=c(0, 0.025, 0.05, 0.075, 0.1, 0.125, 0.15), labels=c('0.0','2.5','5.0','7.5','10.0','12.5','15.0')) + scale_y_continuous(limits=c(0, 0.7), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7), labels=c('0.0','10.0','20.0','30.0','40.0','50.0','60.0','70.0')) + labs(y='TCPM (%)', x='Co-Detection Rate (%)')
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]], size=2, color='black', alpha=0.2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_continuous(limits=c(0, 0.15), breaks=c(0, 0.025, 0.05, 0.075, 0.1, 0.125, 0.15), labels=c('0.0','2.5','5.0','7.5','10.0','12.5','15.0')) + scale_y_continuous(limits=c(0, 0.7), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7), labels=c('0.0','10.0','20.0','30.0','40.0','50.0','60.0','70.0')) + labs(y='TCPM (%)', x='Co-Detection Rate (%)') + annotate('text', x=0.12, y=0.6, label='R2 = X')
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]], size=2, color='black', alpha=0.2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_continuous(limits=c(0, 0.15), breaks=c(0, 0.025, 0.05, 0.075, 0.1, 0.125, 0.15), labels=c('0.0','2.5','5.0','7.5','10.0','12.5','15.0')) + scale_y_continuous(limits=c(0, 0.7), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7), labels=c('0.0','10.0','20.0','30.0','40.0','50.0','60.0','70.0')) + labs(y='TCPM (%)', x='Co-Detection Rate (%)') + annotate('text', x=0.12, y=0.6, label='R2 = X', size=12)
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]], size=2, color='black', alpha=0.2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_continuous(limits=c(0, 0.15), breaks=c(0, 0.025, 0.05, 0.075, 0.1, 0.125, 0.15), labels=c('0.0','2.5','5.0','7.5','10.0','12.5','15.0')) + scale_y_continuous(limits=c(0, 0.7), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7), labels=c('0.0','10.0','20.0','30.0','40.0','50.0','60.0','70.0')) + labs(y='TCPM (%)', x='Co-Detection Rate (%)') + annotate('text', x=0.12, y=0.6, label=paste('R2 =', lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$r.squared, sep=' '), size=12)
lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$r.squared
attributes(lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg))
summary(lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg))
attributes(summary(lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)))
summary(lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg))$r.squared
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]], size=2, color='black', alpha=0.2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_continuous(limits=c(0, 0.15), breaks=c(0, 0.025, 0.05, 0.075, 0.1, 0.125, 0.15), labels=c('0.0','2.5','5.0','7.5','10.0','12.5','15.0')) + scale_y_continuous(limits=c(0, 0.7), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7), labels=c('0.0','10.0','20.0','30.0','40.0','50.0','60.0','70.0')) + labs(y='TCPM (%)', x='Co-Detection Rate (%)') + annotate('text', x=0.12, y=0.6, label=paste('R2 =', round(summary(lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg))$r.squared, 3), sep=' '), size=12)
ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]], size=2, color='black', alpha=0.2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_continuous(limits=c(0, 0.15), breaks=c(0, 0.025, 0.05, 0.075, 0.1, 0.125, 0.15), labels=c('0.0','2.5','5.0','7.5','10.0','12.5','15.0')) + scale_y_continuous(limits=c(0, 0.7), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7), labels=c('0.0','10.0','20.0','30.0','40.0','50.0','60.0','70.0')) + labs(y='TCPM (%)', x='Co-Detection Rate (%)') + annotate('text', x=0.12, y=0.6, label=paste('R2 =', round(summary(lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg))$r.squared, 3), sep=' '), size=10)
p.CoDetVsTCPM <- ggplot(risk.count.cos.ci.agg, aes(x=CoDetectionRate, y=RiskRatio)) + geom_point() + geom_abline(intercept=lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[1]], slope = lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg)$coefficients[[2]], size=2, color='black', alpha=0.2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_continuous(limits=c(0, 0.15), breaks=c(0, 0.025, 0.05, 0.075, 0.1, 0.125, 0.15), labels=c('0.0','2.5','5.0','7.5','10.0','12.5','15.0')) + scale_y_continuous(limits=c(0, 0.7), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7), labels=c('0.0','10.0','20.0','30.0','40.0','50.0','60.0','70.0')) + labs(y='TCPM (%)', x='Co-Detection Rate (%)') + annotate('text', x=0.12, y=0.6, label=paste('R2 =', round(summary(lm(RiskRatio~CoDetectionRate, data=risk.count.cos.ci.agg))$r.squared, 3), sep=' '), size=10)
ggplot(risk.count.cos.ci.agg, aes(x=DateGroup, y=100*CoDetectionRate, group='Co-Detection Rate', fill='Co-Detection Rate')) + geom_bar(stat='identity') + geom_line(aes(x=DateGroup, y=100*RiskRatio, group='TCPM', color='TCPM'), data=risk.count.cos.agg, size=2) + theme(text=element_text(size=20, face='bold'), axis.text=element_text(size=16, color='black'), axis.title.y=element_text(size=16), axis.text.x=element_text(angle=90, hjust=1, vjust=0.5), panel.background=element_rect(color='transparent', fill='white'), legend.position='bottom', panel.grid=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete(breaks=dateBreaks, labels=dateLabels) + scale_color_manual(values=c('red','blue','black'), name='') + scale_fill_manual(values='grey', name='') + labs(y='Co-Detection Rate (%), TCPM (%)', x='Date')
