))))
head(riskratio.site.ci)
head(riskratio.site)
head(riskratio.avg)
do.call(rbind, lapply(1:length(bugs.sample), function(x) data.frame(YearWeek = periods.rand[i],
CustomerSiteId = period.sites[j],
ShortName = bugs.sample[x],
RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection']
))))
sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])
sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection']))
sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection']))
sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids.init, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
# risk.metric.in.sample <- do.call(rbind, lapply(1:length(bugs.sample), function(x) data.frame(YearWeek = periods.rand[i],
#                                                      CustomerSiteId = period.sites[j],
#                                                      ShortName = bugs.sample[x],
#                                                      RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection']
#                                               ))))
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
head(risk.count.cos.ci.agg)
data.frame(YearWeek = periods.rand[i], UniquePositives = unique.bugs.in.sample, RiskRatio = risk.metric.in.sample, CoDetectionRate = co.detections.in.sample)
nrow(runs.rand.period.site)
sample.size
191-96
runs.rand.period.site[!(runs.rand.period.site$RunDataId %in% sample.ids.init), 'RunDataId']
sample.ids.free <- runs.rand.period.site[!(runs.rand.period.site$RunDataId %in% sample.ids.init), 'RunDataId']
library(RODBC)
library(lubridate)
library(ggplot2)
library(scales)
library(grid)
library(gridExtra)
library(gtable)
library(devtools)
install_github('BioAimie/dateManip')
library(dateManip)
sample(sample.ids.free, sample.size, FALSE)
head(sample.ids.free)
sample.ids.free
sample.ids.free[!(sample.ids.free %in% sample.ids)]
sample.ids.init
divisor
for(k in 1:divisor) {
if(k == 1) {
sample.ids <- sample.ids.init
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
# risk.metric.in.sample <- do.call(rbind, lapply(1:length(bugs.sample), function(x) data.frame(YearWeek = periods.rand[i],
#                                                      CustomerSiteId = period.sites[j],
#                                                      ShortName = bugs.sample[x],
#                                                      RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection']
#                                               ))))
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
temp <- data.frame(YearWeek = periods.rand[i], UniquePositives = unique.bugs.in.sample, RiskRatio = risk.metric.in.sample, CoDetectionRate = co.detections.in.sample)
} else if (k < divisor) {
sample.ids <- sample(sample.ids.free, sample.size, FALSE)
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
temp <- data.frame(YearWeek = periods.rand[i], UniquePositives = unique.bugs.in.sample, RiskRatio = risk.metric.in.sample, CoDetectionRate = co.detections.in.sample)
sample.ids.init <- c(sample.ids.init, sample.ids)
sample.ids.free <- sample.ids.free[!(sample.ids.free %in% sample.ids.init)]
} else {
sample.ids <- sample.ids.free
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
temp <- data.frame(YearWeek = periods.rand[i], UniquePositives = unique.bugs.in.sample, RiskRatio = risk.metric.in.sample, CoDetectionRate = co.detections.in.sample)
}
}
for(k in 1:divisor) {
if(k == 1) {
sample.ids <- sample.ids.init
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
# risk.metric.in.sample <- do.call(rbind, lapply(1:length(bugs.sample), function(x) data.frame(YearWeek = periods.rand[i],
#                                                      CustomerSiteId = period.sites[j],
#                                                      ShortName = bugs.sample[x],
#                                                      RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection']
#                                               ))))
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
temp <- data.frame(YearWeek = periods.rand[i], UniquePositives = unique.bugs.in.sample, RiskRatio = risk.metric.in.sample, CoDetectionRate = co.detections.in.sample)
} else if (k < divisor) {
sample.ids <- sample(sample.ids.free, sample.size, FALSE)
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
temp <- data.frame(YearWeek = periods.rand[i], UniquePositives = unique.bugs.in.sample, RiskRatio = risk.metric.in.sample, CoDetectionRate = co.detections.in.sample)
sample.ids.init <- c(sample.ids.init, sample.ids)
sample.ids.free <- sample.ids.free[!(sample.ids.free %in% sample.ids.init)]
} else {
sample.ids <- sample.ids.free
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
temp <- data.frame(YearWeek = periods.rand[i], UniquePositives = unique.bugs.in.sample, RiskRatio = risk.metric.in.sample, CoDetectionRate = co.detections.in.sample)
}
print(temp)
}
# 1. the number of unique organisms in the period, 2. the co-detection rate, and 3. the risk metric
stats.sample <- c()
for(k in 1:divisor) {
if(k == 1) {
sample.ids <- sample.ids.init
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
# risk.metric.in.sample <- do.call(rbind, lapply(1:length(bugs.sample), function(x) data.frame(YearWeek = periods.rand[i],
#                                                      CustomerSiteId = period.sites[j],
#                                                      ShortName = bugs.sample[x],
#                                                      RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection']
#                                               ))))
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
temp <- data.frame(YearWeek = periods.rand[i], UniquePositives = unique.bugs.in.sample, RiskRatio = risk.metric.in.sample, CoDetectionRate = co.detections.in.sample)
stats.sample <- rbind(stats.sample)
} else if (k < divisor) {
sample.ids <- sample(sample.ids.free, sample.size, FALSE)
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
temp <- data.frame(YearWeek = periods.rand[i], UniquePositives = unique.bugs.in.sample, RiskRatio = risk.metric.in.sample, CoDetectionRate = co.detections.in.sample)
sample.ids.init <- c(sample.ids.init, sample.ids)
sample.ids.free <- sample.ids.free[!(sample.ids.free %in% sample.ids.init)]
stats.sample <- rbind(stats.sample)
} else {
sample.ids <- sample.ids.free
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
temp <- data.frame(YearWeek = periods.rand[i], UniquePositives = unique.bugs.in.sample, RiskRatio = risk.metric.in.sample, CoDetectionRate = co.detections.in.sample)
stats.sample <- rbind(stats.sample)
}
}
stats.sample
stats.sample <- c()
for(k in 1:divisor) {
if(k == 1) {
sample.ids <- sample.ids.init
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
# risk.metric.in.sample <- do.call(rbind, lapply(1:length(bugs.sample), function(x) data.frame(YearWeek = periods.rand[i],
#                                                      CustomerSiteId = period.sites[j],
#                                                      ShortName = bugs.sample[x],
#                                                      RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection']
#                                               ))))
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
temp <- data.frame(YearWeek = periods.rand[i], UniquePositives = unique.bugs.in.sample, RiskRatio = risk.metric.in.sample, CoDetectionRate = co.detections.in.sample)
stats.sample <- rbind(stats.sample, temp)
} else if (k < divisor) {
sample.ids <- sample(sample.ids.free, sample.size, FALSE)
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
temp <- data.frame(YearWeek = periods.rand[i], UniquePositives = unique.bugs.in.sample, RiskRatio = risk.metric.in.sample, CoDetectionRate = co.detections.in.sample)
sample.ids.init <- c(sample.ids.init, sample.ids)
sample.ids.free <- sample.ids.free[!(sample.ids.free %in% sample.ids.init)]
stats.sample <- rbind(stats.sample, temp)
} else {
sample.ids <- sample.ids.free
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
temp <- data.frame(YearWeek = periods.rand[i], UniquePositives = unique.bugs.in.sample, RiskRatio = risk.metric.in.sample, CoDetectionRate = co.detections.in.sample)
stats.sample <- rbind(stats.sample, temp)
}
}
stats.sample
stats.sample
period.threshold <- 100
period.sites <- unique(runs.rand.period$CustomerSiteId)
period.samples <- c()
for(j in 1:length(period.sites)) {
runs.rand.period.site <- runs.rand.period[runs.rand.period$CustomerSiteId==period.sites[j], ]
# if there are less than threshold runs in the period (centered 5 weeks, so < 10 runs/week) for a given site, skip it
if(nrow(runs.rand.period) < period.threshold) { next() }
# if there are more than threshold runs in the period for a given site, split them out into multiple segements
divisor <- ceiling(nrow(runs.rand.period.site)/period.threshold)
sample.size <- round(nrow(runs.rand.period.site)/divisor, 0)
sample.ids.init <- sample(runs.rand.period.site$RunDataId, sample.size, FALSE)
sample.ids.free <- runs.rand.period.site[!(runs.rand.period.site$RunDataId %in% sample.ids.init), 'RunDataId']
# for the number of samples (divisor), loop through and randomly choose RunDataIds from the site in the period to determine:
# 1. the number of unique organisms in the period, 2. the co-detection rate, and 3. the risk metric
site.samples <- c()
for(k in 1:divisor) {
if(k == 1) {
sample.ids <- sample.ids.init
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
# risk.metric.in.sample <- do.call(rbind, lapply(1:length(bugs.sample), function(x) data.frame(YearWeek = periods.rand[i],
#                                                      CustomerSiteId = period.sites[j],
#                                                      ShortName = bugs.sample[x],
#                                                      RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection']
#                                               ))))
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
temp <- data.frame(YearWeek = periods.rand[i], UniquePositives = unique.bugs.in.sample, RiskRatio = risk.metric.in.sample, CoDetectionRate = co.detections.in.sample)
site.samples <- rbind(site.samples, temp)
} else if (k < divisor) {
sample.ids <- sample(sample.ids.free, sample.size, FALSE)
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
temp <- data.frame(YearWeek = periods.rand[i], UniquePositives = unique.bugs.in.sample, RiskRatio = risk.metric.in.sample, CoDetectionRate = co.detections.in.sample)
sample.ids.init <- c(sample.ids.init, sample.ids)
sample.ids.free <- sample.ids.free[!(sample.ids.free %in% sample.ids.init)]
site.samples <- rbind(site.samples, temp)
} else {
sample.ids <- sample.ids.free
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
temp <- data.frame(YearWeek = periods.rand[i], UniquePositives = unique.bugs.in.sample, RiskRatio = risk.metric.in.sample, CoDetectionRate = co.detections.in.sample)
site.samples <- rbind(site.samples, temp)
}
}
period.samples <- rbind(period.samples, sites.samples)
}
period.samples <- c()
for(j in 1:length(period.sites)) {
runs.rand.period.site <- runs.rand.period[runs.rand.period$CustomerSiteId==period.sites[j], ]
# if there are less than threshold runs in the period (centered 5 weeks, so < 10 runs/week) for a given site, skip it
if(nrow(runs.rand.period) < period.threshold) { next() }
# if there are more than threshold runs in the period for a given site, split them out into multiple segements
divisor <- ceiling(nrow(runs.rand.period.site)/period.threshold)
sample.size <- round(nrow(runs.rand.period.site)/divisor, 0)
sample.ids.init <- sample(runs.rand.period.site$RunDataId, sample.size, FALSE)
sample.ids.free <- runs.rand.period.site[!(runs.rand.period.site$RunDataId %in% sample.ids.init), 'RunDataId']
# for the number of samples (divisor), loop through and randomly choose RunDataIds from the site in the period to determine:
# 1. the number of unique organisms in the period, 2. the co-detection rate, and 3. the risk metric
site.samples <- c()
for(k in 1:divisor) {
if(k == 1) {
sample.ids <- sample.ids.init
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
# risk.metric.in.sample <- do.call(rbind, lapply(1:length(bugs.sample), function(x) data.frame(YearWeek = periods.rand[i],
#                                                      CustomerSiteId = period.sites[j],
#                                                      ShortName = bugs.sample[x],
#                                                      RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection']
#                                               ))))
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
temp <- data.frame(YearWeek = periods.rand[i], UniquePositives = unique.bugs.in.sample, RiskRatio = risk.metric.in.sample, CoDetectionRate = co.detections.in.sample)
site.samples <- rbind(site.samples, temp)
} else if (k < divisor) {
sample.ids <- sample(sample.ids.free, sample.size, FALSE)
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
temp <- data.frame(YearWeek = periods.rand[i], UniquePositives = unique.bugs.in.sample, RiskRatio = risk.metric.in.sample, CoDetectionRate = co.detections.in.sample)
sample.ids.init <- c(sample.ids.init, sample.ids)
sample.ids.free <- sample.ids.free[!(sample.ids.free %in% sample.ids.init)]
site.samples <- rbind(site.samples, temp)
} else {
sample.ids <- sample.ids.free
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
temp <- data.frame(YearWeek = periods.rand[i], UniquePositives = unique.bugs.in.sample, RiskRatio = risk.metric.in.sample, CoDetectionRate = co.detections.in.sample)
site.samples <- rbind(site.samples, temp)
}
}
period.samples <- rbind(period.samples, site.samples)
}
j
period.sites
period.sites[j]
runs.rand.period.site <- runs.rand.period[runs.rand.period$CustomerSiteId==period.sites[j], ]
head(runs.rand.period.site)
i
# for a given five week period, keep the runs in that period with the associated site
runs.rand.period <- runs.rand[runs.rand$YearWeek %in% periods[(i-2):(i+2)], ]
# loop through all sites in the period and bin runs into group of threshold or less
period.threshold <- 100
period.sites <- unique(runs.rand.period$CustomerSiteId)
period.samples <- c()
for(j in 1:length(period.sites)) {
runs.rand.period.site <- runs.rand.period[runs.rand.period$CustomerSiteId==period.sites[j], ]
# if there are less than threshold runs in the period (centered 5 weeks, so < 10 runs/week) for a given site, skip it
if(nrow(runs.rand.period.site) < period.threshold) { next() }
# if there are more than threshold runs in the period for a given site, split them out into multiple segements
divisor <- ceiling(nrow(runs.rand.period.site)/period.threshold)
sample.size <- round(nrow(runs.rand.period.site)/divisor, 0)
sample.ids.init <- sample(runs.rand.period.site$RunDataId, sample.size, FALSE)
sample.ids.free <- runs.rand.period.site[!(runs.rand.period.site$RunDataId %in% sample.ids.init), 'RunDataId']
# for the number of samples (divisor), loop through and randomly choose RunDataIds from the site in the period to determine:
# 1. the number of unique organisms in the period, 2. the co-detection rate, and 3. the risk metric
site.samples <- c()
for(k in 1:divisor) {
if(k == 1) {
sample.ids <- sample.ids.init
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
# risk.metric.in.sample <- do.call(rbind, lapply(1:length(bugs.sample), function(x) data.frame(YearWeek = periods.rand[i],
#                                                      CustomerSiteId = period.sites[j],
#                                                      ShortName = bugs.sample[x],
#                                                      RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection']
#                                               ))))
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
temp <- data.frame(YearWeek = periods.rand[i], UniquePositives = unique.bugs.in.sample, RiskRatio = risk.metric.in.sample, CoDetectionRate = co.detections.in.sample)
site.samples <- rbind(site.samples, temp)
} else if (k < divisor) {
sample.ids <- sample(sample.ids.free, sample.size, FALSE)
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
temp <- data.frame(YearWeek = periods.rand[i], UniquePositives = unique.bugs.in.sample, RiskRatio = risk.metric.in.sample, CoDetectionRate = co.detections.in.sample)
sample.ids.init <- c(sample.ids.init, sample.ids)
sample.ids.free <- sample.ids.free[!(sample.ids.free %in% sample.ids.init)]
site.samples <- rbind(site.samples, temp)
} else {
sample.ids <- sample.ids.free
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
temp <- data.frame(YearWeek = periods.rand[i], UniquePositives = unique.bugs.in.sample, RiskRatio = risk.metric.in.sample, CoDetectionRate = co.detections.in.sample)
site.samples <- rbind(site.samples, temp)
}
}
period.samples <- rbind(period.samples, site.samples)
}
period.samples
rand.sample <- c()
for(i in 3:(length(periods.rand)-2)) {
# for a given five week period, keep the runs in that period with the associated site
runs.rand.period <- runs.rand[runs.rand$YearWeek %in% periods[(i-2):(i+2)], ]
# loop through all sites in the period and bin runs into group of threshold or less
period.threshold <- 100
period.sites <- unique(runs.rand.period$CustomerSiteId)
period.samples <- c()
for(j in 1:length(period.sites)) {
runs.rand.period.site <- runs.rand.period[runs.rand.period$CustomerSiteId==period.sites[j], ]
# if there are less than threshold runs in the period (centered 5 weeks, so < 10 runs/week) for a given site, skip it
if(nrow(runs.rand.period.site) < period.threshold) { next() }
# if there are more than threshold runs in the period for a given site, split them out into multiple segements
divisor <- ceiling(nrow(runs.rand.period.site)/period.threshold)
sample.size <- round(nrow(runs.rand.period.site)/divisor, 0)
sample.ids.init <- sample(runs.rand.period.site$RunDataId, sample.size, FALSE)
sample.ids.free <- runs.rand.period.site[!(runs.rand.period.site$RunDataId %in% sample.ids.init), 'RunDataId']
# for the number of samples (divisor), loop through and randomly choose RunDataIds from the site in the period to determine:
# 1. the number of unique organisms in the period, 2. the co-detection rate, and 3. the risk metric
site.samples <- c()
for(k in 1:divisor) {
if(k == 1) {
sample.ids <- sample.ids.init
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
# risk.metric.in.sample <- do.call(rbind, lapply(1:length(bugs.sample), function(x) data.frame(YearWeek = periods.rand[i],
#                                                      CustomerSiteId = period.sites[j],
#                                                      ShortName = bugs.sample[x],
#                                                      RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection']
#                                               ))))
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
temp <- data.frame(YearWeek = periods.rand[i], UniquePositives = unique.bugs.in.sample, RiskRatio = risk.metric.in.sample, CoDetectionRate = co.detections.in.sample)
site.samples <- rbind(site.samples, temp)
} else if (k < divisor) {
sample.ids <- sample(sample.ids.free, sample.size, FALSE)
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
temp <- data.frame(YearWeek = periods.rand[i], UniquePositives = unique.bugs.in.sample, RiskRatio = risk.metric.in.sample, CoDetectionRate = co.detections.in.sample)
sample.ids.init <- c(sample.ids.init, sample.ids)
sample.ids.free <- sample.ids.free[!(sample.ids.free %in% sample.ids.init)]
site.samples <- rbind(site.samples, temp)
} else {
sample.ids <- sample.ids.free
runs.sample.period.site <- runs.rand.period.site[runs.rand.period.site$RunDataId %in% sample.ids, ]
bugs.sample.period.site <- bugs.df[bugs.df$RunDataId %in% runs.sample.period.site$RunDataId, ]
unique.bugs.in.sample <- length(unique(bugs.sample.period.site$BugPositive))
co.detections.in.sample <- sum(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~RunDataId, FUN=sum))$Positives > 1)/length(unique(bugs.sample.period.site$RunDataId))
bugs.sample <- as.character(unique(bugs.sample.period.site$ShortName))
percent.det.sample <- data.frame(with(data.frame(bugs.sample.period.site, Positives = 1), aggregate(Positives~ShortName, FUN=sum)), Runs = nrow(runs.sample.period.site))
percent.det.sample$PercentDetection <- with(percent.det.sample, Positives/Runs)
risk.metric.in.sample <- sum(sapply(1:length(bugs.sample), function(x) RiskRatio = percent.det.sample[percent.det.sample$ShortName==bugs.sample[x],'PercentDetection']*sum(percent.det.sample[percent.det.sample$ShortName!=bugs.sample[x],'PercentDetection'])))
temp <- data.frame(YearWeek = periods.rand[i], UniquePositives = unique.bugs.in.sample, RiskRatio = risk.metric.in.sample, CoDetectionRate = co.detections.in.sample)
site.samples <- rbind(site.samples, temp)
}
}
period.samples <- rbind(period.samples, site.samples)
}
rand.sample <- rbind(rand.sample, period.samples)
}
head(rand.sample)
with(rand.sample, aggregate(cbind(UniquePositives, CoDetectionRate, RiskRatio)~YearWeek, FUN=mean))
rand.agg <- with(rand.sample, aggregate(cbind(UniquePositives, CoDetectionRate, RiskRatio)~YearWeek, FUN=mean))
head(rand.agg)
ggplot(rand.agg, aes(x=YearWeek, y=UniquePositives)) + geom_point()
ggplot(rand.agg, aes(x=YearWeek, y=UniquePositives)) + geom_point(color='black') + geom_point(aes(x=YearWeek, y=CoDetectionRate*10), data=rand.agg)
ggplot(rand.agg, aes(x=YearWeek, y=UniquePositives)) + geom_point(color='black') + geom_point(aes(x=YearWeek, y=CoDetectionRate*10), data=rand.agg, color='blue')
ggplot(rand.agg, aes(x=YearWeek, y=UniquePositives)) + geom_point(color='black') + geom_point(aes(x=YearWeek, y=CoDetectionRate*10), data=rand.agg, color='blue') + geom_point(aes(x=YearWeek, y=RiskRatio*25), data=rand.agg, color='red')
ggplot(rand.agg, aes(x=YearWeek, y=UniquePositives)) + geom_point(color='black') + geom_point(aes(x=YearWeek, y=CoDetectionRate*20), data=rand.agg, color='blue') + geom_point(aes(x=YearWeek, y=RiskRatio*25), data=rand.agg, color='red')
ggplot(rand.agg, aes(x=YearWeek, y=UniquePositives)) + geom_point(color='black') + geom_point(aes(x=YearWeek, y=CoDetectionRate*25), data=rand.agg, color='blue') + geom_point(aes(x=YearWeek, y=RiskRatio*25), data=rand.agg, color='red')
ggplot(rand.agg, aes(x=YearWeek, y=UniquePositives)) + geom_point(color='black') + geom_point(aes(x=YearWeek, y=CoDetectionRate*100), data=rand.agg, color='blue') + geom_point(aes(x=YearWeek, y=RiskRatio*25), data=rand.agg, color='red')
