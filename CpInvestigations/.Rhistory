png(temp.file, width = 1400, height = 800)
print(temp.plot)
dev.off()
}
cp.assays.ordered <- merge(cp.assays.ordered, with(data.frame(cp.assays.ordered, IndexCount = 1), aggregate(IndexCount~AssayName+Index, FUN=sum)), by=c('AssayName','Index'))
for(k in 1:length(assays)) {
temp.dat <- subset(cp.assays.ordered, AssayName==assays[k])
temp.plot <- ggplot(temp.dat, aes(x=as.factor(Index), y=MedianCp, fill=IndexCount)) + geom_boxplot() + theme(legend.position='bottom', plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5), panel.background=element_rect(fill='white', color='transparent')) + scale_fill_continuous(low='dodgerblue', high='navyblue', name='Data Points in Sample') + scale_y_continuous(breaks=c(0,5,10,15,20,25,30), limits=c(0,30)) + labs(title=paste('Median Cp of', assays[k],'in Trend Population\nby Order of Detection', sep=' '), y='Median Cp', x='Order of Detection')
temp.file <- paste(imgDir, choose.panel, '_', gsub('\\/','-', assays[k]), '_OrderOfDetectionInRunByCps.png', sep='')
png(temp.file, width = 1400, height = 800)
print(temp.plot)
dev.off()
}
head(cp.assays.ordered)
cp.assays.ordered <- do.call(rbind, lapply(1:length(runs.keep), function(x) data.frame(cp.assays[cp.assays$RunDataId==runs.keep[x], ][order(cp.assays[cp.assays$RunDataId==runs.keep[x], 'MedianCp']), ], Index = seq(1, length(cp.assays[cp.assays$RunDataId==runs.keep[x], 'MedianCp']), 1))))
cp.assays.ordered <- merge(cp.assays.ordered, unique(cp.df[,c('RunDataId','CustomerSiteId','SerialNo')]), by='RunDataId')
cp.assays.ordered <- merge(cp.assays.ordered, with(data.frame(cp.assays.ordered, IndexCount = 1), aggregate(IndexCount~AssayName+Index, FUN=sum)), by=c('AssayName','Index'))
head(cp.assays.ordered)
with(data.frame(cp.assays.ordered, SiteCount = 1), aggregate(SiteCount~CustomerSiteId, FUN=sum))
merge(cp.assays.ordered, with(data.frame(cp.assays.ordered, SiteCount = 1), aggregate(SiteCount~CustomerSiteId, FUN=sum)), by='CustomerSiteId')
cp.assays.ordered <- merge(cp.assays.ordered, with(data.frame(cp.assays.ordered, SiteCount = 1), aggregate(SiteCount~CustomerSiteId, FUN=sum)), by='CustomerSiteId')
head(cp.assays.ordered)
unique(cp.assays.ordered$CustomerSiteId)
sites <- unique(cp.assays.ordered$CustomerSiteId)
sites
l <- 1
l
temp.dat <- subset(cp.assays.ordered, AssayName==assays[k] & CustomerSiteId==sites[l])
head(temp.dat)
head(cp.assays.ordered)
rm(sites)
temp.dat <- subset(cp.assays.ordered, AssayName==assays[k])
head(temp.dat)
ggplot(temp.dat, aes(x=as.factor(Index), y=MedianCp, fill=SiteCount)) + geom_boxplot() + theme(legend.position='bottom', plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5), panel.background=element_rect(fill='white', color='transparent')) + scale_fill_continuous(low='dodgerblue', high='navyblue', name='Data Points in Sample') + scale_y_continuous(breaks=c(0,5,10,15,20,25,30), limits=c(0,30)) + labs(title=paste('Median Cp of', assays[k],'in Trend Population\nby Order of Detection', sep=' '), y='Median Cp', x='Order of Detection')
ggplot(temp.dat, aes(x=as.factor(CustomerSiteId), y=MedianCp, fill=SiteCount)) + geom_boxplot() + theme(legend.position='bottom', plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5), panel.background=element_rect(fill='white', color='transparent')) + scale_fill_continuous(low='dodgerblue', high='navyblue', name='Data Points in Sample') + scale_y_continuous(breaks=c(0,5,10,15,20,25,30), limits=c(0,30)) + labs(title=paste('Median Cp of', assays[k],'in Trend Population\nby Order of Detection', sep=' '), y='Median Cp', x='Order of Detection')
ggplot(temp.dat, aes(x=as.factor(CustomerSiteId), y=MedianCp, fill=SiteCount)) + geom_boxplot() + theme(legend.position='bottom', plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5), panel.background=element_rect(fill='white', color='transparent')) + scale_fill_continuous(low='dodgerblue', high='navyblue', name='Data Points in Sample') + scale_y_continuous(breaks=c(0,5,10,15,20,25,30), limits=c(0,30)) + labs(title=paste('Median Cp of', assays[k],'in Trend Population\nby Site', sep=' '), y='Median Cp', x='Order of Detection')
for(k in 1:length(assays)) {
temp.dat <- subset(cp.assays.ordered, AssayName==assays[k])
temp.plot <- ggplot(temp.dat, aes(x=as.factor(Index), y=MedianCp, fill=SiteCount)) + geom_boxplot() + theme(legend.position='bottom', plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5), panel.background=element_rect(fill='white', color='transparent')) + scale_fill_continuous(low='dodgerblue', high='navyblue', name='Data Points in Sample') + scale_y_continuous(breaks=c(0,5,10,15,20,25,30), limits=c(0,30)) + labs(title=paste('Median Cp of', assays[k],'in Trend Population\nby Order of Detection', sep=' '), y='Median Cp', x='Order of Detection')
temp.file <- paste(imgDir, choose.panel, '_', gsub('\\/','-', assays[k]), '_SiteDistributionOfCps.png', sep='')
png(temp.file, width = 1400, height = 800)
print(temp.plot)
dev.off()
}
for(k in 1:length(assays)) {
temp.dat <- subset(cp.assays.ordered, AssayName==assays[k])
temp.plot <- ggplot(temp.dat, aes(x=as.factor(CustomerSiteId), y=MedianCp, fill=SiteCount)) + geom_boxplot() + theme(legend.position='bottom', plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5), panel.background=element_rect(fill='white', color='transparent')) + scale_fill_continuous(low='dodgerblue', high='navyblue', name='Data Points in Sample') + scale_y_continuous(breaks=c(0,5,10,15,20,25,30), limits=c(0,30)) + labs(title=paste('Median Cp of', assays[k],'in Trend Population\nby Order of Detection', sep=' '), y='Median Cp', x='Order of Detection')
temp.file <- paste(imgDir, choose.panel, '_', gsub('\\/','-', assays[k]), '_SiteDistributionOfCps.png', sep='')
png(temp.file, width = 1400, height = 800)
print(temp.plot)
dev.off()
}
head(cp.assays.ordered)
with(data.frame(cp.assays.ordered, RunCount = 1), aggregate(RunCount~SerialNo, FUN=sum))
a <- merge(cp.assays.ordered, with(data.frame(cp.assays.ordered, RunCount = 1), aggregate(RunCount~SerialNo, FUN=sum)), by='SerialNo')
rm(a)
cp.assays.ordered <- merge(cp.assays.ordered, with(data.frame(cp.assays.ordered, RunCount = 1), aggregate(RunCount~SerialNo, FUN=sum)), by='SerialNo')
temp.dat <- subset(cp.assays.ordered, AssayName==assays[k])
head(temp.dat)
temp.dat <- subset(cp.assays.ordered, AssayName==assays[k])
ggplot(subset(temp.dat, RunCount >= 50), aes(x=SerialNo, y=MedianCp, fill=RunCount)) + geom_boxplot() + theme(legend.position='bottom', plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5), panel.background=element_rect(fill='white', color='transparent')) + scale_fill_continuous(low='dodgerblue', high='navyblue', name='Data Points in Sample') + scale_y_continuous(breaks=c(0,5,10,15,20,25,30), limits=c(0,30)) + labs(title=paste('Median Cp of', assays[k],'in Trend Population\nby FilmArray Instrument', sep=' '), y='Median Cp', x='FilmArray Instrument\n(with >= 50 runs)')
ggplot(subset(temp.dat, RunCount >= 50), aes(x=SerialNo, y=MedianCp, fill=RunCount)) + geom_boxplot() + theme(legend.position='bottom', plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5, angle=90), panel.background=element_rect(fill='white', color='transparent')) + scale_fill_continuous(low='dodgerblue', high='navyblue', name='Data Points in Sample') + scale_y_continuous(breaks=c(0,5,10,15,20,25,30), limits=c(0,30)) + labs(title=paste('Median Cp of', assays[k],'in Trend Population\nby FilmArray Instrument', sep=' '), y='Median Cp', x='FilmArray Instrument\n(with >= 50 runs)')
for(k in 1:length(assays)) {
temp.dat <- subset(cp.assays.ordered, AssayName==assays[k])
temp.plot <- ggplot(subset(temp.dat, RunCount >= 50), aes(x=SerialNo, y=MedianCp, fill=RunCount)) + geom_boxplot() + theme(legend.position='bottom', plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5, angle=90), panel.background=element_rect(fill='white', color='transparent')) + scale_fill_continuous(low='dodgerblue', high='navyblue', name='Data Points in Sample') + scale_y_continuous(breaks=c(0,5,10,15,20,25,30), limits=c(0,30)) + labs(title=paste('Median Cp of', assays[k],'in Trend Population\nby FilmArray Instrument', sep=' '), y='Median Cp', x='FilmArray Instrument\n(with >= 50 runs)')
temp.file <- paste(imgDir, choose.panel, '_', gsub('\\/','-', assays[k]), '_InstrumentDistributionOfCps.png', sep='')
png(temp.file, width = 1400, height = 800)
print(temp.plot)
dev.off()
}
head(cp.targets.ordered)
unique(cp.targets.ordered[cp.targets.ordered$TargetTriggerAssay=='mecA', 'TargetName'])
head(cp.assays.ordered)
head(cp.df)
unique(cp.df[cp.df$AssayName=='mecA', 'TargetName'])
unique(cp.df[cp.df$TargetName=='mecA', 'AssayName'])
head(cp.median)
cp.df[cp.df$RunDataId==27220, ]
cp.assays[cp.assays$RunDataId==27220, ]
cp.targets[cp.targets$RunDataId==27220, ]
unqiue(cp.df[cp.df$TargetName=='mecA', 'RunDataId'])
unique(cp.df[cp.df$TargetName=='mecA', 'RunDataId'])
mecA.runs <- unique(cp.df[cp.df$TargetName=='mecA', 'RunDataId'])
head(mecA.runs)
cp.assays.ordered[cp.assays.ordered$RunDataId %in% mecA.runs, ]
head(cp.assays.ordered[cp.assays.ordered$RunDataId %in% mecA.runs, ])
temp.dat <- cp.assays.ordered[cp.assays.ordered$RunDataId %in% mecA.runs, ]
head(temp.dat)
mecA.temp <- do.call(rbind, lapply(1:length(mecA.runs), function(x) data.frame(RunDataId = mecA.runs[x], MedianGeneCp = subset(temp.dat[temp.dat$RunDataId==mecA.runs[x], ], AssayName==genes[k])$MedianCp)))
mecA.temp <- do.call(rbind, lapply(1:length(mecA.runs), function(x) data.frame(RunDataId = mecA.runs[x], MedianMecACp = subset(temp.dat[temp.dat$RunDataId==mecA.runs[x], ], AssayName=='mecA')$MedianCp)))
length(mecA.runs)
mecA.runs
temp.dat[temp.dat$RunDataId==mecA.runs[1], ]
subset(temp.dat[temp.dat$RunDataId==mecA.runs[1], ], AssayName=='mecA')
subset(temp.dat[temp.dat$RunDataId==mecA.runs[1], ], AssayName=='mecA')$MedianCp
do.call(rbind, lapply(1:10, function(x) data.frame(RunDataId = mecA.runs[x], MedianMecACp = subset(temp.dat[temp.dat$RunDataId==mecA.runs[x], ], AssayName=='mecA')$MedianCp)))
do.call(rbind, lapply(10:100, function(x) data.frame(RunDataId = mecA.runs[x], MedianMecACp = subset(temp.dat[temp.dat$RunDataId==mecA.runs[x], ], AssayName=='mecA')$MedianCp)))
do.call(rbind, lapply(20:100, function(x) data.frame(RunDataId = mecA.runs[x], MedianMecACp = subset(temp.dat[temp.dat$RunDataId==mecA.runs[x], ], AssayName=='mecA')$MedianCp)))
do.call(rbind, lapply(30:100, function(x) data.frame(RunDataId = mecA.runs[x], MedianMecACp = subset(temp.dat[temp.dat$RunDataId==mecA.runs[x], ], AssayName=='mecA')$MedianCp)))
do.call(rbind, lapply(40:100, function(x) data.frame(RunDataId = mecA.runs[x], MedianMecACp = subset(temp.dat[temp.dat$RunDataId==mecA.runs[x], ], AssayName=='mecA')$MedianCp)))
do.call(rbind, lapply(10:20, function(x) data.frame(RunDataId = mecA.runs[x], MedianMecACp = subset(temp.dat[temp.dat$RunDataId==mecA.runs[x], ], AssayName=='mecA')$MedianCp)))
do.call(rbind, lapply(10:15, function(x) data.frame(RunDataId = mecA.runs[x], MedianMecACp = subset(temp.dat[temp.dat$RunDataId==mecA.runs[x], ], AssayName=='mecA')$MedianCp)))
do.call(rbind, lapply(15:17, function(x) data.frame(RunDataId = mecA.runs[x], MedianMecACp = subset(temp.dat[temp.dat$RunDataId==mecA.runs[x], ], AssayName=='mecA')$MedianCp)))
do.call(rbind, lapply(17:18, function(x) data.frame(RunDataId = mecA.runs[x], MedianMecACp = subset(temp.dat[temp.dat$RunDataId==mecA.runs[x], ], AssayName=='mecA')$MedianCp)))
do.call(rbind, lapply(17:18, function(x) data.frame(RunDataId = mecA.runs[x], MedianMecACp = subset(temp.dat[temp.dat$RunDataId==mecA.runs[x], ], AssayName=='mecA')$MedianCp)))
mecA.runs[17]
do.call(rbind, lapply(16:17, function(x) data.frame(RunDataId = mecA.runs[x], MedianMecACp = subset(temp.dat[temp.dat$RunDataId==mecA.runs[x], ], AssayName=='mecA')$MedianCp)))
mecA.runs[18]
temp.dat[temp.dat$RunDataId==mecA.runs[18], ]
subset(temp.dat[temp.dat$RunDataId==mecA.runs[18], ], AssayName == 'mecA')
cp.df[cp.df$TargetName=='mecA', 'RunDataId']
head(cp.df[cp.df$TargetName=='mecA', ])
head(cp.df[cp.df$TargetName=='mecA' & cp.df$AssayName=='mecA', ])
head(cp.df[cp.df$TargetName=='mecA' & cp.df$AssayName=='mecA', 'RunDataId'])
mecA.runs <- unique(cp.df[cp.df$TargetName=='mecA' & cp.df$AssayName=='mecA', 'RunDataId'])
temp.dat <- cp.assays.ordered[cp.assays.ordered$RunDataId %in% mecA.runs, ]
mecA.temp <- do.call(rbind, lapply(1:length(mecA.runs), function(x) data.frame(RunDataId = mecA.runs[x], MedianMecACp = subset(temp.dat[temp.dat$RunDataId==mecA.runs[x], ], AssayName=='mecA')$MedianCp)))
head(mecA.temp)
head(temp.dat)
5608
temp.dat <- merge(temp.dat, mecA.temp, by='RunDataId')
head(temp.dat)
temp.dat$CpDiff <- with(temp.dat, MedianCp - MedianMecACp)
head(temp.dat)
with(data.frame(temp.dat, AssayCount=1), aggregate(AssayCount~AssayName, FUN=sum))
mecA.runs <- unique(cp.df[cp.df$TargetName=='mecA' & cp.df$AssayName=='mecA', 'RunDataId'])
temp.dat <- cp.assays.ordered[cp.assays.ordered$RunDataId %in% mecA.runs, ]
mecA.temp <- do.call(rbind, lapply(1:length(mecA.runs), function(x) data.frame(RunDataId = mecA.runs[x], MedianMecACp = subset(temp.dat[temp.dat$RunDataId==mecA.runs[x], ], AssayName=='mecA')$MedianCp)))
temp.dat <- merge(temp.dat, mecA.temp, by='RunDataId')
temp.dat$CpDiff <- with(temp.dat, MedianCp - MedianMecACp)
with(data.frame(temp.dat, AssayCount=1), aggregate(AssayCount~AssayName, FUN=sum))
with(data.frame(temp.dat, AssayCount=1), aggregate(AssayCount~AssayName, FUN=sum))
temp.dat[temp.dat$AssayName=='Abaumannii', ]
cp.df[cp.df$RunDataId==27524,]
cp.assays.ordered[cp.assays.ordered$RunDataId==27524,]
temp.dat[grep('mecA|Staphy|Saureua', temp.dat$AssayName), ]
temp.dat[grep('mecA|Staphy|Saureus', temp.dat$AssayName), ]
temp.dat[grep('mecA|Staphy|Saureus', temp.dat$AssayName) & temp.dat$RunDataId==27524, ]
a <- temp.dat[grep('mecA|Staphy|Saureus', temp.dat$AssayName), ]
a[a$RunDataId==27524, ]
temp.dat <- temp.dat[grep('mecA|Staphy|Saureus', temp.dat$AssayName), ]
mecA.temp <- do.call(rbind, lapply(1:length(mecA.runs), function(x) data.frame(RunDataId = mecA.runs[x], MedianMecACp = subset(temp.dat[temp.dat$RunDataId==mecA.runs[x], ], AssayName=='mecA')$MedianCp)))
temp.dat <- merge(temp.dat, mecA.temp, by='RunDataId')
temp.dat$CpDiff <- with(temp.dat, MedianCp - MedianMecACp)
mecA.runs <- unique(cp.df[cp.df$TargetName=='mecA' & cp.df$AssayName=='mecA', 'RunDataId'])
temp.dat <- cp.assays.ordered[cp.assays.ordered$RunDataId %in% mecA.runs, ]
temp.dat <- temp.dat[grep('mecA|Staphy|Saureus', temp.dat$AssayName), ]
mecA.temp <- do.call(rbind, lapply(1:length(mecA.runs), function(x) data.frame(RunDataId = mecA.runs[x], MedianMecACp = subset(temp.dat[temp.dat$RunDataId==mecA.runs[x], ], AssayName=='mecA')$MedianCp)))
temp.dat <- merge(temp.dat, mecA.temp, by='RunDataId')
temp.dat$CpDiff <- with(temp.dat, MedianCp - MedianMecACp)
with(data.frame(temp.dat, AssayCount=1), aggregate(AssayCount~AssayName, FUN=sum))
temp.a <- merge(temp.dat, with(data.frame(temp.dat, AssayCount=1), aggregate(AssayCount~AssayName, FUN=sum)), by='AssayName')
rm(temp.a)
temp.dat <- merge(temp.dat, with(data.frame(temp.dat, AssayCount=1), aggregate(AssayCount~AssayName, FUN=sum)), by='AssayName')
head(temp.dat)
ggplot(temp.dat, aes(x=AssayName, y=CpDiff, color=AssayCount)) + geom_boxplot() + theme(legend.position='bottom', plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5, angle=90), panel.background=element_rect(fill='white', color='transparent')) + scale_fill_continuous(low='dodgerblue', high='navyblue', name='Data Points in Sample') + scale_y_continuous(breaks=c(0,5,10,15,20,25,30), limits=c(0,30)) + labs(title='Median Cp of Assay - Median Cp of mecA in Trend Population', y='Median Assay Cp - Median mecA Cp', x='Assay Name')
=AssayCount)) + geom_boxplot() + theme(legend.position='bottom', plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5, angle=90), panel.background=element_rect(fill='white', color='transparent')) + scale_fill_continuous(low='dodgerblue', high='navyblue', name='Data Points in Sample') + scale_y_continuous(breaks=c(0,5,10,15,20,25,30), limits=c(0,30)) + labs(title='Median Cp of Assay - Median Cp of mecA in Trend Population', y='Median Assay Cp - Median mecA Cp', x='Assay Name')
head(mecA.temp)
temp.dat[temp.dat$AssayName=='mecA', ]
temp.dat[temp.dat$AssayName=='mecA', 'CpDiff']
sum(temp.dat[temp.dat$AssayName=='mecA', 'CpDiff'])
ggplot(subset(temp.dat, AssayName != 'mecA'), aes(x=AssayName, y=CpDiff, fill=AssayCount)) + geom_boxplot() + theme(legend.position='bottom', plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5, angle=90), panel.background=element_rect(fill='white', color='transparent')) + scale_fill_continuous(low='dodgerblue', high='navyblue', name='Data Points in Sample') + scale_y_continuous(breaks=c(0,5,10,15,20,25,30), limits=c(0,30)) + labs(title='Median Cp of Assay - Median Cp of mecA in Trend Population', y='Median Assay Cp - Median mecA Cp', x='Assay Name')
hist(temp.dat$CpDiff)
ggplot(subset(temp.dat, AssayName != 'mecA'), aes(x=AssayName, y=CpDiff, fill=AssayCount)) + geom_boxplot() + theme(legend.position='bottom', plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5, angle=90), panel.background=element_rect(fill='white', color='transparent')) + scale_fill_continuous(low='dodgerblue', high='navyblue', name='Data Points in Sample') + scale_y_continuous(breaks=c(-30,-15,0,15,30), limits=c(-30,30)) + labs(title='Median Cp of Assay - Median Cp of mecA in Trend Population', y='Median Assay Cp - Median mecA Cp', x='Assay Name')
temp.plot <- ggplot(subset(temp.dat, AssayName != 'mecA'), aes(x=AssayName, y=CpDiff, fill=AssayCount)) + geom_boxplot() + theme(legend.position='bottom', plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5, angle=90), panel.background=element_rect(fill='white', color='transparent')) + scale_fill_continuous(low='dodgerblue', high='navyblue', name='Data Points in Sample') + scale_y_continuous(breaks=c(-30,-15,0,15,30), limits=c(-30,30)) + labs(title='Median Cp of Assay - Median Cp of mecA in Trend Population', y='Median Assay Cp - Median mecA Cp', x='Assay Name')
paste(imgDir, choose.panel, '_mecA_CpDiffVsAssay.png', sep='')
if(choose.panel=='BCID') {
mecA.runs <- unique(cp.df[cp.df$TargetName=='mecA' & cp.df$AssayName=='mecA', 'RunDataId'])
temp.dat <- cp.assays.ordered[cp.assays.ordered$RunDataId %in% mecA.runs, ]
temp.dat <- temp.dat[grep('mecA|Staphy|Saureus', temp.dat$AssayName), ]
mecA.temp <- do.call(rbind, lapply(1:length(mecA.runs), function(x) data.frame(RunDataId = mecA.runs[x], MedianMecACp = subset(temp.dat[temp.dat$RunDataId==mecA.runs[x], ], AssayName=='mecA')$MedianCp)))
temp.dat <- merge(temp.dat, mecA.temp, by='RunDataId')
temp.dat$CpDiff <- with(temp.dat, MedianCp - MedianMecACp)
temp.dat <- merge(temp.dat, with(data.frame(temp.dat, AssayCount=1), aggregate(AssayCount~AssayName, FUN=sum)), by='AssayName')
temp.plot <- ggplot(subset(temp.dat, AssayName != 'mecA'), aes(x=AssayName, y=CpDiff, fill=AssayCount)) + geom_boxplot() + theme(legend.position='bottom', plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5, angle=90), panel.background=element_rect(fill='white', color='transparent')) + scale_fill_continuous(low='dodgerblue', high='navyblue', name='Data Points in Sample') + scale_y_continuous(breaks=c(-30,-15,0,15,30), limits=c(-30,30)) + labs(title='Median Cp of Assay - Median Cp of mecA in Trend Population', y='Median Assay Cp - mecA Cp', x='Assay Name')
temp.file <- paste(imgDir, choose.panel, '_mecA_CpDiffVsAssay.png', sep='')
}
temp.file
choose.panel
if(choose.panel=='BCID') {
mecA.runs <- unique(cp.df[cp.df$TargetName=='mecA' & cp.df$AssayName=='mecA', 'RunDataId'])
temp.dat <- cp.assays.ordered[cp.assays.ordered$RunDataId %in% mecA.runs, ]
temp.dat <- temp.dat[grep('mecA|Staphy|Saureus', temp.dat$AssayName), ]
mecA.temp <- do.call(rbind, lapply(1:length(mecA.runs), function(x) data.frame(RunDataId = mecA.runs[x], MedianMecACp = subset(temp.dat[temp.dat$RunDataId==mecA.runs[x], ], AssayName=='mecA')$MedianCp)))
temp.dat <- merge(temp.dat, mecA.temp, by='RunDataId')
temp.dat$CpDiff <- with(temp.dat, MedianCp - MedianMecACp)
temp.dat <- merge(temp.dat, with(data.frame(temp.dat, AssayCount=1), aggregate(AssayCount~AssayName, FUN=sum)), by='AssayName')
temp.plot <- ggplot(subset(temp.dat, AssayName != 'mecA'), aes(x=AssayName, y=CpDiff, fill=AssayCount)) + geom_boxplot() + theme(legend.position='bottom', plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5, angle=90), panel.background=element_rect(fill='white', color='transparent')) + scale_fill_continuous(low='dodgerblue', high='navyblue', name='Data Points in Sample') + scale_y_continuous(breaks=c(-30,-15,0,15,30), limits=c(-30,30)) + labs(title='Median Cp of Assay - Median Cp of mecA in Trend Population', y='Median Assay Cp - mecA Cp', x='Assay Name')
temp.file <- paste(imgDir, choose.panel, '_mecA_CpDiffVsAssay.png', sep='')
}
if(choose.panel=='BCID') {
mecA.runs <- unique(cp.df[cp.df$TargetName=='mecA' & cp.df$AssayName=='mecA', 'RunDataId'])
temp.dat <- cp.assays.ordered[cp.assays.ordered$RunDataId %in% mecA.runs, ]
temp.dat <- temp.dat[grep('mecA|Staphy|Saureus', temp.dat$AssayName), ]
mecA.temp <- do.call(rbind, lapply(1:length(mecA.runs), function(x) data.frame(RunDataId = mecA.runs[x], MedianMecACp = subset(temp.dat[temp.dat$RunDataId==mecA.runs[x], ], AssayName=='mecA')$MedianCp)))
temp.dat <- merge(temp.dat, mecA.temp, by='RunDataId')
temp.dat$CpDiff <- with(temp.dat, MedianCp - MedianMecACp)
temp.dat <- merge(temp.dat, with(data.frame(temp.dat, AssayCount=1), aggregate(AssayCount~AssayName, FUN=sum)), by='AssayName')
temp.plot <- ggplot(subset(temp.dat, AssayName != 'mecA'), aes(x=AssayName, y=CpDiff, fill=AssayCount)) + geom_boxplot() + theme(legend.position='bottom', plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5, angle=90), panel.background=element_rect(fill='white', color='transparent')) + scale_fill_continuous(low='dodgerblue', high='navyblue', name='Data Points in Sample') + scale_y_continuous(breaks=c(-30,-15,0,15,30), limits=c(-30,30)) + labs(title='Median Cp of Assay - Median Cp of mecA in Trend Population', y='Median Assay Cp - mecA Cp', x='Assay Name')
temp.file <- paste(imgDir, choose.panel, '_mecA_CpDiffVsAssay.png', sep='')
png(temp.file, width = 1400, height = 800)
print(temp.plot)
dev.off()
}
rm(a)
head(cp.df)
a <- cp.df[cp.df$TargetName=='Influenza A H1-2009', ]
a <- cp.df[cp.df$TargetName=='Influenza A-H1-2009', ]
choose.panel
panels
i <- 3
choose.panel <- switch(panels[i],
'Respiratory Panel v1.7' = 'RP',
'BCID Panel v2.0' = 'BCID',
'GI Panel v2.1' = 'GI',
'ME Panel v1.4' = 'ME'
)
choose.sites <- as.character(unique(filters.df[filters.df$PouchTitle == panels[i], 'CustomerSiteId']))
choose.sites[1:3]
choose.sites <- choose.sites[1:3]
for(j in 1:length(choose.sites)) {
FADWcxn <- odbcConnect('FA_DW', uid = 'afaucett', pwd = 'ThisIsAPassword-BAD')
queryVector <- scan(paste('../DataSources/SQL/CpInvestigation/AssayCpByTarget_', choose.panel, '.sql', sep=''), what=character(), quote="")
query <- paste(gsub('SITE_INDEX', choose.sites[j], queryVector), collapse=" ")
cp.site.df <- sqlQuery(FADWcxn, query)
odbcClose(FADWcxn)
cp.df <- rbind(cp.df, cp.site.df)
}
heaD(cp.df)
head(cp.df)
rm(a)
head(cp.df)
head(cp.df)
paste('../DataSources/SQL/CpInvestigation/AssayCpByTarget_', choose.panel, '.sql', sep='')
queryVector <- scan(paste('../DataSources/SQL/CpInvestigation/AssayCpByTarget_', choose.panel, '.sql', sep=''), what=character(), quote="")
paste(gsub('SITE_INDEX', choose.sites[j], queryVector), collapse=" ")
rm(cp.df)
choose.sites
choose.panel
for(j in 1:length(choose.sites)) {
FADWcxn <- odbcConnect('FA_DW', uid = 'afaucett', pwd = 'ThisIsAPassword-BAD')
queryVector <- scan(paste('../DataSources/SQL/CpInvestigation/AssayCpByTarget_', choose.panel, '.sql', sep=''), what=character(), quote="")
query <- paste(gsub('SITE_INDEX', choose.sites[j], queryVector), collapse=" ")
cp.site.df <- sqlQuery(FADWcxn, query)
odbcClose(FADWcxn)
cp.df <- rbind(cp.df, cp.site.df)
}
cp.df <- c()
for(j in 1:length(choose.sites)) {
FADWcxn <- odbcConnect('FA_DW', uid = 'afaucett', pwd = 'ThisIsAPassword-BAD')
queryVector <- scan(paste('../DataSources/SQL/CpInvestigation/AssayCpByTarget_', choose.panel, '.sql', sep=''), what=character(), quote="")
query <- paste(gsub('SITE_INDEX', choose.sites[j], queryVector), collapse=" ")
cp.site.df <- sqlQuery(FADWcxn, query)
odbcClose(FADWcxn)
cp.df <- rbind(cp.df, cp.site.df)
}
head(cp.df)
cp.controls <- subset(cp.df, AssayType == 'Control')
cp.df <- subset(cp.df, AssayType != 'Control')
runs <- unique(cp.df$RunDataId)
cp.median <- do.call(rbind, lapply(1:length(runs), function(x)
do.call(rbind, lapply(1:length(unique(cp.df[cp.df$RunDataId==runs[x], 'TargetName'])), function(y)
do.call(rbind,  lapply(1:length(unique(cp.df[cp.df$RunDataId==runs[x] & cp.df$TargetName==unique(cp.df[cp.df$RunDataId==runs[x], 'TargetName'])[y],'AssayName'])), function(z)
data.frame(RunDataId = runs[x],
TargetName = unique(cp.df[cp.df$RunDataId==runs[x], 'TargetName'])[y],
AssayName = unique(cp.df[cp.df$RunDataId==runs[x] & cp.df$TargetName==unique(cp.df[cp.df$RunDataId==runs[x], 'TargetName'])[y], 'AssayName'])[z],
MedianCp = median(cp.df[cp.df$RunDataId==runs[x] & cp.df$TargetName==unique(cp.df[cp.df$RunDataId==runs[x],'TargetName'])[y] & cp.df$AssayName==unique(cp.df[cp.df$RunDataId==runs[x] & cp.df$TargetName==unique(cp.df[cp.df$RunDataId==runs[x],'TargetName'])[y],'AssayName'])[z], 'Cp'])
)
))
))
))
head(cp.median)
head(cp.median)
cp.assays <- merge(unique(cp.median[,c('RunDataId','AssayName','MedianCp')]), unique(cp.df[,c('RunDataId','AssayName','CustomerSiteId','Date')]), by=c('RunDataId','AssayName'))
cp.assays <- merge(cp.assays, calendar.df[,c('Date','YearWeek')], by='Date')
runs.keep <- unique(cp.assays$RunDataId)
cp.assays.ordered <- do.call(rbind, lapply(1:length(runs.keep), function(x) data.frame(cp.assays[cp.assays$RunDataId==runs.keep[x], ][order(cp.assays[cp.assays$RunDataId==runs.keep[x], 'MedianCp']), ], Index = seq(1, length(cp.assays[cp.assays$RunDataId==runs.keep[x], 'MedianCp']), 1))))
PMScxn <- odbcConnect('PMS_PROD')
queryVector <- scan('../DataSources/SQL/CpInvestigation/ControlCpInQC_FA2.sql', what=character(), quote="")
query <- paste(paste(queryVector, collapse=" "), paste("('",paste(as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo'])), collapse="','"),"')", sep=""), sep=' ')
query
qc2.df <- sqlQuery(PMScxn, query)
qc.df
qc2.df
query
unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo'])
gsub("'", unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo']))
gsub("'", unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo'])[201])
gsub("'", '', unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo'])[201])
gsub("'", '', unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo']))
unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo'])
nchar(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo']))
nchar(as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo'])))
as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo']))[nchar(as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo'])))]
as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo']))[nchar(as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo'])))]
as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo']))
unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo'])
length(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo']))
as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo']))
nchar(as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo'])))
data.frame(Lot = as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo'])), Length = nchar(as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo']))))
data.frame(Lot = as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo'])), Length = nchar(as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo']))))[data.frame(Lot = as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo'])), Length = nchar(as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo']))))[,'Length'] == 6, ]
data.frame(Lot = as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo'])), Length = nchar(as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo']))))[data.frame(Lot = as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo'])), Length = nchar(as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo']))))[,'Length'] == 6, 'LotNo']
data.frame(Lot = as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo'])), Length = nchar(as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo']))))[data.frame(Lot = as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo'])), Length = nchar(as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo']))))[,'Length'] == 6, ]
head(data.frame(Lot = as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo'])), Length = nchar(as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo']))))[data.frame(Lot = as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo'])), Length = nchar(as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo']))))[,'Length'] == 6, ])
data.frame(LotNo = as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo'])), Length = nchar(as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo']))))[data.frame(Lot = as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo'])), Length = nchar(as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo']))))[,'Length'] == 6, 'LotNo']
lots <- data.frame(LotNo = as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo'])), Length = nchar(as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo']))))[data.frame(Lot = as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo'])), Length = nchar(as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo']))))[,'Length'] == 6, 'LotNo']
ls()
keep <- ls()
workDir <- 'G:/Departments/PostMarket/DataScienceGroup/Data Science Products/InProcess/Nilesh/'
setwd(workDir)
list.dirs()
sql_path <- paste(workDir, 'SQL/20161129_NormalizedMetricforQuantificationonDisease/DataSources')
library(RODBC)
library(lubridate)
library(ggplot2)
library(dplyr)
library(Rmisc)
library(reshape2)
customer_site_id = 7 # NA, 7, 33, 2
FADWcxn <- odbcConnect(dsn = 'FA_DW', uid = 'lmeyers', pwd = 'Idaho1Tech')
queryVector <- scan(paste(sql_path,'/FADataWarehouse_query.txt', sep=""),what=character(),quote="")
query <- paste(queryVector,collapse=" ")
pouch.lot.number.df <- sqlQuery(FADWcxn,query)
odbcClose(FADWcxn)
query
scan(paste(sql_path,'/FADataWarehouse_query.txt', sep=""),what=character(),quote="")
paste(sql_path,'/FADataWarehouse_query.txt', sep="")
sql_path <- paste(workDir, '20161129_NormalizedMetricforQuantificationonDisease/DataSources')
paste(sql_path,'/FADataWarehouse_query.txt', sep="")
sql_path <- paste(workDir, '20161129_NormalizedMetricforQuantificationonDisease/DataSources', sep='')
scan(paste(sql_path,'/FADataWarehouse_query.txt', sep=""),what=character(),quote="")
FADWcxn <- odbcConnect(dsn = 'FA_DW', uid = 'lmeyers', pwd = 'Idaho1Tech')
queryVector <- scan(paste(sql_path,'/FADataWarehouse_query.txt', sep=""),what=character(),quote="")
query <- paste(queryVector,collapse=" ")
pouch.lot.number.df <- sqlQuery(FADWcxn,query)
odbcClose(FADWcxn)
pouch.lot.number.df
all.internal.cp.pouch.lot.number.df <- NULL
i <- 1
PMScxn <- odbcConnect('PMS_PROD')
queryVector <- scan(paste(sql_path,'/FilmArray2_query-4.txt', sep=""),what=character(),quote="")
query <- paste(queryVector,collapse=" ")
query
query <- gsub("\\[PouchLotNumber\\] LIKE \'%[0-9].*%\'", paste("[PouchLotNumber] LIKE ", "\'", "%", pouch.lot.number.df$PouchLotNumber[i],  "%", "\'", sep= ""), query)
paste("internal.cp.pouch.lot.number.df.", pouch.lot.number.df$PouchLotNumber[i], sep="")
assign(internal.cp.df.name,sqlQuery(PMScxn,query))
internal.cp.df.name <- paste("internal.cp.pouch.lot.number.df.", pouch.lot.number.df$PouchLotNumber[i], sep="")
assign(internal.cp.df.name,sqlQuery(PMScxn,query))
odbcClose(PMScxn)
rbind(all.internal.cp.pouch.lot.number.df, get(internal.cp.df.name))
all.internal.cp.pouch.lot.number.df <- NULL
for(i in 1:nrow(pouch.lot.number.df)){
print(i)
# read in data from PMS PROD server
PMScxn <- odbcConnect('PMS_PROD')
queryVector <- scan(paste(sql_path,'/FilmArray2_query-4.txt', sep=""),what=character(),quote="")
query <- paste(queryVector,collapse=" ")
query <- gsub("\\[PouchLotNumber\\] LIKE \'%[0-9].*%\'", paste("[PouchLotNumber] LIKE ", "\'", "%", pouch.lot.number.df$PouchLotNumber[i],  "%", "\'", sep= ""), query)
internal.cp.df.name <- paste("internal.cp.pouch.lot.number.df.", pouch.lot.number.df$PouchLotNumber[i], sep="")
assign(internal.cp.df.name,sqlQuery(PMScxn,query))
odbcClose(PMScxn)
# OPTIONAL: combine into dataframe
all.internal.cp.pouch.lot.number.df <- rbind(all.internal.cp.pouch.lot.number.df, get(internal.cp.df.name))
}
head(pouch.lot.number.df)
main.all.customer.pouch.lot.number.df <- NULL
for(i in 1:nrow(pouch.lot.number.df)){
print(i)
# read in data from PMS PROD server
FADWcxn <- odbcConnect(dsn = 'FA_DW', uid = 'lmeyers', pwd = 'Idaho1Tech')
queryVector <- scan(paste(sql_path,'/query_CpRuns-WellData.txt', sep=""),what=character(),quote="")
query <- paste(queryVector,collapse=" ")
query <- gsub("\\[PouchLotNumber\\] LIKE \'%[0-9].*%\'", paste("[PouchLotNumber] LIKE ", "\'", "%", pouch.lot.number.df$PouchLotNumber[i],  "%", "\'", sep= ""), query)
customer.cp.df.name <- paste("customer.cp.pouch.lot.number.df.", pouch.lot.number.df$PouchLotNumber[i], sep="")
assign(customer.cp.df.name,sqlQuery(FADWcxn,query))
odbcClose(FADWcxn)
# combine into a dataframe if selection based on customer site id
main.all.customer.pouch.lot.number.df <- rbind(main.all.customer.pouch.lot.number.df, get(customer.cp.df.name))
}
all.customer.pouch.lot.number.df <- main.all.customer.pouch.lot.number.df
# OPTIONAL: (if customer site id is used then) subset data
if (!is.na(customer_site_id)){
all.customer.pouch.lot.number.df <- all.customer.pouch.lot.number.df[all.customer.pouch.lot.number.df$CustomerSiteId == customer_site_id & !is.na(all.customer.pouch.lot.number.df$PouchSerialNumber), ]
pouch.lot.number.df <- pouch.lot.number.df[pouch.lot.number.df$PouchLotNumber %in% all.customer.pouch.lot.number.df$PouchLotNumber, ]
}
all.customer.pouch.lot.number.df <- all.customer.pouch.lot.number.df[!is.na(all.customer.pouch.lot.number.df$PouchSerialNumber), ]
all.customer.pouch.lot.number.df <- all.customer.pouch.lot.number.df[order(all.customer.pouch.lot.number.df$RunDataId, all.customer.pouch.lot.number.df$TargetName, all.customer.pouch.lot.number.df$AssayName, all.customer.pouch.lot.number.df$WellDataId), ]
# flag assay result
all.customer.pouch.lot.number.df$FlagNUM_AssayPositive <- ifelse(all.customer.pouch.lot.number.df$AssayResult == 'Positive', 1, 0)
temp.all.customer <- all.customer.pouch.lot.number.df[all.customer.pouch.lot.number.df$ResultType == 'organism', ]
agg.temp.all.customer <- aggregate(FlagNUM_AssayPositive ~ RunDataId + AssayName, temp.all.customer, sum)
head(agg.temp.all.customer)
names(agg.temp.all.customer)[names(agg.temp.all.customer) == 'FlagNUM_AssayPositive']
names(agg.temp.all.customer)[names(agg.temp.all.customer) == 'FlagNUM_AssayPositive'] <- 'SUM_FlagNUM_AssayPositive'
agg.temp.all.customer$FlagSTR_AssayPositive <- ifelse(agg.temp.all.customer$SUM_FlagNUM_AssayPositive >= 2, 'Yes', 'No')
head(agg.temp.all.customer)
merge.agg.temp.all.customer <- merge(x = temp.all.customer, y = agg.temp.all.customer, by.x = c('RunDataId', 'AssayName'), by.y = c('RunDataId', 'AssayName'))
new.all.customer.pouch.lot.number.df <- merge.agg.temp.all.customer[merge.agg.temp.all.customer$FlagSTR_AssayPositive == 'Yes', ]
head(new.all.customer.pouch.lot.number.df)
median.organism.customer.df <- aggregate(Cp ~ RunDataId + AssayName, new.all.customer.pouch.lot.number.df, median)
names(median.organism.customer.df)[names(median.organism.customer.df) == 'Cp'] <- 'MedianCp'
new.all.customer.pouch.lot.number.df <- merge(x = all.customer.pouch.lot.number.df, y = median.organism.customer.df, by.x = c('RunDataId', 'AssayName'), by.y = c('RunDataId', 'AssayName'), all.x = TRUE)
new.all.customer.pouch.lot.number.df$MedianCp <- ifelse(new.all.customer.pouch.lot.number.df$ResultType == 'control', NA, new.all.customer.pouch.lot.number.df$MedianCp)
new.all.customer.pouch.lot.number.df <- new.all.customer.pouch.lot.number.df[order(new.all.customer.pouch.lot.number.df$RunDataId, new.all.customer.pouch.lot.number.df$TargetName, new.all.customer.pouch.lot.number.df$AssayName, new.all.customer.pouch.lot.number.df$WellDataId), ]
control.PCR1 <- all.customer.pouch.lot.number.df[all.customer.pouch.lot.number.df$AssayName == 'PCR1', ]
control.PCR2 <- all.customer.pouch.lot.number.df[all.customer.pouch.lot.number.df$AssayName == 'PCR2', ]
control.yeastRNA <- all.customer.pouch.lot.number.df[all.customer.pouch.lot.number.df$AssayName == 'yeastRNA', ]
# find divisor
div_PCR1 <- aggregate(Cp ~ RunDataId + AssayName, control.PCR1[control.PCR1$AssayName == "PCR1", ], median)
div_PCR2 <- aggregate(Cp ~ RunDataId + AssayName, control.PCR2[control.PCR2$AssayName == "PCR2", ], median)
div_yeastRNA <- aggregate(Cp ~ RunDataId + AssayName, control.yeastRNA[control.yeastRNA$AssayName == "yeastRNA", ], median)
# rename columns
names(div_PCR1)[names(div_PCR1) == 'Cp'] <- 'divisor_PCR1'
names(div_PCR2)[names(div_PCR2) == 'Cp'] <- 'divisor_PCR2'
names(div_yeastRNA)[names(div_yeastRNA) == 'Cp'] <- 'divisor_yeastRNA'
merge_PCR1_median <- merge(x = new.all.customer.pouch.lot.number.df, y = div_PCR1, by.x = c('RunDataId'), by.y = c('RunDataId'), all.x = TRUE)
head(merge_PCR1_median)
names(merge_PCR1_median)[names(merge_PCR1_median) == 'AssayName.x'] <- 'AssayName'
names(merge_PCR1_median)[names(merge_PCR1_median) == 'AssayName.y'] <- 'Normalized_By'
head(merge_PCR1_median)
merge_PCR1_median$NormalizedCp <- (merge_PCR1_median$Cp / merge_PCR1_median$divisor_PCR1)
head(merge_PCR1_median)
mean_normalizedCp <- aggregate(NormalizedCp ~ ConcatDate + AssayName, merge_PCR1_median, mean)
names(mean_normalizedCp)[names(mean_normalizedCp) == 'NormalizedCp'] <- 'MeanNormalizedCp'
dateBreaks <- unique(as.character(mean_target_normalizedCp$ConcatDate))[order(unique(as.character(mean_target_normalizedCp$ConcatDate)))][seq(1, length(unique(as.character(mean_target_normalizedCp$ConcatDate))), 20)]
g2 <- ggplot() +  scale_x_discrete(breaks=dateBreaks)
g2 <- g2 + geom_point(data = mean_normalizedCp[grep("HRV1", mean_normalizedCp$AssayName),], aes(x = as.factor(ConcatDate), y = MeanNormalizedCp))
g2
dateBreaks <- unique(as.character(mean_target_normalizedCp$ConcatDate))[order(unique(as.character(mean_target_normalizedCp$ConcatDate)))][seq(1, length(unique(as.character(mean_target_normalizedCp$ConcatDate))), 20)]
mean_normalizedCp <- aggregate(NormalizedCp ~ ConcatDate + AssayName, merge_PCR1_median, mean)
names(mean_normalizedCp)[names(mean_normalizedCp) == 'NormalizedCp'] <- 'MeanNormalizedCp'
dateBreaks <- unique(as.character(mean_target_normalizedCp$ConcatDate))[order(unique(as.character(mean_target_normalizedCp$ConcatDate)))][seq(1, length(unique(as.character(mean_target_normalizedCp$ConcatDate))), 20)]
g2 <- ggplot() +  scale_x_discrete(breaks=dateBreaks)
g2 <- g2 + geom_point(data = mean_normalizedCp[grep("HRV1", mean_normalizedCp$AssayName),], aes(x = as.factor(ConcatDate), y = MeanNormalizedCp))
g2
g2 <- ggplot() +  scale_x_discrete(breaks=dateBreaks)
g2 <- g2 + geom_point(data = mean_normalizedCp[grep("HRV1", mean_normalizedCp$AssayName),], aes(x = as.factor(ConcatDate), y = MeanNormalizedCp))
g2
dev.off()
g2
dev.off()
g2 <- ggplot() +  scale_x_discrete(breaks=dateBreaks)
g2 <- g2 + geom_point(data = mean_normalizedCp[grep("HRV1", mean_normalizedCp$AssayName),], aes(x = as.factor(ConcatDate), y = MeanNormalizedCp))
g2
head(mean_normalizedCp)
head(merge_PCR1_median)
merge_PCR1_median[merge_PCR1_median$RunDataId==711, ]
merge_PCR1_median[merge_PCR1_median$RunDataId==711, ]
aggregate(MedianCp ~ RunDataId + TargetName, new.all.customer.pouch.lot.number.df, min)
head(new.all.customer.pouch.lot.number.df)
min.median.cp.for.target <- aggregate(MedianCp ~ RunDataId + TargetName, new.all.customer.pouch.lot.number.df, min)
names(min.median.cp.for.target)[names(min.median.cp.for.target) == 'MedianCp'] <- 'MinMedianCp'
merge.min.median.cp.for.target <- merge(x = new.all.customer.pouch.lot.number.df, y = min.median.cp.for.target, by.x = c('RunDataId', 'TargetName'), by.y = c('RunDataId', 'TargetName'), all.x = TRUE )
head(merge.min.median.cp.for.target)
merge.min.median.cp.for.target[merge.min.median.cp.for.target$RunDate==711, ]
merge.min.median.cp.for.target[merge.min.median.cp.for.target$RunDataId==711, ]
merge.min.median.cp.for.target[merge.min.median.cp.for.target$RunDataId==711, c('TargetName','TargetResult','AssayName','AssayResult','Cp','MedianCp','MinMedianCp')]
merge.min.median.cp.for.target[merge.min.median.cp.for.target$RunDataId==711, c('TargetName','TargetResult','AssayName','AssayResult','Cp','MedianCp','MinMedianCp')]
a <- merge.min.median.cp.for.target[merge.min.median.cp.for.target$RunDataId==711, c('TargetName','TargetResult','AssayName','AssayResult','Cp','MedianCp','MinMedianCp')]
head(a)
a <- a[with(a, order(TargetName, AssayName)), ]
a
head(new.all.customer.pouch.lot.number.df)
new.all.customer.pouch.lot.number.df[new.all.customer.pouch.lot.number.df$RunDataId==711, ]
merge_PCR1_min_median$NormalizedCp <- (merge_PCR1_min_median$Cp / merge_PCR1_min_median$divisor_PCR1)
merge_PCR1_min_median <- merge(x = merge.min.median.cp.for.target, y = div_PCR1, by.x = 'RunDataId', by.y = 'RunDataId', all.x = TRUE)
names(merge_PCR1_median)[names(merge_PCR1_median) == 'AssayName.x'] <- 'AssayName'
names(merge_PCR1_median)[names(merge_PCR1_median) == 'AssayName.y'] <- 'Normalized_By'
merge_PCR1_min_median$NormalizedCp <- (merge_PCR1_min_median$Cp / merge_PCR1_min_median$divisor_PCR1)
mean_target_normalizedCp <- aggregate(NormalizedCp ~ ConcatDate + TargetName, merge_PCR1_min_median, mean)
names(mean_target_normalizedCp)[names(mean_target_normalizedCp) == 'NormalizedCp'] <- 'MeanNormalizedCp'
dateBreaks <- unique(as.character(mean_target_normalizedCp$ConcatDate))[order(unique(as.character(mean_target_normalizedCp$ConcatDate)))][seq(1, length(unique(as.character(mean_target_normalizedCp$ConcatDate))), 20)]
g3 <- ggplot() + ggtitle("Normalized Target Cp") + scale_x_discrete(breaks=dateBreaks)
g3 <- g3 + geom_point(data = mean_target_normalizedCp[grep(".*Rhino.*", mean_target_normalizedCp$TargetName),], aes(x = as.factor(ConcatDate), y = MeanNormalizedCp))
g3
keep
ls()
ls()[ls() %in% keep]
ls()[!(ls() %in% keep)]
rm(list = ls()[!(ls() %in% keep)])
keep
head(cp.df)
head(cp.median)
lost
lots
query <- paste(paste(queryVector, collapse=" "), paste("('",paste(as.character(lots), collapse="','"),"')", sep=""), sep=' ')
query
qc2.df <- sqlQuery(PMScxn, query)
queryVector <- scan('../DataSources/SQL/CpInvestigation/ControlCpInQC_FA1.sql', what=character(), quote="")
query <- paste(paste(queryVector, collapse=" "), paste("('",paste(as.character(lots), collapse="','"),"')", sep=""), sep=' ')
qc1.df <- sqlQuery(PMScxn, query)
odbcClose(PMScxn)
qc.df <- rbind(qc1.df, qc2.df)
qc.df <- qc.df[!(is.na(qc.df$Cp)), ]
qc.df <- unique(qc.df[,c('PouchSerialNumber','PouchLotNumber','Name','Cp')])
lots <- data.frame(LotNo = as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo'])), Length = nchar(as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo']))))[data.frame(Lot = as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo'])), Length = nchar(as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo']))))[,'Length'] == 6, 'LotNo']
PMScxn <- odbcConnect('PMS_PROD')
queryVector <- scan('../DataSources/SQL/CpInvestigation/ControlCpInQC_FA2.sql', what=character(), quote="")
setwd('~/FilmArrayTrend/CpInvestigations/')
lots <- data.frame(LotNo = as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo'])), Length = nchar(as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo']))))[data.frame(Lot = as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo'])), Length = nchar(as.character(unique(cp.controls[cp.controls$RunDataId %in% runs.keep,'LotNo']))))[,'Length'] == 6, 'LotNo']
PMScxn <- odbcConnect('PMS_PROD')
queryVector <- scan('../DataSources/SQL/CpInvestigation/ControlCpInQC_FA2.sql', what=character(), quote="")
query <- paste(paste(queryVector, collapse=" "), paste("('",paste(as.character(lots), collapse="','"),"')", sep=""), sep=' ')
qc2.df <- sqlQuery(PMScxn, query)
queryVector <- scan('../DataSources/SQL/CpInvestigation/ControlCpInQC_FA1.sql', what=character(), quote="")
query <- paste(paste(queryVector, collapse=" "), paste("('",paste(as.character(lots), collapse="','"),"')", sep=""), sep=' ')
qc1.df <- sqlQuery(PMScxn, query)
odbcClose(PMScxn)
qc.df <- rbind(qc1.df, qc2.df)
qc.df <- qc.df[!(is.na(qc.df$Cp)), ]
qc.df <- unique(qc.df[,c('PouchSerialNumber','PouchLotNumber','Name','Cp')])
