a <- c(1,2,3,4,5)
b <- (110,112, 322, 231, 434)
b <- c(110,112, 322, 231, 434)
ab <- data.frame(a,b)
ab
do.call(rbind, lapply(1:nrow(ab), function(x){ab$c <- a/b}))
lapply(1:nrow(ab), function(x){ab$c <- a/b}
)
ab
apply(ab, 1, mean)
apply(ab, 2, mean)
lapply(ab, 2, mean'')
lapply(1:nrow(ab), function(x) x*10)
unlist(lapply(1:nrow(ab), function(x) x*10))
unlist(lapply(1:nrow(ab), function(x) x*10), x = b)
ab
unlist(lapply(1:nrow(ab), function(x) x*10, x = b))
unlist(lapply(1:nrow(ab), function(x) x*10, x = ab))
unlist(lapply(1:nrow(ab), function(x) x*10), x = ab)
apply(ab, MARGIN = c(1,2), mean)
matrix(rnorm(30), nrow=5, ncol=6)
X <- matrix(rnorm(30), nrow=5, ncol=6)
apply(X, 2, sum)
setwd('C:/Users/nilesh_ingle/Documents/FilmArrayTrend/CpInvestigations/')
# load the neccessary libraries
library(RODBC)
library(lubridate)
library(ggplot2)
library(devtools)
require(dateManip)
# create an Epi date calendar that will be used by all the data sets
startYear <- 2013
calendar.df <- createCalendarLikeMicrosoft(startYear, 'Week')
calendar.df <- transformToEpiWeeks(calendar.df)
calendar.df$YearWeek <- with(calendar.df, ifelse(Week < 10, paste(Year, Week, sep='-0'), paste(Year, Week, sep='-')))
install.packages("devtools")
library(RODBC)
library(lubridate)
library(ggplot2)
library(devtools)
require(dateManip)
# create an Epi date calendar that will be used by all the data sets
startYear <- 2013
calendar.df <- createCalendarLikeMicrosoft(startYear, 'Week')
calendar.df <- transformToEpiWeeks(calendar.df)
calendar.df$YearWeek <- with(calendar.df, ifelse(Week < 10, paste(Year, Week, sep='-0'), paste(Year, Week, sep='-')))
# set up some constants
imgDir <- 'Figures/'
dateBreaks <- unique(calendar.df[calendar.df$Year >= startYear, 'YearWeek'])[order(unique(calendar.df[calendar.df$Year >= startYear, 'YearWeek']))][seq(1, length(unique(calendar.df[calendar.df$Year >= startYear, 'YearWeek'])), 8)]
# set some query variables, like the customer site and the panel by querying the panels run by site
FADWcxn <- odbcConnect('FA_DW', uid = 'lmeyers', pwd = 'Idaho1Tech')
queryVector <- scan('../DataSources/SQL/CpInvestigation/panelsBySite.sql',what=character(),quote="")
query <- paste(queryVector,collapse=" ")
filters.df <- sqlQuery(FADWcxn,query)
odbcClose(FADWcxn)
panels <- as.character(unique(filters.df$PouchTitle))
for(i in 1:length(panels)) {
# load the data from SQL... if the panel is Respiratory, then that requires some special attention
choose.panel <- switch(panels[i],
'Respiratory Panel v1.7' = 'RP',
'BCID Panel v2.0' = 'BCID',
'GI Panel v2.1' = 'GI',
'ME Panel v1.4' = 'ME'
)
# If the panel is not RP, then use all data and don't split out by site
if(choose.panel != 'RP') {
FADWcxn <- odbcConnect('FA_DW', uid = 'lmeyers', pwd = 'Idaho1Tech')
queryVector <- scan(paste('../DataSources/SQL/CpInvestigation/AssayCpByTarget_', choose.panel, '.sql', sep=''), what=character(), quote="")
query <- paste(queryVector, collapse=" ")
cp.df <- sqlQuery(FADWcxn, query)
odbcClose(FADWcxn)
}
# if the panel is RP, then loop through the sites and make the charts by site... also, store all cp data by site so thumbnails can be made.
else {
cp.df <- c()
choose.sites <- as.character(unique(filters.df[filters.df$PouchTitle == panels[i], 'CustomerSiteId']))
for(j in 1:length(choose.sites)) {
FADWcxn <- odbcConnect('FA_DW', uid = 'lmeyers', pwd = 'Idaho1Tech')
queryVector <- scan(paste('../DataSources/SQL/CpInvestigation/AssayCpByTarget_', choose.panel, '.sql', sep=''), what=character(), quote="")
query <- paste(gsub('SITE_INDEX', choose.sites[j], queryVector), collapse=" ")
cp.site.df <- sqlQuery(FADWcxn, query)
odbcClose(FADWcxn)
cp.df <- rbind(cp.df, cp.site.df)
}
}
