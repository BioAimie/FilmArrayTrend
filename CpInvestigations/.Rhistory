break
} else {
temp.plot <- ggplot(temp.dat, aes(TargetTriggerAssay, TargetMedianCp)) + geom_boxplot() + theme(plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5), panel.background=element_rect(fill='white', color='transparent')) + scale_y_continuous(breaks=c(0,5,10,15,20,25,30), limits=c(0,30)) + labs(title=paste('Median Cp of', targets[i],'by','First Assay\nin Trend BCID Tests', sep=' '), y='Median Cp', x='')
temp.file <- paste(imgDir, gsub('\\/','-', targets[i]), '_DistributionCpsByTarget.png', sep='')
png(temp.file, width = 1400, height = 800)
print(temp.plot)
dev.off()
}
}
assays <- as.character(unique(cp.bcid.assays.ordered$AssayName))
for(i in 1:length(assays)) {
temp.dat <- merge(data.frame(YearWeek = unique(calendar.df[calendar.df$YearWeek >= dateBreaks[1], c('YearWeek')])), subset(cp.bcid.assays.ordered, AssayName==assays[i]), by='YearWeek', all.x=TRUE)
temp.dat[is.na(temp.dat$RunDataId), 'MedianCp'] <- NA
temp.dat[is.na(temp.dat$RunDataId), 'Index'] <- 1
temp.plot <- ggplot(temp.dat, aes(x=YearWeek, y=MedianCp, color=as.factor(Index))) + geom_point() + theme(plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=1, angle=90), panel.background=element_rect(fill='white', color='transparent')) + scale_y_continuous(breaks=c(0,5,10,15,20,25,30), limits=c(0,30)) + scale_x_discrete(breaks=dateBreaks) + labs(title=paste('Median Cp of', assays[i],'Assay in Trend Population\nby Order of Detection', sep=' '), y='Median Cp', x='Year-Week') + scale_color_manual(values=c('black','grey29','grey42','grey48','grey71','grey87'), labels=c('First','Second','Third','Fourth','Fifth','Sixth'), name='Detection Order')
temp.file <- paste(imgDir, gsub('\\/','-', assays[i]), '_TimeSeriesCps.png', sep='')
png(temp.file, width = 1400, height = 800)
print(temp.plot)
dev.off()
}
head(cp.bcid.df)
cp.bcid.df[cp.bcid.df$AssayType=='Gene', ]
head(cp.bcid.df[cp.bcid.df$AssayType=='Gene', ])
unique(cp.bcid.df[cp.bcid.df$AssayType=='Gene', 'AssayName'])
as.character(unique(cp.bcid.df[cp.bcid.df$AssayType=='Gene', 'AssayName']))
genes <-0 as.character(unique(cp.bcid.df[cp.bcid.df$AssayType=='Gene', 'AssayName']))
genes <- as.character(unique(cp.bcid.df[cp.bcid.df$AssayType=='Gene', 'AssayName']))
genes
head(cp.bcid.targets.ordered)
cp.bcid.targets.ordered[cp.bcid.targets.ordered$TargetName==genes[1], ]
i <- 1
head(cp.bcid.targets.ordered[cp.bcid.targets.ordered$TargetName==genes[i], ])
a <- cp.bcid.targets.ordered[cp.bcid.targets.ordered$TargetName==genes[i], ]
head(a)
unique(a$TargetTriggerAssay)
do.call(rbind, lapply(1:length(runs.keep), function(x) data.frame(RunDataId = runs.keep[x], TargetMedianCpDelta = cp.bcid.targets.ordered[cp.bcid.targets.ordered$RunDataId==runs.keep[x], 'TargetMedianCp'] - cp.bcid.targets.ordered[cp.bcid.targets.ordered$RunDataId==runs.keep[x] & cp.bcid.targets.ordered[cp.bcid.targets.ordered$RunDataId==runs.keep[x], 'TargetTriggerAssay']==gene[1], 'TargetMedianCp'])))
do.call(rbind, lapply(1:length(runs.keep), function(x) data.frame(RunDataId = runs.keep[x], TargetMedianCpDelta = cp.bcid.targets.ordered[cp.bcid.targets.ordered$RunDataId==runs.keep[x], 'TargetMedianCp'] - cp.bcid.targets.ordered[cp.bcid.targets.ordered$RunDataId==runs.keep[x] & cp.bcid.targets.ordered[cp.bcid.targets.ordered$RunDataId==runs.keep[x], 'TargetTriggerAssay']==genes[1], 'TargetMedianCp'])))
head(a)
a <- a[with(a, order(RunDataId)), ]
head(a)
head(a, 50)
unique(a$RunDataId)
length(unique(a$RunDataId))
genes
targets
i <- 1
temp.dat <- subset(cp.bcid.targets.ordered, TargetName==targets[i])
ggplot(temp.dat, aes(TargetTriggerAssay, TargetMedianCp)) + geom_boxplot() + theme(plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5), panel.background=element_rect(fill='white', color='transparent')) + scale_y_continuous(breaks=c(0,5,10,15,20,25,30), limits=c(0,30)) + labs(title=paste('Median Cp of', targets[i],'by','First Assay\nin Trend BCID Tests', sep=' '), y='Median Cp', x='')
head(cp.bcid.assays.ordered)
cp.bcid.assays.ordered[cp.bcid.assays.ordered$AssayName=='mecA', 'RunDataId']
a <- cp.bcid.assays.ordered[cp.bcid.assays.ordered$AssayName=='mecA', 'RunDataId']
head(a)
a <- cp.bcid.assays.ordered[cp.bcid.assays.ordered$AssayName=='mecA', 'RunDataId']
head(cp.bcid.targets.ordered[cp.bcid.targets.ordered$TargetName=='mecA', ])
unique(cp.bcid.targets.ordered[cp.bcid.targets.ordered$TargetName=='mecA', 'TargetTriggerAssay'])
unique(cp.bcid.targets.ordered[cp.bcid.targets.ordered$TargetName=='mecA', 'TargetTriggerAssay'])
head(cp.bcid.median)
cp.bcid.median[cp.bcid.median==genes[i], ]
i
genes[i]
cp.bcid.median[cp.bcid.median$TargetName==genes[i], ]
a <- cp.bcid.median[cp.bcid.median$TargetName==genes[i], ]
head(a)
temp.dat <- cp.bcid.targets.ordered[cp.bcid.targets.ordered$TargetName==genes[i], ]
head(temp.dat)
temp.dat[with(temp.dat, order(RunDataId)), ]
temp.dat <- temp.dat[with(temp.dat, order(RunDataId)), ]
head(temp.dat, 50)
temp.dat <- cp.bcid.median[cp.bcid.median$TargetName==genes[i], ]
temp.dat <- temp.dat[with(temp.dat, order(RunDataId)), ]
head(temp.dat, 50)
runs.temp <- unique(temp.dat$RunDataId)
head(temp.dat)
temp.diff <- do.call(rbind, lapply(1:length(runs.temp), function(x) data.frame(RunDataId = runs.temp[x], TargetMedianCpDelta = temp.dat[temp.dat$RunDataId==runs.temp[x], 'MedianCp'] - temp.dat[temp.dat$RunDataId==runs.temp[x] & temp.dat[temp.dat$RunDataId==runs.temp[x], 'AssayName']==genes[i], 'MedianCp'])))
head(temp.diff)
temp.dat[temp.dat$RunDataId==849, ]
temp.diff <- do.call(rbind, lapply(1:length(runs.temp), function(x) data.frame(RunDataId = runs.temp[x], AssayName = temp.dat[temp.dat$RunDataId==runs.temp[x], 'AssayName'], TargetMedianCpDelta = temp.dat[temp.dat$RunDataId==runs.temp[x], 'MedianCp'] - temp.dat[temp.dat$RunDataId==runs.temp[x] & temp.dat[temp.dat$RunDataId==runs.temp[x], 'AssayName']==genes[i], 'MedianCp'])))
head(temp.diff)
head(temp.dat)
head(temp.diff)
temp.mrg <- merge(temp.dat, temp.diff, by=c('RunDataId','AssayName'))
head(temp.mrg)
ggplot(temp.mrg, aes(AssayName, TargetMedianCpDetla)) + geom_boxplot()
ggplot(temp.mrg, aes(AssayName, TargetMedianCpDelta)) + geom_boxplot()
temp.diff[temp.diff$AssayName=='mecA', ]
temp.dat[temp.dat$RunDataId==377860,]
temp.diff[temp.diff$RunDataId==377860, ]
temp.diff[temp.diff$RunDataId==377860, ]
runs.temp[runs.temp==377860, ]
runs.temp[runs.temp$RunDataId==377860, ]
runs.temp
runs.temp[runs.temp==377860]
do.call(rbind, lapply(1:length(runs.temp), function(x) data.frame(RunDataId = runs.temp[x], AssayName = temp.dat[temp.dat$RunDataId==runs.temp[x], 'AssayName'], MecACp = temp.dat[temp.dat$RunDataId==runs.temp[x], 'AssayName']==genes[i], 'MedianCp'])))
do.call(rbind, lapply(1:length(runs.temp), function(x) data.frame(RunDataId = runs.temp[x], AssayName = temp.dat[temp.dat$RunDataId==runs.temp[x], 'AssayName'], MecACp = temp.dat[temp.dat$RunDataId==runs[x] & temp.dat[temp.dat$RunDataId==runs.temp[x], 'AssayName']==genes[i], 'MedianCp'])))
do.call(rbind, lapply(1:length(runs.temp), function(x) data.frame(RunDataId = runs.temp[x], AssayName = 'mecA', MedianCp = temp.dat[temp.dat$RunDataId==runs.temp[x] & temp.dat[temp.dat$RunDataId==runs.temp[x], 'AssayName']==genes[i], 'MedianCp'])))
a <- do.call(rbind, lapply(1:length(runs.temp), function(x) data.frame(RunDataId = runs.temp[x], AssayName = 'mecA', MedianCp = temp.dat[temp.dat$RunDataId==runs.temp[x] & temp.dat[temp.dat$RunDataId==runs.temp[x], 'AssayName']==genes[i], 'MedianCp'])))
head(a)
head(cp.bcid.median)
gene.temp <- do.call(rbind, lapply(1:length(runs.temp), function(x) data.frame(RunDataId = runs.temp[x], AssayName = 'mecA', MedianCp = temp.dat[temp.dat$RunDataId==runs.temp[x] & temp.dat[temp.dat$RunDataId==runs.temp[x], 'AssayName']==genes[i], 'MedianCp'])))
length(gene.temp$RunDataId)
length(unique(gene.temp$RunDataId))
head(gene.temp)
rm(diff.temp)
gene.temp <- do.call(rbind, lapply(1:length(runs.temp), function(x) data.frame(RunDataId = runs.temp[x], MedianCp = temp.dat[temp.dat$RunDataId==runs.temp[x] & temp.dat[temp.dat$RunDataId==runs.temp[x], 'AssayName']==genes[i], 'MedianCp'])))
rm(temp.diff)
head(temp.dat)
head(gene.temp)
temp.mrg <- merge(temp.dat, gene.temp, by='RunDataId')
rm(a)
head(temp.mrg)
temp.mrg$MedianCpDelta <- temp.mrg$MedianCp.x - temp.mrg$MedianCpDelta <- temp.mrg$MedianCp.y
temp.mrg$MedianCpDelta <- temp.mrg$MedianCp.x - temp.mrg$MedianCp.y
head(temp.mrg)
head(temp.mrg)
ggplot(temp.mrg, aes(AssayName, MedianCpDelta)) + geom_boxplot()
genes[i]
temp.dat[temp.dat$RunDataId==runs.temp[1] & temp.dat[temp.dat$RunDataId==runs.temp[1], 'AssayName']==genes[1], 'MedianCp']
temp.dat[temp.dat$RunDataId==runs.temp[2] & temp.dat[temp.dat$RunDataId==runs.temp[2], 'AssayName']==genes[1], 'MedianCp']
temp.dat[temp.dat$RunDataId==runs.temp[2] & as.character(temp.dat[temp.dat$RunDataId==runs.temp[2], 'AssayName'])=='mecA', ]
as.character(temp.dat[temp.dat$RunDataId==runs.temp[2], 'AssayName'])
temp.dat[as.character(temp.dat[temp.dat$RunDataId==runs.temp[2], 'AssayName'])=='mecA', ]
temp.dat[temp.dat$RunDataId==runs.temp[2], 'AssayName']
runs.temp[2]
head(temp.dat)
temp.dat[temp.dat$RunDataId==runs.temp[2], ]
subset(temp.dat[temp.dat$RunDataId==runs.temp[2], ], AssayName==genes[i])
subset(temp.dat[temp.dat$RunDataId==runs.temp[2], ], AssayName==genes[i])$MedianCp
gene.temp <- do.call(rbind, lapply(1:length(runs.temp), function(x) data.frame(RunDataId = runs.temp[x], MedianGeneCp = subset(temp.dat[temp.dat$RunDataId==runs.temp[2], ], AssayName==genes[i])$MedianCp)))
head(temp.dat, 20)
head(gene.temp)
gene.temp <- do.call(rbind, lapply(1:length(runs.temp), function(x) data.frame(RunDataId = runs.temp[x], MedianGeneCp = subset(temp.dat[temp.dat$RunDataId==runs.temp[x], ], AssayName==genes[i])$MedianCp)))
head(temp.dat, 20)
head(gene.temp)
temp.mrg <- merge(temp.dat, gene.temp, by='RunDataId')
head(temp.dat, 20)
head(temp.mrg, 20)
temp.mrg$MedianCpDelta <- temp.mrg$MedianCp - temp.mrg$MedianGeneCp
ggplot(temp.mrg, aes(AssayName, MedianCpDelta)) + geom_boxplot()
ggplot(subset(temp.mrg, AssayName != genes[i]), aes(AssayName, MedianCpDelta)) + geom_boxplot()
ggplot(subset(temp.mrg, AssayName != genes[i]), aes(AssayName, MedianCpDelta)) + geom_boxplot() + theme(plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5), panel.background=element_rect(fill='white', color='transparent')) + scale_y_continuous(breaks=c(0,5,10,15,20,25,30), limits=c(0,30)) + labs(title=paste('Median Cp of', targets[i],'by','First Assay\nin Trend BCID Tests', sep=' '), y='Median Cp', x='')
ggplot(subset(temp.mrg, AssayName != genes[i]), aes(AssayName, MedianCpDelta)) + geom_boxplot() + theme(plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5), panel.background=element_rect(fill='white', color='transparent')) + scale_y_continuous(breaks=c(0,5,10,15,20,25,30), limits=c(0,30)) + labs(title=paste('Median Cp of Assay - Median Cp of', gene[i], '\nin Trend BCID Tests', sep=' '), y='Median Cp', x='')
ggplot(subset(temp.mrg, AssayName != genes[i]), aes(AssayName, MedianCpDelta)) + geom_boxplot() + theme(plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5), panel.background=element_rect(fill='white', color='transparent')) + scale_y_continuous(breaks=c(0,5,10,15,20,25,30), limits=c(0,30)) + labs(title=paste('Median Cp of Assay - Median Cp of', genes[i], '\nin Trend BCID Tests', sep=' '), y='Median Cp', x='')
ggplot(subset(temp.mrg, AssayName != genes[i]), aes(AssayName, MedianCpDelta)) + geom_boxplot() + theme(plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5), panel.background=element_rect(fill='white', color='transparent')) + labs(title=paste('Median Cp of Assay - Median Cp of', genes[i], '\nin Trend BCID Tests', sep=' '), y='Median Cp', x='')
genes <- as.character(unique(cp.bcid.df[cp.bcid.df$AssayType=='Gene', 'AssayName']))
for(i in 1:length(genes)) {
temp.dat <- cp.bcid.median[cp.bcid.median$TargetName==genes[i], ]
runs.temp <- unique(temp.dat$RunDataId)
gene.temp <- do.call(rbind, lapply(1:length(runs.temp), function(x) data.frame(RunDataId = runs.temp[x], MedianGeneCp = subset(temp.dat[temp.dat$RunDataId==runs.temp[x], ], AssayName==genes[i])$MedianCp)))
temp.mrg <- merge(temp.dat, gene.temp, by='RunDataId')
temp.mrg$MedianCpDelta <- temp.mrg$MedianCp - temp.mrg$MedianGeneCp
temp.plot <- ggplot(subset(temp.mrg, AssayName != genes[i]), aes(AssayName, MedianCpDelta)) + geom_boxplot() + theme(plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5), panel.background=element_rect(fill='white', color='transparent')) + labs(title=paste('Median Cp of Assay - Median Cp of', genes[i], '\nin Trend BCID Tests', sep=' '), y='Median Cp', x='')
temp.file <- paste(imgDir, gsub('\\/','-', genes[i]), '_DistributionDeltaCps.png', sep='')
png(temp.file, width = 1400, height = 800)
print(temp.plot)
dev.off()
}
FADWcxn <- odbcConnect('FA_DW', uid = 'afaucett', pwd = 'ThisIsAPassword-BAD')
queryVector <- scan('../DataSources/SQL/CpInvestigation/panelsBySite.txt',what=character(),quote="")
query <- paste(queryVector,collapse=" ")
filters.df <- sqlQuery(FADWcxn,query)
setwd('~/FilmArrayTrend/CpInvestigations/')
# load the neccessary libraries
library(RODBC)
library(lubridate)
library(ggplot2)
library(devtools)
require(dateManip)
FADWcxn <- odbcConnect('FA_DW', uid = 'afaucett', pwd = 'ThisIsAPassword-BAD')
queryVector <- scan('../DataSources/SQL/CpInvestigation/panelsBySite.txt',what=character(),quote="")
query <- paste(queryVector,collapse=" ")
filters.df <- sqlQuery(FADWcxn,query)
head(filters.df)
unique(filters.df$PouchTitle)
queryVector <- scan('../DataSources/SQL/CpInvestigation/panelsBySite.txt',what=character(),quote="")
query <- paste(queryVector,collapse=" ")
filters.df <- sqlQuery(FADWcxn,query)
as.character(unique(filters.df$PouchTitle))
as.character(unique(filters.df$PouchTitle))
i <- 1
choose.query <- switch(panels[i],
'Respiratory Panel v1.7' = 'RP',
'BCID Panel v2.0' = 'BCID',
'GI Panel v2.1' = 'GI',
'ME Panel v1.4' = 'ME'
)
panels <- as.character(unique(filters.df$PouchTitle))
choose.query <- switch(panels[i],
'Respiratory Panel v1.7' = 'RP',
'BCID Panel v2.0' = 'BCID',
'GI Panel v2.1' = 'GI',
'ME Panel v1.4' = 'ME'
)
choose.query
panels
i <- 3
choose.query <- switch(panels[i],
'Respiratory Panel v1.7' = 'RP',
'BCID Panel v2.0' = 'BCID',
'GI Panel v2.1' = 'GI',
'ME Panel v1.4' = 'ME'
)
choose.query
panels[1]
i <- 1
choose.query <- switch(panels[i],
'Respiratory Panel v1.7' = 'RP',
'BCID Panel v2.0' = 'BCID',
'GI Panel v2.1' = 'GI',
'ME Panel v1.4' = 'ME'
)
paste('../DataSources/SQL/CpInvestigation/AssayCpByTarget_', choose.query, '.txt', sep='')
if(choose.query != 'RP') {
queryVector <- scan(paste('../DataSources/SQL/CpInvestigation/AssayCpByTarget_', choose.query, '.txt', sep=''), what=character(), quote="")
query <- paste(queryVector,collapse=" ")
test <- sqlQuery(FADWcxn,query)
# cp.bcid.df <- sqlQuery(FADWcxn,query)
}
head(test)
rm(test)
unique(filters.df[filters.df$PouchTitle == panels[i], 'CustomerSiteId'])
i <- 3
choose.query <- switch(panels[i],
'Respiratory Panel v1.7' = 'RP',
'BCID Panel v2.0' = 'BCID',
'GI Panel v2.1' = 'GI',
'ME Panel v1.4' = 'ME'
)
if(choose.query != 'RP') {
queryVector <- scan(paste('../DataSources/SQL/CpInvestigation/AssayCpByTarget_', choose.query, '.txt', sep=''), what=character(), quote="")
query <- paste(queryVector,collapse=" ")
cp.bcid.df <- sqlQuery(FADWcxn,query)
} else {
choose.sites <- as.character(unique(filters.df[filters.df$PouchTitle == panels[i], 'CustomerSiteId']))
for(j in 1:length(choose.sites)) {
print(choose.sites[i])
}
}
choose.query <- switch(panels[i],
'Respiratory Panel v1.7' = 'RP',
'BCID Panel v2.0' = 'BCID',
'GI Panel v2.1' = 'GI',
'ME Panel v1.4' = 'ME'
)
if(choose.query != 'RP') {
queryVector <- scan(paste('../DataSources/SQL/CpInvestigation/AssayCpByTarget_', choose.query, '.txt', sep=''), what=character(), quote="")
query <- paste(queryVector,collapse=" ")
cp.bcid.df <- sqlQuery(FADWcxn,query)
} else {
choose.sites <- as.character(unique(filters.df[filters.df$PouchTitle == panels[i], 'CustomerSiteId']))
for(j in 1:length(choose.sites)) {
print(choose.sites[j])
}
}
scan(paste('../DataSources/SQL/CpInvestigation/AssayCpByTarget_', choose.query, '.txt', sep=''), what=character(), quote="")
queryVector <- scan(paste('../DataSources/SQL/CpInvestigation/AssayCpByTarget_', choose.query, '.txt', sep=''), what=character(), quote="")
queryVector
c(queryVector, choose.sites[1])
paste(c(queryVector, choose.sites[1]), collapse=" ")
choose.query
paste(imgDir, choose.query, gsub('\\/','-', assays[i]), '_DistributionCps.png', sep='')
paste(imgDir, choose.query, '_', gsub('\\/','-', assays[i]), '_DistributionCps.png', sep='')
query
i
choose.query
choose.sites <- as.character(unique(filters.df[filters.df$PouchTitle == panels[i], 'CustomerSiteId']))
choose.sites
choose.sites <= choose.sites[1:2]
choose.sites[1:2]
choose.sites <- choose.sites[1:2]
cp.df <- c()
for(j in 1:length(choose.sites)) {
queryVector <- scan(paste('../DataSources/SQL/CpInvestigation/AssayCpByTarget_', choose.query, '.txt', sep=''), what=character(), quote="")
query <- paste(c(queryVector, choose.sites[j]), collapse=" ")
cp.temp <- sqlQuery(FADWcxn, query)
cp.df <- rbind(cp.df, cp.temp)
}
head(cp.df)
unique(cp.df$CustomerSiteId)
query
41649 + 35853
odbcClose(FADWcxn)
runs <- unique(cp.df$RunDataId)
runs
cp.median <- do.call(rbind, lapply(1:10, function(x)
do.call(rbind, lapply(1:length(unique(cp.df[cp.df$RunDataId==runs[x], 'TargetName'])), function(y)
do.call(rbind,  lapply(1:length(unique(cp.df[cp.df$RunDataId==runs[x] & cp.df$TargetName==unique(cp.df[cp.df$RunDataId==runs[x], 'TargetName'])[y],'AssayName'])), function(z)
data.frame(RunDataId = runs[x],
TargetName = unique(cp.df[cp.df$RunDataId==runs[x], 'TargetName'])[y],
AssayName = unique(cp.df[cp.df$RunDataId==runs[x] & cp.df$TargetName==unique(cp.df[cp.df$RunDataId==runs[x], 'TargetName'])[y], 'AssayName'])[z],
MedianCp = median(cp.df[cp.df$RunDataId==runs[x] & cp.df$TargetName==unique(cp.df[cp.df$RunDataId==runs[x],'TargetName'])[y] & cp.df$AssayName==unique(cp.df[cp.df$RunDataId==runs[x] & cp.df$TargetName==unique(cp.df[cp.df$RunDataId==runs[x],'TargetName'])[y],'AssayName'])[z], 'Cp'])
)
))
))
))
startYear <- 2013
calendar.df <- createCalendarLikeMicrosoft(startYear, 'Week')
calendar.df <- transformToEpiWeeks(calendar.df)
calendar.df$YearWeek <- with(calendar.df, ifelse(Week < 10, paste(Year, Week, sep='-0'), paste(Year, Week, sep='-')))
cp.median <- do.call(rbind, lapply(1:length(runs), function(x)
do.call(rbind, lapply(1:length(unique(cp.df[cp.df$RunDataId==runs[x], 'TargetName'])), function(y)
do.call(rbind,  lapply(1:length(unique(cp.df[cp.df$RunDataId==runs[x] & cp.df$TargetName==unique(cp.df[cp.df$RunDataId==runs[x], 'TargetName'])[y],'AssayName'])), function(z)
data.frame(RunDataId = runs[x],
TargetName = unique(cp.df[cp.df$RunDataId==runs[x], 'TargetName'])[y],
AssayName = unique(cp.df[cp.df$RunDataId==runs[x] & cp.df$TargetName==unique(cp.df[cp.df$RunDataId==runs[x], 'TargetName'])[y], 'AssayName'])[z],
MedianCp = median(cp.df[cp.df$RunDataId==runs[x] & cp.df$TargetName==unique(cp.df[cp.df$RunDataId==runs[x],'TargetName'])[y] & cp.df$AssayName==unique(cp.df[cp.df$RunDataId==runs[x] & cp.df$TargetName==unique(cp.df[cp.df$RunDataId==runs[x],'TargetName'])[y],'AssayName'])[z], 'Cp'])
)
))
))
))
imgDir <- 'Figures/'
dateBreaks <- unique(calendar.df[calendar.df$Year >= startYear, 'YearWeek'])[order(unique(calendar.df[calendar.df$Year >= startYear, 'YearWeek']))][seq(1, length(unique(calendar.df[calendar.df$Year >= startYear, 'YearWeek'])), 8)]
setwd('~/FilmArrayTrend/CpInvestigations/')
# load the neccessary libraries
library(RODBC)
library(lubridate)
library(ggplot2)
library(devtools)
require(dateManip)
# create an Epi date calendar that will be used by all the data sets
startYear <- 2013
calendar.df <- createCalendarLikeMicrosoft(startYear, 'Week')
calendar.df <- transformToEpiWeeks(calendar.df)
calendar.df$YearWeek <- with(calendar.df, ifelse(Week < 10, paste(Year, Week, sep='-0'), paste(Year, Week, sep='-')))
# set up some constants
imgDir <- 'Figures/'
dateBreaks <- unique(calendar.df[calendar.df$Year >= startYear, 'YearWeek'])[order(unique(calendar.df[calendar.df$Year >= startYear, 'YearWeek']))][seq(1, length(unique(calendar.df[calendar.df$Year >= startYear, 'YearWeek'])), 8)]
FADWcxn <- odbcConnect('FA_DW', uid = 'afaucett', pwd = 'ThisIsAPassword-BAD')
queryVector <- scan('../DataSources/SQL/CpInvestigation/panelsBySite.txt',what=character(),quote="")
query <- paste(queryVector,collapse=" ")
filters.df <- sqlQuery(FADWcxn,query)
odbcClose(FADWcxn)
panels <- as.character(unique(filters.df$PouchTitle))
i <- 1
choose.query <- switch(panels[i],
'Respiratory Panel v1.7' = 'RP',
'BCID Panel v2.0' = 'BCID',
'GI Panel v2.1' = 'GI',
'ME Panel v1.4' = 'ME'
)
choose.query
FADWcxn <- odbcConnect('FA_DW', uid = 'afaucett', pwd = 'ThisIsAPassword-BAD')
queryVector <- scan(paste('../DataSources/SQL/CpInvestigation/AssayCpByTarget_', choose.query, '.txt', sep=''), what=character(), quote="")
query <- paste(queryVector, collapse=" ")
cp.df <- sqlQuery(FADWcxn, query)
odbcClose(FADWcxn)
head(cp.df)
runs <- unique(cp.df$RunDataId)
cp.median <- do.call(rbind, lapply(1:length(runs), function(x)
do.call(rbind, lapply(1:length(unique(cp.df[cp.df$RunDataId==runs[x], 'TargetName'])), function(y)
do.call(rbind,  lapply(1:length(unique(cp.df[cp.df$RunDataId==runs[x] & cp.df$TargetName==unique(cp.df[cp.df$RunDataId==runs[x], 'TargetName'])[y],'AssayName'])), function(z)
data.frame(RunDataId = runs[x],
TargetName = unique(cp.df[cp.df$RunDataId==runs[x], 'TargetName'])[y],
AssayName = unique(cp.df[cp.df$RunDataId==runs[x] & cp.df$TargetName==unique(cp.df[cp.df$RunDataId==runs[x], 'TargetName'])[y], 'AssayName'])[z],
MedianCp = median(cp.df[cp.df$RunDataId==runs[x] & cp.df$TargetName==unique(cp.df[cp.df$RunDataId==runs[x],'TargetName'])[y] & cp.df$AssayName==unique(cp.df[cp.df$RunDataId==runs[x] & cp.df$TargetName==unique(cp.df[cp.df$RunDataId==runs[x],'TargetName'])[y],'AssayName'])[z], 'Cp'])
)
))
))
))
head(cp.median)
cp.targets <- do.call(rbind, lapply(1:length(runs), function(x)
do.call(rbind, lapply(1:length(unique(cp.median[cp.median$RunDataId==runs[x], 'TargetName'])), function(y)
data.frame(RunDataId = runs[x],
TargetName = unique(cp.median[cp.median$RunDataId==runs[x], 'TargetName'])[y],
TargetTriggerAssay = cp.median[cp.median$RunDataId==runs[x] & cp.median$TargetName==unique(cp.median[cp.median$RunDataId==runs[x], 'TargetName'])[y] & cp.median$MedianCp==min(cp.median[cp.median$RunDataId==runs[x] & cp.median$TargetName==unique(cp.median[cp.median$RunDataId==runs[x], 'TargetName'])[y], 'MedianCp']),'AssayName'],
TargetMedianCp = min(cp.median[cp.median$RunDataId==runs[x] & cp.median$TargetName==unique(cp.median[cp.median$RunDataId==runs[x], 'TargetName'])[y], 'MedianCp'])
)
))
))
cp.assays <- merge(unique(cp.median[,c('RunDataId','AssayName','MedianCp')]), unique(cp.df[,c('RunDataId','AssayName','PositiveAssays','PositiveGenes','Date')]), by=c('RunDataId','AssayName'))
cp.targets <- merge(cp.targets, unique(cp.df[,c('RunDataId','TargetName','PositiveAssays','PositiveGenes','Date')]), by=c('RunDataId','TargetName'))
cp.assays <- merge(cp.assays, calendar.df[,c('Date','YearWeek')], by='Date')
cp.targets <- merge(cp.targets, calendar.df[,c('Date','YearWeek')], by='Date')
runs.keep <- unique(cp.targets$RunDataId)
cp.assays.ordered <- do.call(rbind, lapply(1:length(runs.keep), function(x) data.frame(cp.assays[cp.assays$RunDataId==runs.keep[x], ][order(cp.assays[cp.assays$RunDataId==runs.keep[x], 'MedianCp']), ], Index = seq(1, length(cp.assays[cp.assays$RunDataId==runs.keep[x], 'MedianCp']), 1))))
cp.targets.ordered <- do.call(rbind, lapply(1:length(runs.keep), function(x) data.frame(cp.targets[cp.targets$RunDataId==runs.keep[x], ][order(cp.targets[cp.targets$RunDataId==runs.keep[x], 'TargetMedianCp']), ], Index = seq(1, length(cp.targets[cp.targets$RunDataId==runs.keep[x], 'TargetMedianCp']), 1))))
assays <- as.character(unique(cp.assays.ordered$AssayName))
assays
k <- 1
temp.dat <- merge(data.frame(YearWeek = unique(calendar.df[calendar.df$YearWeek >= dateBreaks[1], c('YearWeek')])), subset(cp.assays.ordered, AssayName==assays[k]), by='YearWeek', all.x=TRUE)
temp.dat[is.na(temp.dat$RunDataId), 'MedianCp'] <- NA
temp.dat[is.na(temp.dat$RunDataId), 'Index'] <- 1
ggplot(temp.dat, aes(x=YearWeek, y=MedianCp, color=as.factor(Index))) + geom_point() + theme(plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=1, angle=90), panel.background=element_rect(fill='white', color='transparent')) + scale_y_continuous(breaks=c(0,5,10,15,20,25,30), limits=c(0,30)) + scale_x_discrete(breaks=dateBreaks) + labs(title=paste('Median Cp of', assays[k],'Assay in Trend Population\nby Order of Detection', sep=' '), y='Median Cp', x='Year-Week') + scale_color_manual(values=c('black','grey29','grey42','grey48','grey71','grey87'), labels=c('First','Second','Third','Fourth','Fifth','Sixth'), name='Detection Order')
temp.dat <- subset(cp.assays.ordered, AssayName==assays[k])
ggplot(temp.dat, aes(as.factor(Index), MedianCp)) + geom_boxplot() + theme(plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5), panel.background=element_rect(fill='white', color='transparent')) + scale_y_continuous(breaks=c(0,5,10,15,20,25,30), limits=c(0,30)) + labs(title=paste('Median Cp of', assays[k],'in Trend Population\nby Order of Detection', sep=' '), y='Median Cp', x='Order of Detection')
targets <- as.character(unique(cp.targets.ordered$TargetName))
targets
targets[k]
temp.dat <- subset(cp.targets.ordered, TargetName==targets[k])
length(as.character(unique(temp.dat$TargetTriggerAssay)))
ggplot(temp.dat, aes(TargetTriggerAssay, TargetMedianCp)) + geom_boxplot() + theme(plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5), panel.background=element_rect(fill='white', color='transparent')) + scale_y_continuous(breaks=c(0,5,10,15,20,25,30), limits=c(0,30)) + labs(title=paste('Median Cp of', targets[k],'by','First Assay\nin Trend', choose.query, 'Tests', sep=' '), y='Median Cp', x='')
genes <- as.character(unique(cp.df[cp.df$AssayType=='Gene', 'AssayName']))
temp.dat <- cp.median[cp.median$TargetName==genes[k], ]
runs.temp <- unique(temp.dat$RunDataId)
gene.temp <- do.call(rbind, lapply(1:length(runs.temp), function(x) data.frame(RunDataId = runs.temp[x], MedianGeneCp = subset(temp.dat[temp.dat$RunDataId==runs.temp[x], ], AssayName==genes[k])$MedianCp)))
temp.mrg <- merge(temp.dat, gene.temp, by='RunDataId')
temp.mrg$MedianCpDelta <- temp.mrg$MedianCp - temp.mrg$MedianGeneCp
ggplot(subset(temp.mrg, AssayName != genes[k]), aes(AssayName, MedianCpDelta)) + geom_boxplot() + theme(plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5), panel.background=element_rect(fill='white', color='transparent')) + labs(title=paste('Median Cp of Assay - Median Cp of', genes[k], '\nin Trend', choose.query ,'Tests', sep=' '), y='Median Cp', x='')
paste(imgDir, choose.query, '_', gsub('\\/','-', genes[k]), '_DistributionDeltaCps.png', sep='')
panels
i <- 3
panels[i]
choose.query <- switch(panels[i],
'Respiratory Panel v1.7' = 'RP',
'BCID Panel v2.0' = 'BCID',
'GI Panel v2.1' = 'GI',
'ME Panel v1.4' = 'ME'
)
if(choose.query != 'RP') {
queryVector <- scan(paste('../DataSources/SQL/CpInvestigation/AssayCpByTarget_', choose.query, '.txt', sep=''), what=character(), quote="")
query <- paste(queryVector, collapse=" ")
cp.df <- sqlQuery(FADWcxn, query)
}
as.character(unique(filters.df[filters.df$PouchTitle == panels[i], 'CustomerSiteId']))
as.character(unique(filters.df[filters.df$PouchTitle == panels[i], 'CustomerSiteId']))[1]
if(choose.query != 'RP') {
queryVector <- scan(paste('../DataSources/SQL/CpInvestigation/AssayCpByTarget_', choose.query, '.txt', sep=''), what=character(), quote="")
query <- paste(queryVector, collapse=" ")
cp.df <- sqlQuery(FADWcxn, query)
} else {
choose.sites <- as.character(unique(filters.df[filters.df$PouchTitle == panels[i], 'CustomerSiteId']))[1]
cp.df <- c()
for(j in 1:length(choose.sites)) {
queryVector <- scan(paste('../DataSources/SQL/CpInvestigation/AssayCpByTarget_', choose.query, '.txt', sep=''), what=character(), quote="")
query <- paste(c(queryVector, choose.sites[j]), collapse=" ")
cp.temp <- sqlQuery(FADWcxn, query)
cp.df <- rbind(cp.df, cp.temp)
}
}
odbcClose(FADWcxn)
FADWcxn <- odbcConnect('FA_DW', uid = 'afaucett', pwd = 'ThisIsAPassword-BAD')
if(choose.query != 'RP') {
FADWcxn <- odbcConnect('FA_DW', uid = 'afaucett', pwd = 'ThisIsAPassword-BAD')
queryVector <- scan(paste('../DataSources/SQL/CpInvestigation/AssayCpByTarget_', choose.query, '.txt', sep=''), what=character(), quote="")
query <- paste(queryVector, collapse=" ")
cp.df <- sqlQuery(FADWcxn, query)
} else {
choose.sites <- as.character(unique(filters.df[filters.df$PouchTitle == panels[i], 'CustomerSiteId']))[1]
cp.df <- c()
for(j in 1:length(choose.sites)) {
FADWcxn <- odbcConnect('FA_DW', uid = 'afaucett', pwd = 'ThisIsAPassword-BAD')
queryVector <- scan(paste('../DataSources/SQL/CpInvestigation/AssayCpByTarget_', choose.query, '.txt', sep=''), what=character(), quote="")
query <- paste(c(queryVector, choose.sites[j]), collapse=" ")
cp.temp <- sqlQuery(FADWcxn, query)
cp.df <- rbind(cp.df, cp.temp)
}
}
odbcClose(FADWcxn)
runs <- unique(cp.df$RunDataId)
cp.median <- do.call(rbind, lapply(1:length(runs), function(x)
do.call(rbind, lapply(1:length(unique(cp.df[cp.df$RunDataId==runs[x], 'TargetName'])), function(y)
do.call(rbind,  lapply(1:length(unique(cp.df[cp.df$RunDataId==runs[x] & cp.df$TargetName==unique(cp.df[cp.df$RunDataId==runs[x], 'TargetName'])[y],'AssayName'])), function(z)
data.frame(RunDataId = runs[x],
TargetName = unique(cp.df[cp.df$RunDataId==runs[x], 'TargetName'])[y],
AssayName = unique(cp.df[cp.df$RunDataId==runs[x] & cp.df$TargetName==unique(cp.df[cp.df$RunDataId==runs[x], 'TargetName'])[y], 'AssayName'])[z],
MedianCp = median(cp.df[cp.df$RunDataId==runs[x] & cp.df$TargetName==unique(cp.df[cp.df$RunDataId==runs[x],'TargetName'])[y] & cp.df$AssayName==unique(cp.df[cp.df$RunDataId==runs[x] & cp.df$TargetName==unique(cp.df[cp.df$RunDataId==runs[x],'TargetName'])[y],'AssayName'])[z], 'Cp'])
)
))
))
))
# next, for each interpretation, find the minimum median Cp of all assays contributing to the interpretation
cp.targets <- do.call(rbind, lapply(1:length(runs), function(x)
do.call(rbind, lapply(1:length(unique(cp.median[cp.median$RunDataId==runs[x], 'TargetName'])), function(y)
data.frame(RunDataId = runs[x],
TargetName = unique(cp.median[cp.median$RunDataId==runs[x], 'TargetName'])[y],
TargetTriggerAssay = cp.median[cp.median$RunDataId==runs[x] & cp.median$TargetName==unique(cp.median[cp.median$RunDataId==runs[x], 'TargetName'])[y] & cp.median$MedianCp==min(cp.median[cp.median$RunDataId==runs[x] & cp.median$TargetName==unique(cp.median[cp.median$RunDataId==runs[x], 'TargetName'])[y], 'MedianCp']),'AssayName'],
TargetMedianCp = min(cp.median[cp.median$RunDataId==runs[x] & cp.median$TargetName==unique(cp.median[cp.median$RunDataId==runs[x], 'TargetName'])[y], 'MedianCp'])
)
))
))
# using the RunDataId, join on the Epi date and the number of positive targets in the test, then create an index of positives
# do this for both the assay data and the target data
cp.assays <- merge(unique(cp.median[,c('RunDataId','AssayName','MedianCp')]), unique(cp.df[,c('RunDataId','AssayName','PositiveAssays','PositiveGenes','Date')]), by=c('RunDataId','AssayName'))
cp.targets <- merge(cp.targets, unique(cp.df[,c('RunDataId','TargetName','PositiveAssays','PositiveGenes','Date')]), by=c('RunDataId','TargetName'))
cp.assays <- merge(cp.assays, calendar.df[,c('Date','YearWeek')], by='Date')
cp.targets <- merge(cp.targets, calendar.df[,c('Date','YearWeek')], by='Date')
# because the runs that happen prior to the start year are not in the data set (per the merge to calendar.df), it's neccessary to update the runs variable
runs.keep <- unique(cp.targets$RunDataId)
cp.assays.ordered <- do.call(rbind, lapply(1:length(runs.keep), function(x) data.frame(cp.assays[cp.assays$RunDataId==runs.keep[x], ][order(cp.assays[cp.assays$RunDataId==runs.keep[x], 'MedianCp']), ], Index = seq(1, length(cp.assays[cp.assays$RunDataId==runs.keep[x], 'MedianCp']), 1))))
cp.targets.ordered <- do.call(rbind, lapply(1:length(runs.keep), function(x) data.frame(cp.targets[cp.targets$RunDataId==runs.keep[x], ][order(cp.targets[cp.targets$RunDataId==runs.keep[x], 'TargetMedianCp']), ], Index = seq(1, length(cp.targets[cp.targets$RunDataId==runs.keep[x], 'TargetMedianCp']), 1))))
assays <- as.character(unique(cp.assays.ordered$AssayName))
k
temp.dat <- merge(data.frame(YearWeek = unique(calendar.df[calendar.df$YearWeek >= dateBreaks[1], c('YearWeek')])), subset(cp.assays.ordered, AssayName==assays[k]), by='YearWeek', all.x=TRUE)
temp.dat[is.na(temp.dat$RunDataId), 'MedianCp'] <- NA
temp.dat[is.na(temp.dat$RunDataId), 'Index'] <- 1
ggplot(temp.dat, aes(x=YearWeek, y=MedianCp, color=as.factor(Index))) + geom_point() + theme(plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=1, angle=90), panel.background=element_rect(fill='white', color='transparent')) + scale_y_continuous(breaks=c(0,5,10,15,20,25,30), limits=c(0,30)) + scale_x_discrete(breaks=dateBreaks) + labs(title=paste('Median Cp of', assays[k],'Assay in Trend Population\nby Order of Detection', sep=' '), y='Median Cp', x='Year-Week') + scale_color_manual(values=c('black','grey29','grey42','grey48','grey71','grey87'), labels=c('First','Second','Third','Fourth','Fifth','Sixth'), name='Detection Order')
head(temp.dat)
max(temp.dat$PositiveAssays)
max(temp.dat$PositiveAssays, na.rm=TRUE)
max(temp.dat$Index)
heat.colors(6)
ggplot(temp.dat, aes(x=YearWeek, y=MedianCp, color=as.factor(Index))) + geom_point(size=1.5) + theme(plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=1, angle=90), panel.background=element_rect(fill='white', color='transparent')) + scale_y_continuous(breaks=c(0,5,10,15,20,25,30), limits=c(0,30)) + scale_x_discrete(breaks=dateBreaks) + labs(title=paste('Median Cp of', assays[k],'Assay in Trend Population\nby Order of Detection', sep=' '), y='Median Cp', x='Year-Week') + scale_color_manual(values=c(heat.colors(6)), labels=c('First','Second','Third','Fourth','Fifth','Sixth'), name='Detection Order')
choose.sites
paste(imgDir, choose.query, '_', choose.sites, '_', gsub('\\/','-', assays[k]), '_TimeSeriesCps.png', sep='')
k <- 2
temp.dat <- merge(data.frame(YearWeek = unique(calendar.df[calendar.df$YearWeek >= dateBreaks[1], c('YearWeek')])), subset(cp.assays.ordered, AssayName==assays[k]), by='YearWeek', all.x=TRUE)
temp.dat[is.na(temp.dat$RunDataId), 'MedianCp'] <- NA
temp.dat[is.na(temp.dat$RunDataId), 'Index'] <- 1
ggplot(temp.dat, aes(x=YearWeek, y=MedianCp, color=as.factor(Index))) + geom_point(size=1.5) + theme(plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=1, angle=90), panel.background=element_rect(fill='white', color='transparent')) + scale_y_continuous(breaks=c(0,5,10,15,20,25,30), limits=c(0,30)) + scale_x_discrete(breaks=dateBreaks) + labs(title=paste('Median Cp of', assays[k],'Assay in Trend Population\nby Order of Detection', sep=' '), y='Median Cp', x='Year-Week') + scale_color_manual(values=c(heat.colors(6)), labels=c('First','Second','Third','Fourth','Fifth','Sixth'), name='Detection Order')
assays[k]
ggplot
ggplot(temp.dat, aes(x=YearWeek, y=MedianCp, color=as.factor(Index))) + geom_point(size=1.5) + theme(plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=1, angle=90), panel.background=element_rect(fill='white', color='transparent')) + scale_y_continuous(breaks=c(0,5,10,15,20,25,30), limits=c(0,30)) + scale_x_discrete(breaks=dateBreaks) + labs(title=paste('Median Cp of', assays[k],'Assay in Trend Population\nby Order of Detection', sep=' '), y='Median Cp', x='Year-Week') + scale_color_manual(values=c(heat.colors(6)), labels=c('First','Second','Third','Fourth','Fifth','Sixth'), name='Detection Order')
max(temp.dat$Index)
color.count <- max(temp.dat$Index)
color.count <- max(temp.dat$Index, na.rm=TRUE)
ggplot(temp.dat, aes(x=YearWeek, y=MedianCp, color=as.factor(Index))) + geom_point(size=1.5) + theme(plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=1, angle=90), panel.background=element_rect(fill='white', color='transparent')) + scale_y_continuous(breaks=c(0,5,10,15,20,25,30), limits=c(0,30)) + scale_x_discrete(breaks=dateBreaks) + labs(title=paste('Median Cp of', assays[k],'Assay in Trend Population\nby Order of Detection', sep=' '), y='Median Cp', x='Year-Week') + scale_color_manual(values=c(heat.colors(color.count)), labels=c('First','Second','Third','Fourth','Fifth','Sixth','Seventh','Eighth','Ninth','Tenth'), name='Detection Order')
temp.dat <- subset(cp.assays.ordered, AssayName==assays[k])
ggplot(temp.dat, aes(as.factor(Index), MedianCp)) + geom_boxplot() + theme(plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5), panel.background=element_rect(fill='white', color='transparent')) + scale_y_continuous(breaks=c(0,5,10,15,20,25,30), limits=c(0,30)) + labs(title=paste('Median Cp of', assays[k],'in Trend Population\nby Order of Detection', sep=' '), y='Median Cp', x='Order of Detection')
targets <- as.character(unique(cp.targets.ordered$TargetName))
targets
k <- 2
temp.dat <- subset(cp.targets.ordered, TargetName==targets[k])
ggplot(temp.dat, aes(TargetTriggerAssay, TargetMedianCp)) + geom_boxplot() + theme(plot.title=element_text(hjust=0.5), text=element_text(size=20, color='black', face='bold'), axis.text=element_text(size=18, color='black', face='bold'), axis.text.x=element_text(hjust=0.5), panel.background=element_rect(fill='white', color='transparent')) + scale_y_continuous(breaks=c(0,5,10,15,20,25,30), limits=c(0,30)) + labs(title=paste('Median Cp of', targets[k],'by','First Assay\nin Trend', choose.query, 'Tests', sep=' '), y='Median Cp', x='')
